/*
 *
 * (C) COPYRIGHT 2019 ARM Limited. All rights reserved.
 *
 * This program is free software and is provided to you under the terms of the
 * GNU General Public License version 2 as published by the Free Software
 * Foundation, and any use by you of this program is subject to the terms
 * of such GNU licence.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you can access it online at
 * http://www.gnu.org/licenses/gpl-2.0.html.
 *
 * SPDX-License-Identifier: GPL-2.0
 *
 */

/*
 * This header was autogenerated, it should not be edited.
 */

#ifndef _GPU_CSF_CSHW_REGISTERS_H_
#define _GPU_CSF_CSHW_REGISTERS_H_

/*
 * Begin register sets
 */

/* GPU_REGISTERS base address */
#define GPU_REGISTERS_BASE 0x0000000
#define GPU_REGISTERS_REG(r) (GPU_REGISTERS_BASE + (r))

/* MCU_SUBSYSTEM base address */
#define MCU_SUBSYSTEM_BASE 0x0020000
#define MCU_SUBSYSTEM_REG(r) (MCU_SUBSYSTEM_BASE + (r))

/* CSHW base address */
#define CSHW_BASE 0x0030000
#define CSHW_REG(r) (CSHW_BASE + (r))

/* USER base address */
#define USER_BASE 0x0010000
#define USER_REG(r) (USER_BASE + (r))

/* End register sets */

/*
 * Begin register offsets
 */

/* GPU_REGISTERS register offsets */
#define GPU_CONTROL 0x0000 /* () GPU control registers */
#define JOB_CONTROL 0x1000 /* () Job control registers */
#define MMU_STAGE1 0x2000 /* () MMU control registers */
#define GPU_CONTROL_MCU 0x3000 /* () MCU control registers */

/* MCU_SUBSYSTEM register offsets */
#define DOORBELL_CFG 0x0000 /* () MCU doorbell config registers */
#define DOORBELL_SET 0x1000 /* () MCU doorbell registers */
#define SEGMENT_CONTROL 0x2000 /* () MCU segment control registers */
#define ACCESS_CONTROL 0x3000 /* () MCU access control registers */
#define TIMERS 0x4000 /* () MCU timer control registers */

/* CSHW register offsets */
#define CSHW_CSHW_CTRL 0x0000 /* () CSHW Control registers */
#define CSHW_ITER_COMPUTE_0 0x1000 /* () Compute Iterator 0 registers */
#define CSHW_ITER_COMPUTE(n) (CSHW_ITER_COMPUTE_0 + (n)*256)
#define CSHW_ITER_COMPUTE_REG(n, r) (CSHW_ITER_COMPUTE(n) + ITER_REG(r))
#define CSHW_ITER_COMPUTE_COUNT 16
#define CSHW_ITER_FRAGMENT_0 0x2000 /* () Fragment Iterator 0 registers */
#define CSHW_ITER_FRAGMENT(n) (CSHW_ITER_FRAGMENT_0 + (n)*256)
#define CSHW_ITER_FRAGMENT_REG(n, r) (CSHW_ITER_FRAGMENT(n) + ITER_REG(r))
#define CSHW_ITER_FRAGMENT_COUNT 16
#define CSHW_ITER_TILER_0 0x3000 /* () Tiler Iterator 0 registers */
#define CSHW_ITER_TILER(n) (CSHW_ITER_TILER_0 + (n)*256)
#define CSHW_ITER_TILER_REG(n, r) (CSHW_ITER_TILER(n) + ITER_REG(r))
#define CSHW_ITER_TILER_COUNT 16
#define CSHW_CSHWIF_0 0x4000 /* () CSHWIF 0 registers */
#define CSHW_CSHWIF(n) (CSHW_CSHWIF_0 + (n)*256)
#define CSHW_CSHWIF_REG(n, r) (CSHW_CSHWIF(n) + CSHWIF_REG(r))
#define CSHW_CSHWIF_COUNT 32
#define CSHW_SCOREBOARD 0x6000 /* () Scoreboards registers */
#define CSHW_CSHWIF_REGFILE_0 0x8000 /* () CSHWIF 0 architectural register file */
#define CSHW_CSHWIF_REGFILE(n) (CSHW_CSHWIF_REGFILE_0 + (n)*1024)
#define CSHW_CSHWIF_REGFILE_REG(n, r) (CSHW_CSHWIF_REGFILE(n) + CSHWIF_REGFILE_REG(r))
#define CSHW_CSHWIF_REGFILE_COUNT 32

/* CSHW_CTRL register offsets */
#define CSHW_FEATURES 0x0004 /* () CSHW common features */
#define CSHW_FEATURES_CSHWIF_0 0x0010 /* () Features for interface 0 */
#define CSHW_FEATURES_CSHWIF(n) (CSHW_FEATURES_CSHWIF_0 + (n)*4)
#define CSHW_FEATURES_CSHWIF_COUNT 32
#define CSHW_FEATURES_ITER_COMPUTE 0x00A0 /* () Compute iterator features */
#define CSHW_FEATURES_ITER_FRAGMENT 0x00A4 /* () Fragment iterator features */
#define CSHW_FEATURES_ITER_TILER 0x00A8 /* () Tiler iterator features */
#define CSHW_FEATURES_SCOREBOARD 0x00AC /* () Scoreboard features */
#define CSHW_PROGRESS_TIMER_COMPUTE 0x00C0 /* () Timeout value for compute task */
#define CSHW_PROGRESS_TIMER_FRAGMENT 0x00C4 /* () Timeout value for fragment task */
#define CSHW_PROGRESS_TIMER_TILER 0x00C8 /* () Timeout value for tiler or IDVS task */
#define CSHW_IDVS_CTRL 0x00D0 /* () IDVS control */

/* ITER register offsets */
#define ITER_CTRL 0x0000 /* (RW) Iterator control */
#define ITER_STATUS 0x0004 /* (RO) Iterator status */
#define ITER_JASID 0x0008 /* () Iterator address space ID */
#define ITER_ENDPOINT_ALLOW_LO 0x0010 /* () Iterator endpoint mask, low word */
#define ITER_ENDPOINT_ALLOW_HI 0x0014 /* () Iterator endpoint mask, high word */
#define ITER_ENDPOINT_READY_LO 0x0018 /* (RO) Iterator endpoint ready status, low word */
#define ITER_ENDPOINT_READY_HI 0x001C /* (RO) Iterator endpoint ready status, high word */
#define ITER_QUEUE_COUNT 0x0020 /* (RO) Iterator command queue status */
#define ITER_QUEUE_WATERMARK 0x0024 /* (RW) Iterator low tide control */
#define ITER_SUSPEND_DMA_BUF_LO 0x0030 /* () Suspend buffer address, low word */
#define ITER_SUSPEND_DMA_BUF_HI 0x0034 /* () Suspend buffer address, high word */
#define ITER_SUSPEND_DMA_JASID 0x0038 /* () Suspend buffer address space */
#define ITER_SUSPEND_STATE_INDEX 0x003C /* () Suspend state index */
#define ITER_SUSPEND_STATE_DATA_0 0x0040 /* () Iterator 0 suspend/resume data */
#define ITER_SUSPEND_STATE_DATA(n) (ITER_SUSPEND_STATE_DATA_0 + (n)*4)
#define ITER_SUSPEND_STATE_DATA_COUNT 16
#define ITER_SUSPEND_ENDPOINT_BUF_LO 0x0080 /* () Endpoint suspend buffer address, low word */
#define ITER_SUSPEND_ENDPOINT_BUF_HI 0x0084 /* () Endpoint suspend buffer address, high word */
#define ITER_SUSPEND_ENDPOINT_JASID 0x0088 /* () Endpoint suspend buffer address space */
#define ITER_PATCH_ITEMS 0x0090 /* () Last patch item */
#define ITER_PATCH_INDEX 0x0094 /* () Patch index */
#define ITER_PATCH_VALUE 0x0098 /* () Patch value */
#define ITER_BLOCKED_SB_ENTRY 0x00A0 /* (RW) Blocked scoreboard entry */
#define ITER_ENDPOINT_EVENT 0x00A4 /* (RO) Event status */
#define ITER_ENDPOINT_CLEAR 0x00B0 /* (RW) Event clear */
#define ITER_ENDPOINT_RESPONSE 0x00B4 /* (RW) Event response */
#define ITER_ENDPOINT_RESPONSE_PAYLOAD_LO 0x00B8 /* (RW) Event response payload, low word */
#define ITER_ENDPOINT_RESPONSE_PAYLOAD_HI 0x00BC /* (RW) Event response payload, high word */
#define ITER_SHADER_DOORBELL_RAW 0x00C0 /* () Doorbell event raw status */
#define ITER_SHADER_DOORBELL_MASK 0x00C4 /* (RW) Doorbell event mask */
#define ITER_SHADER_DOORBELL_CLEAR 0x00C8 /* (RW) Doorbell event clear */
#define ITER_SHADER_DOORBELL_STATUS 0x00CC /* (RO) Doorbell event status */
#define ITER_IRQ_RAW 0x00D0 /* (RO) Raw interrupt status */
#define ITER_IRQ_MASK 0x00D4 /* (RW) Interrupt mask */
#define ITER_IRQ_CLEAR 0x00D8 /* (RW) Interrupt clear */
#define ITER_IRQ_STATUS 0x00DC /* (RO) Interrupt status */
#define ITER_FAULT_STATUS 0x00E0 /* (RO) Fault status */
#define ITER_FAULT_SCOREBOARD 0x00E4 /* (RO) Blocked scoreboard entry */
#define ITER_FAULT_ADDRESS_LO 0x00E8 /* (RO) Fault address, low word */
#define ITER_FAULT_ADDRESS_HI 0x00EC /* (RO) Fault address, high word */

/* SCOREBOARD register offsets */
#define SB_DEC 0x0000 /* (WO) Scoreboard decrement */
#define SB_INC 0x0004 /* (WO) Scoreboard increment */
#define SB_ZERO_MASK 0x0008 /* (RW) Zero interrupt mask */
#define SB_ZERO 0x000C /* (RO) Zero status */
#define SB_VALUE_0 0x0040 /* () Scoreboard entry values */
#define SB_VALUE(n) (SB_VALUE_0 + (n)*4)
#define SB_VALUE_COUNT 16
#define SB_SET_SEL 0x0080 /* () Scoreboard set selection */
#define SB_ALL_ZERO_IRQ_RAW_0 0x00A0 /* () All-zero raw status of scoreboard sets */
#define SB_ALL_ZERO_IRQ_RAW(n) (SB_ALL_ZERO_IRQ_RAW_0 + (n)*4)
#define SB_ALL_ZERO_IRQ_RAW_COUNT 8
#define SB_ALL_ZERO_IRQ_MASK_0 0x00C0 /* () All-zero interrupt mask for scoreboard sets */
#define SB_ALL_ZERO_IRQ_MASK(n) (SB_ALL_ZERO_IRQ_MASK_0 + (n)*4)
#define SB_ALL_ZERO_IRQ_MASK_COUNT 8
#define SB_ALL_ZERO_IRQ_STATUS_0 0x00E0 /* () All-zero interrupt status of scoreboard sets */
#define SB_ALL_ZERO_IRQ_STATUS(n) (SB_ALL_ZERO_IRQ_STATUS_0 + (n)*4)
#define SB_ALL_ZERO_IRQ_STATUS_COUNT 8
#define SB_ZERO_MASK_IRQ_RAW_0 0x0100 /* () Zero raw status of scoreboard sets */
#define SB_ZERO_MASK_IRQ_RAW(n) (SB_ZERO_MASK_IRQ_RAW_0 + (n)*4)
#define SB_ZERO_MASK_IRQ_RAW_COUNT 8
#define SB_ZERO_MASK_IRQ_MASK_0 0x0120 /* () Zero interrupt mask for scoreboard sets */
#define SB_ZERO_MASK_IRQ_MASK(n) (SB_ZERO_MASK_IRQ_MASK_0 + (n)*4)
#define SB_ZERO_MASK_IRQ_MASK_COUNT 8
#define SB_ZERO_MASK_IRQ_STATUS_0 0x0140 /* () Zero interrupt status of scoreboard sets */
#define SB_ZERO_MASK_IRQ_STATUS(n) (SB_ZERO_MASK_IRQ_STATUS_0 + (n)*4)
#define SB_ZERO_MASK_IRQ_STATUS_COUNT 8
#define SB_FAULT_IRQ_RAW_0 0x0160 /* () Fault raw status of scoreboard sets */
#define SB_FAULT_IRQ_RAW(n) (SB_FAULT_IRQ_RAW_0 + (n)*4)
#define SB_FAULT_IRQ_RAW_COUNT 8
#define SB_FAULT_IRQ_MASK_0 0x0180 /* () Fault interrupt mask for scoreboard sets */
#define SB_FAULT_IRQ_MASK(n) (SB_FAULT_IRQ_MASK_0 + (n)*4)
#define SB_FAULT_IRQ_MASK_COUNT 8
#define SB_FAULT_IRQ_STATUS_0 0x01A0 /* () Fault interrupt status of scoreboard sets */
#define SB_FAULT_IRQ_STATUS(n) (SB_FAULT_IRQ_STATUS_0 + (n)*4)
#define SB_FAULT_IRQ_STATUS_COUNT 8
#define SB_FAULT_IRQ_CLEAR_0 0x01C0 /* () Clear fault status for scoreboard sets */
#define SB_FAULT_IRQ_CLEAR(n) (SB_FAULT_IRQ_CLEAR_0 + (n)*4)
#define SB_FAULT_IRQ_CLEAR_COUNT 8

/* USER register offsets */
#define LATEST_FLUSH 0x0000 /* () Flush ID of latest clean-and-invalidate operation */

/* CSHWIF register offsets */
#define CSHWIF_CMD_PTR_LO 0x0000 /* (RW) Program pointer current value, low word */
#define CSHWIF_CMD_PTR_HI 0x0004 /* (RW) Program pointer current value, high word */
#define CSHWIF_CMD_PTR_END_LO 0x0008 /* () Program pointer limit value, low word */
#define CSHWIF_CMD_PTR_END_HI 0x000C /* () Program pointer limit value, high word */
#define CSHWIF_CMD_PTR_ADD 0x0010 /* (WO) Program pointer increment */
#define CSHWIF_PREFETCH_BUF_CFG 0x0014 /* () Prefetch buffer configuration */
#define CSHWIF_PREFETCH_BUF_CTRL 0x0018 /* (WO) Invalidate prefetch buffer */
#define CSHWIF_PREFETCH_BUF_STATUS 0x001C /* (RO) Prefetch buffer invalidation status */
#define CSHWIF_CTRL 0x0020 /* (RW) CSHWIF control */
#define CSHWIF_STATUS 0x0024 /* (RO) CSHWIF status */
#define CSHWIF_ITER_COMPUTE 0x0028 /* () Compute iterator configuration */
#define CSHWIF_ITER_FRAGMENT 0x002C /* () Fragment iterator configuration */
#define CSHWIF_ITER_TILER 0x0030 /* () Tiler/IDVS iterator configuration */
#define CSHWIF_JASID 0x0034 /* () CSHWIF address space ID */
#define CSHWIF_TRAP_CFG_LO 0x0040 /* (RW) Instruction trap configuration, low word */
#define CSHWIF_TRAP_CFG_HI 0x0044 /* (RW) Instruction trap configuration, high word */
#define CSHWIF_EMULATION_INSTR_LO 0x0060 /* (RO) Instruction to emulate, low word */
#define CSHWIF_EMULATION_INSTR_HI 0x0064 /* (RO) Instruction to emulate, high word */
#define CSHWIF_FASTCMD_LO 0x0068 /* () Fast command submission, low word */
#define CSHWIF_FASTCMD_HI 0x006C /* () Fast command submission, high word */
#define CSHWIF_FASTCMD_CLEAR 0x0070 /* (WO) Fast command clearing */
#define CSHWIF_WAIT_STATUS 0x0074 /* (RO) WAIT command status register */
#define CSHWIF_SB_SET_SEL 0x0078 /* () Scoreboard set selection */
#define CSHWIF_SB_SEL 0x007C /* () Scoreboard selection */
#define CSHWIF_COMMAND_COUNTER 0x0080 /* () Count of instructions executed */
#define CSHWIF_PROGRESS_COMPARE_LO 0x0088 /* () Progress counter comparison value, low word */
#define CSHWIF_PROGRESS_COMPARE_HI 0x008C /* () Progress counter comparison value, high word */
#define CSHWIF_PROGRESS_LIVE_LO 0x0090 /* () Progress counter current value, low word */
#define CSHWIF_PROGRESS_LIVE_HI 0x0094 /* () Progress counter current value, high word */
#define CSHWIF_EVENT_RAW 0x0098 /* (RO) Raw event status */
#define CSHWIF_EVENT_CLEAR 0x009C /* (WO) Clear event flags */
#define CSHWIF_EVENT_IRQ_ENABLE 0x00A0 /* (RW) Event interrupt enable mask */
#define CSHWIF_EVENT_IRQ_STATUS 0x00A4 /* (RO) Event interrupt status */
#define CSHWIF_EVENT_HALT_ENABLE 0x00A8 /* (RW) Event halt enable mask */
#define CSHWIF_EVENT_HALT_STATUS 0x00AC /* (RO) Event halt status */
#define CSHWIF_FAULT_STATUS 0x00B0 /* (RO) CSF hardware fault status */
#define CSHWIF_FAULT_ADDRESS_LO 0x00B8 /* (RO) Fault address, low word */
#define CSHWIF_FAULT_ADDRESS_HI 0x00BC /* (RO) Fault address, high word */

/* CSHWIF_REGFILE register offsets */
#define CSHWIF_CSF_R0 0x0000 /* () CSHWIF architectural register */
#define CSHWIF_CSF_R(n) (CSHWIF_CSF_R0 + (n)*4)
#define CSHWIF_CSF_R_COUNT 80

/* ACCESS_CONTROL register offsets */
#define ACCESS_FAILURE_MODE 0x0000 /* (RW) Failure mode response */
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0 0x0020 /* (RW) Unprivileged access control */
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1 0x0024 /* (RW) Unprivileged access control */
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_2 0x0028 /* (RW) Unprivileged access control */
#define ACCESS_SEGMENT_UNPRIVILEGED 0x0030 /* (RW) Unprivileged memory control */

/* DOORBELL_SET register offsets */
#define MCUC_DB_SET_0 0x0000 /* (WO) Doorbell request */
#define MCUC_DB_SET(n) (MCUC_DB_SET_0 + (n)*4)
#define MCUC_DB_SET_COUNT 1024

/* DOORBELL_CFG register offsets */
#define MCUC_DB_GROUP_STATUS 0x0000 /* (RO) Doorbell group status */
#define MCUC_DB_VALUE_0 0x0080 /* () Doorbell values */
#define MCUC_DB_VALUE(n) (MCUC_DB_VALUE_0 + (n)*4)
#define MCUC_DB_VALUE_COUNT 32
#define MCUC_DB_VALUE_SET_0 0x0100 /* (WO) Set doorbell values */
#define MCUC_DB_VALUE_SET(n) (MCUC_DB_VALUE_SET_0 + (n)*4)
#define MCUC_DB_VALUE_SET_COUNT 32
#define MCUC_DB_VALUE_CLEAR_0 0x0180 /* (WO) Clear doorbell values */
#define MCUC_DB_VALUE_CLEAR(n) (MCUC_DB_VALUE_CLEAR_0 + (n)*4)
#define MCUC_DB_VALUE_CLEAR_COUNT 32
#define MCUC_DB_ENABLE_0 0x0200 /* (RW) Enable doorbell interrupts */
#define MCUC_DB_ENABLE(n) (MCUC_DB_ENABLE_0 + (n)*4)
#define MCUC_DB_ENABLE_COUNT 32
#define MCUC_DB_ENABLE_SET_0 0x0280 /* (WO) Set doorbell enables */
#define MCUC_DB_ENABLE_SET(n) (MCUC_DB_ENABLE_SET_0 + (n)*4)
#define MCUC_DB_ENABLE_SET_COUNT 32
#define MCUC_DB_ENABLE_CLEAR_0 0x0300 /* (WO) Clear doorbell enables */
#define MCUC_DB_ENABLE_CLEAR(n) (MCUC_DB_ENABLE_CLEAR_0 + (n)*4)
#define MCUC_DB_ENABLE_CLEAR_COUNT 32

/* SEGMENT_CONTROL register offsets */
#define MCUC_SEGMENT0A_PROP 0x0000 /* (RW) Memory properties for segment 0A */
#define MCUC_SEGMENT0B_PROP 0x0004 /* (RW) Memory properties for segment 0B */
#define MCUC_SEGMENT0C_PROP 0x0008 /* (RW) Memory properties for segment 0C */
#define MCUC_SEGMENT0D_PROP 0x000C /* (RW) Memory properties for segment 0D */
#define MCUC_SEGMENT1_PROP 0x0100 /* (RW) Memory properties for segment 1 */
#define MCUC_SEGMENT1_JASID 0x0104 /* (RW) Address space for segment 1 */
#define MCUC_SEGMENT1_BASE_LO 0x0108 /* (RW) Base address for segment 1, low word */
#define MCUC_SEGMENT1_BASE_HI 0x010C /* (RW) Base address for segment 1, high word */
#define MCUC_SEGMENT2_PROP 0x0200 /* (RW) Memory properties for segment 2 */
#define MCUC_SEGMENT2_JASID 0x0204 /* (RW) Address space for segment 2 */
#define MCUC_SEGMENT2_BASE_LO 0x0208 /* (RW) Base address for segment 2, low word */
#define MCUC_SEGMENT2_BASE_HI 0x020C /* (RW) Base address for segment 2, high word */
#define MCUC_SEGMENT3_PROP 0x0300 /* (RW) Memory properties for segment 3 */
#define MCUC_SEGMENT3_JASID 0x0304 /* (RW) Address space for segment 3 */
#define MCUC_SEGMENT3_BASE_LO 0x0308 /* (RW) Base address for segment 3, low word */
#define MCUC_SEGMENT3_BASE_HI 0x030C /* (RW) Base address for segment 3, high word */
#define MCUC_SEGMENT4_PROP 0x0400 /* (RW) Memory properties for segment 4 */
#define MCUC_SEGMENT4_JASID 0x0404 /* (RW) Address space for segment 4 */
#define MCUC_SEGMENT4_BASE_LO 0x0408 /* (RW) Base address for segment 4, low word */
#define MCUC_SEGMENT4_BASE_HI 0x040C /* (RW) Base address for segment 4, high word */
#define MCUC_SEGMENT5_PROP 0x0500 /* (RW) Memory properties for segment 5 */
#define MCUC_SEGMENT5_JASID 0x0504 /* (RW) Address space for segment 5 */
#define MCUC_SEGMENT5_BASE_LO 0x0508 /* (RW) Base address for segment 5, low word */
#define MCUC_SEGMENT5_BASE_HI 0x050C /* (RW) Base address for segment 5, high word */
#define MCUC_SEGMENT6_PROP 0x0600 /* (RW) Memory properties for segment 6 */
#define MCUC_SEGMENT6_JASID 0x0604 /* (RW) Address space for segment 6 */
#define MCUC_SEGMENT6_BASE_LO 0x0608 /* (RW) Base address for segment 6, low word */
#define MCUC_SEGMENT6_BASE_HI 0x060C /* (RW) Base address for segment 6, high word */

/* TIMERS register offsets */
#define TIMER_SYSTEM_CONFIG 0x0000 /* (RW) Enable system timestamp */
#define TIMER_CYCLE_CONFIG 0x0004 /* (RW) Enable cycle counter */
#define TIMER_SYSTEM_LIVE_LO 0x0010 /* (RO) System timestamp value, low word */
#define TIMER_SYSTEM_LIVE_HI 0x0014 /* (RO) System timestamp value, high word */
#define TIMER_SYSTEM_OFFSET 0x0018 /* (RW) System timestamp deadline offset value */
#define TIMER_CYCLE_LIVE_LO 0x0030 /* (RO) Cycle counter value, low word */
#define TIMER_CYCLE_LIVE_HI 0x0034 /* (RO) Cycle counter value, high word */
#define TIMER_CYCLE_OFFSET 0x0038 /* (RW) Cycle counter deadline offset value */

/* GPU_CONTROL_MCU register offsets */
#define MCU_GPU_IRQ_RAWSTAT 0x0020 /* () IRQ sources raw status */
#define MCU_GPU_IRQ_CLEAR 0x0024 /* (WO) IRQ sources to clear */
#define MCU_GPU_IRQ_MASK 0x0028 /* (RW) IRQ sources enabled */
#define MCU_GPU_IRQ_STATUS 0x002C /* (RO) IRQ status for enabled sources */
#define MCU_GPU_STATUS 0x0034 /* (RO) GPU status register */
#define MCU_GPU_COMMAND 0x0030 /* (WO) GPU command register */
#define MCU_GPU_FAULTSTATUS 0x003C /* (RO) GPU fault status register */
#define MCU_GPU_FAULTADDRESS_LO 0x0040 /* (RO) GPU fault address, low word */
#define MCU_GPU_FAULTADDRESS_HI 0x0044 /* (RO) GPU fault address, high word */
#define MCU_PRFCNT_BASE_LO 0x0060 /* (RW) Performance counter base address, low word */
#define MCU_PRFCNT_BASE_HI 0x0064 /* (RW) Performance counter base address, high word */
#define MCU_PRFCNT_CONFIG 0x0068 /* (RW) Performance counter configuration */
#define MCU_PRFCNT_CSHW_EN 0x006C /* (RW) Performance counter enable for Command Stream Hardware */
#define MCU_PRFCNT_SHADER_EN 0x0070 /* (RW) Performance counter enable for shader cores */
#define MCU_PRFCNT_TILER_EN 0x0074 /* (RW) Performance counter enable for tiler */
#define MCU_PRFCNT_MMU_L2_EN 0x007C /* (RW) Performance counter enable for MMU/L2 cache */
#define MCU_CYCLE_COUNT_LO 0x0090 /* (RO) GPU cycle counter, low word */
#define MCU_CYCLE_COUNT_HI 0x0094 /* (RO) GPU cycle counter, high word */
#define MCU_TIMESTAMP_LO 0x0098 /* (RO) Global time stamp, low word */
#define MCU_TIMESTAMP_HI 0x009C /* (RO) Global time stamp, high word */
#define MCU_PROTECTED_DEBUG_LO 0x0780 /* () Protected mode debug information, low word */
#define MCU_PROTECTED_DEBUG_HI 0x0784 /* () Protected mode debug information, high word */
#define MCU_PROTECTED_STATUS 0x0788 /* (RW) Protected mode status */

/* End register offsets */

/* CSHW_CTRL register set definitions */

/* CSHW_FEATURES register */
#define CSHW_FEATURES_NUM_CSHWIF_SHIFT 0
#define CSHW_FEATURES_NUM_CSHWIF_MASK (0x3F << CSHW_FEATURES_NUM_CSHWIF_SHIFT)
#define CSHW_FEATURES_NUM_CSHWIF_GET(reg_val) \
	((reg_val & CSHW_FEATURES_NUM_CSHWIF_MASK) >> CSHW_FEATURES_NUM_CSHWIF_SHIFT)
#define CSHW_FEATURES_NUM_CSHWIF_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_NUM_CSHWIF_MASK) |    \
	 ((value << CSHW_FEATURES_NUM_CSHWIF_SHIFT) & CSHW_FEATURES_NUM_CSHWIF_MASK))
#define CSHW_FEATURES_NUM_COMPUTE_SHIFT 6
#define CSHW_FEATURES_NUM_COMPUTE_MASK (0x1F << CSHW_FEATURES_NUM_COMPUTE_SHIFT)
#define CSHW_FEATURES_NUM_COMPUTE_GET(reg_val) \
	((reg_val & CSHW_FEATURES_NUM_COMPUTE_MASK) >> CSHW_FEATURES_NUM_COMPUTE_SHIFT)
#define CSHW_FEATURES_NUM_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_NUM_COMPUTE_MASK) |    \
	 ((value << CSHW_FEATURES_NUM_COMPUTE_SHIFT) & CSHW_FEATURES_NUM_COMPUTE_MASK))
#define CSHW_FEATURES_NUM_FRAGMENT_SHIFT 11
#define CSHW_FEATURES_NUM_FRAGMENT_MASK (0x1F << CSHW_FEATURES_NUM_FRAGMENT_SHIFT)
#define CSHW_FEATURES_NUM_FRAGMENT_GET(reg_val) \
	((reg_val & CSHW_FEATURES_NUM_FRAGMENT_MASK) >> CSHW_FEATURES_NUM_FRAGMENT_SHIFT)
#define CSHW_FEATURES_NUM_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_NUM_FRAGMENT_MASK) |    \
	 ((value << CSHW_FEATURES_NUM_FRAGMENT_SHIFT) & CSHW_FEATURES_NUM_FRAGMENT_MASK))
#define CSHW_FEATURES_NUM_TILER_SHIFT 16
#define CSHW_FEATURES_NUM_TILER_MASK (0x1F << CSHW_FEATURES_NUM_TILER_SHIFT)
#define CSHW_FEATURES_NUM_TILER_GET(reg_val) ((reg_val & CSHW_FEATURES_NUM_TILER_MASK) >> CSHW_FEATURES_NUM_TILER_SHIFT)
#define CSHW_FEATURES_NUM_TILER_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_NUM_TILER_MASK) |    \
	 ((value << CSHW_FEATURES_NUM_TILER_SHIFT) & CSHW_FEATURES_NUM_TILER_MASK))
#define CSHW_FEATURES_NUM_SB_SETS_SHIFT 24
#define CSHW_FEATURES_NUM_SB_SETS_MASK (0xFF << CSHW_FEATURES_NUM_SB_SETS_SHIFT)
#define CSHW_FEATURES_NUM_SB_SETS_GET(reg_val) \
	((reg_val & CSHW_FEATURES_NUM_SB_SETS_MASK) >> CSHW_FEATURES_NUM_SB_SETS_SHIFT)
#define CSHW_FEATURES_NUM_SB_SETS_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_NUM_SB_SETS_MASK) |    \
	 ((value << CSHW_FEATURES_NUM_SB_SETS_SHIFT) & CSHW_FEATURES_NUM_SB_SETS_MASK))

/* CSHW_FEATURES_CSHWIF register */
#define CSHW_FEATURES_CSHWIF_REGFILE_SIZE_SHIFT 0
#define CSHW_FEATURES_CSHWIF_REGFILE_SIZE_MASK (0xFFFF << CSHW_FEATURES_CSHWIF_REGFILE_SIZE_SHIFT)
#define CSHW_FEATURES_CSHWIF_REGFILE_SIZE_GET(reg_val) \
	((reg_val & CSHW_FEATURES_CSHWIF_REGFILE_SIZE_MASK) >> CSHW_FEATURES_CSHWIF_REGFILE_SIZE_SHIFT)
#define CSHW_FEATURES_CSHWIF_REGFILE_SIZE_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_CSHWIF_REGFILE_SIZE_MASK) |    \
	 ((value << CSHW_FEATURES_CSHWIF_REGFILE_SIZE_SHIFT) & CSHW_FEATURES_CSHWIF_REGFILE_SIZE_MASK))

/* CSHW_FEATURES_ITER_COMPUTE register */
#define CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_SHIFT 0
#define CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_MASK (0xFFFF << CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_SHIFT)
#define CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_MASK) >> CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_SHIFT)
#define CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_SHIFT) & CSHW_FEATURES_ITER_COMPUTE_SUSPEND_SIZE_MASK))
#define CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_SHIFT 16
#define CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_MASK (0xFF << CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_SHIFT)
#define CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_MASK) >> CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_SHIFT)
#define CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_SHIFT) & CSHW_FEATURES_ITER_COMPUTE_QUEUE_DEPTH_MASK))
#define CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_SHIFT 31
#define CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_MASK (0x1 << CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_SHIFT)
#define CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_MASK) >> CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_SHIFT)
#define CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_SHIFT) & CSHW_FEATURES_ITER_COMPUTE_DMA_SUSPEND_MASK))

/* CSHW_FEATURES_ITER_FRAGMENT register */
#define CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_SHIFT 0
#define CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_MASK (0xFFFF << CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_SHIFT)
#define CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_MASK) >> CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_SHIFT)
#define CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_SHIFT) & CSHW_FEATURES_ITER_FRAGMENT_SUSPEND_SIZE_MASK))
#define CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_SHIFT 16
#define CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_MASK (0xFF << CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_SHIFT)
#define CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_MASK) >> CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_SHIFT)
#define CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_SHIFT) & CSHW_FEATURES_ITER_FRAGMENT_QUEUE_DEPTH_MASK))
#define CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_SHIFT 31
#define CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_MASK (0x1 << CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_SHIFT)
#define CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_MASK) >> CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_SHIFT)
#define CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_SHIFT) & CSHW_FEATURES_ITER_FRAGMENT_DMA_SUSPEND_MASK))

/* CSHW_FEATURES_ITER_TILER register */
#define CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_SHIFT 0
#define CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_MASK (0xFFFF << CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_SHIFT)
#define CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_MASK) >> CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_SHIFT)
#define CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_SHIFT) & CSHW_FEATURES_ITER_TILER_SUSPEND_SIZE_MASK))
#define CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_SHIFT 16
#define CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_MASK (0xFF << CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_SHIFT)
#define CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_MASK) >> CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_SHIFT)
#define CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_SHIFT) & CSHW_FEATURES_ITER_TILER_QUEUE_DEPTH_MASK))
#define CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_SHIFT 31
#define CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_MASK (0x1 << CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_SHIFT)
#define CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_GET(reg_val) \
	((reg_val & CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_MASK) >> CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_SHIFT)
#define CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_MASK) |    \
	 ((value << CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_SHIFT) & CSHW_FEATURES_ITER_TILER_DMA_SUSPEND_MASK))

/* CSHW_FEATURES_SCOREBOARD register */
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_SHIFT 0
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_MASK (0xFFFF << CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_SHIFT)
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_GET(reg_val) \
	((reg_val & CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_MASK) >> CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_SHIFT)
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_MASK) |    \
	 ((value << CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_SHIFT) & CSHW_FEATURES_SCOREBOARD_NUM_SB_BITS_MASK))
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_SHIFT 16
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_MASK (0xFFFF << CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_SHIFT)
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_GET(reg_val) \
	((reg_val & CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_MASK) >> CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_SHIFT)
#define CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_SET(reg_val, value) \
	((reg_val & ~CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_MASK) |    \
	 ((value << CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_SHIFT) & CSHW_FEATURES_SCOREBOARD_NUM_SB_ENTRIES_MASK))

/* CSHW_PROGRESS_TIMER_COMPUTE register */
#define CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_SHIFT 0
#define CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_MASK (0xFFFFFFFF << CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_SHIFT)
#define CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_GET(reg_val) \
	((reg_val & CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_MASK) >> CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_SHIFT)
#define CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_MASK) |    \
	 ((value << CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_SHIFT) & CSHW_PROGRESS_TIMER_COMPUTE_TIMEOUT_MASK))

/* CSHW_PROGRESS_TIMER_FRAGMENT register */
#define CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_SHIFT 0
#define CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_MASK (0xFFFFFFFF << CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_SHIFT)
#define CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_GET(reg_val) \
	((reg_val & CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_MASK) >> CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_SHIFT)
#define CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_MASK) |    \
	 ((value << CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_SHIFT) & CSHW_PROGRESS_TIMER_FRAGMENT_TIMEOUT_MASK))

/* CSHW_PROGRESS_TIMER_TILER register */
#define CSHW_PROGRESS_TIMER_TILER_TIMEOUT_SHIFT 0
#define CSHW_PROGRESS_TIMER_TILER_TIMEOUT_MASK (0xFFFFFFFF << CSHW_PROGRESS_TIMER_TILER_TIMEOUT_SHIFT)
#define CSHW_PROGRESS_TIMER_TILER_TIMEOUT_GET(reg_val) \
	((reg_val & CSHW_PROGRESS_TIMER_TILER_TIMEOUT_MASK) >> CSHW_PROGRESS_TIMER_TILER_TIMEOUT_SHIFT)
#define CSHW_PROGRESS_TIMER_TILER_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~CSHW_PROGRESS_TIMER_TILER_TIMEOUT_MASK) |    \
	 ((value << CSHW_PROGRESS_TIMER_TILER_TIMEOUT_SHIFT) & CSHW_PROGRESS_TIMER_TILER_TIMEOUT_MASK))

/* CSHW_IDVS_CTRL register */
#define CSHW_IDVS_CTRL_COMPUTE_PRIORITY_SHIFT 0
#define CSHW_IDVS_CTRL_COMPUTE_PRIORITY_MASK (0x1 << CSHW_IDVS_CTRL_COMPUTE_PRIORITY_SHIFT)
#define CSHW_IDVS_CTRL_COMPUTE_PRIORITY_GET(reg_val) \
	((reg_val & CSHW_IDVS_CTRL_COMPUTE_PRIORITY_MASK) >> CSHW_IDVS_CTRL_COMPUTE_PRIORITY_SHIFT)
#define CSHW_IDVS_CTRL_COMPUTE_PRIORITY_SET(reg_val, value) \
	((reg_val & ~CSHW_IDVS_CTRL_COMPUTE_PRIORITY_MASK) |    \
	 ((value << CSHW_IDVS_CTRL_COMPUTE_PRIORITY_SHIFT) & CSHW_IDVS_CTRL_COMPUTE_PRIORITY_MASK))
#define CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_SHIFT 4
#define CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_MASK (0x1 << CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_SHIFT)
#define CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_GET(reg_val) \
	((reg_val & CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_MASK) >> CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_SHIFT)
#define CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_SET(reg_val, value) \
	((reg_val & ~CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_MASK) |    \
	 ((value << CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_SHIFT) & CSHW_IDVS_CTRL_COMPUTE_AFTER_IDVS_MASK))
#define CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_SHIFT 8
#define CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_MASK (0x1 << CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_SHIFT)
#define CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_GET(reg_val) \
	((reg_val & CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_MASK) >> CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_SHIFT)
#define CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_MASK) |    \
	 ((value << CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_SHIFT) & CSHW_IDVS_CTRL_IDVS_AFTER_COMPUTE_MASK))
#define CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_SHIFT 16
#define CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_MASK (0x3F << CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_SHIFT)
#define CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_GET(reg_val) \
	((reg_val & CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_MASK) >> CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_SHIFT)
#define CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_SET(reg_val, value) \
	((reg_val & ~CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_MASK) |    \
	 ((value << CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_SHIFT) & CSHW_IDVS_CTRL_IDVS_GROUP_SIZE_MASK))
/* End of CSHW_CTRL register set definitions */

/* ITER register set definitions */

/* ITER_CTRL register */
#define ITER_CTRL_STATE_REQUEST_SHIFT 0
#define ITER_CTRL_STATE_REQUEST_MASK (0x7 << ITER_CTRL_STATE_REQUEST_SHIFT)
#define ITER_CTRL_STATE_REQUEST_GET(reg_val) ((reg_val & ITER_CTRL_STATE_REQUEST_MASK) >> ITER_CTRL_STATE_REQUEST_SHIFT)
#define ITER_CTRL_STATE_REQUEST_SET(reg_val, value) \
	((reg_val & ~ITER_CTRL_STATE_REQUEST_MASK) |    \
	 ((value << ITER_CTRL_STATE_REQUEST_SHIFT) & ITER_CTRL_STATE_REQUEST_MASK))
/* ITER_CTRL_STATE_REQUEST values */
#define ITER_CTRL_STATE_REQUEST_DISABLED 0x0
#define ITER_CTRL_STATE_REQUEST_ENABLED 0x2
#define ITER_CTRL_STATE_REQUEST_HALTED 0x4
#define ITER_CTRL_STATE_REQUEST_PAUSED 0x6
/* End of ITER_CTRL_STATE_REQUEST values */

/* ITER_STATUS register */
#define ITER_STATUS_STATE_SHIFT 0
#define ITER_STATUS_STATE_MASK (0x7 << ITER_STATUS_STATE_SHIFT)
#define ITER_STATUS_STATE_GET(reg_val) ((reg_val & ITER_STATUS_STATE_MASK) >> ITER_STATUS_STATE_SHIFT)
#define ITER_STATUS_STATE_SET(reg_val, value) \
	((reg_val & ~ITER_STATUS_STATE_MASK) | ((value << ITER_STATUS_STATE_SHIFT) & ITER_STATUS_STATE_MASK))
/* ITER_STATUS_STATE values */
#define ITER_STATUS_STATE_DISABLED 0x0
#define ITER_STATUS_STATE_DISABLING 0x1
#define ITER_STATUS_STATE_ENABLED 0x2
#define ITER_STATUS_STATE_ENABLING 0x3
#define ITER_STATUS_STATE_HALTED 0x4
#define ITER_STATUS_STATE_HALTING 0x5
#define ITER_STATUS_STATE_PAUSED 0x6
#define ITER_STATUS_STATE_PAUSING 0x7
/* End of ITER_STATUS_STATE values */

/* ITER_JASID register */
#define ITER_JASID_JASID_SHIFT 0
#define ITER_JASID_JASID_MASK (0xF << ITER_JASID_JASID_SHIFT)
#define ITER_JASID_JASID_GET(reg_val) ((reg_val & ITER_JASID_JASID_MASK) >> ITER_JASID_JASID_SHIFT)
#define ITER_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~ITER_JASID_JASID_MASK) | ((value << ITER_JASID_JASID_SHIFT) & ITER_JASID_JASID_MASK))

/* ITER_ENDPOINT_ALLOW register */
#define ITER_ENDPOINT_ALLOW_ALLOW_SHIFT 0
#define ITER_ENDPOINT_ALLOW_ALLOW_MASK (0xFFFFFFFFFFFFFFFF << ITER_ENDPOINT_ALLOW_ALLOW_SHIFT)
#define ITER_ENDPOINT_ALLOW_ALLOW_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_ALLOW_ALLOW_MASK) >> ITER_ENDPOINT_ALLOW_ALLOW_SHIFT)
#define ITER_ENDPOINT_ALLOW_ALLOW_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_ALLOW_ALLOW_MASK) |    \
	 ((value << ITER_ENDPOINT_ALLOW_ALLOW_SHIFT) & ITER_ENDPOINT_ALLOW_ALLOW_MASK))

/* ITER_ENDPOINT_READY register */
#define ITER_ENDPOINT_READY_READY_SHIFT 0
#define ITER_ENDPOINT_READY_READY_MASK (0xFFFFFFFFFFFFFFFF << ITER_ENDPOINT_READY_READY_SHIFT)
#define ITER_ENDPOINT_READY_READY_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_READY_READY_MASK) >> ITER_ENDPOINT_READY_READY_SHIFT)
#define ITER_ENDPOINT_READY_READY_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_READY_READY_MASK) |    \
	 ((value << ITER_ENDPOINT_READY_READY_SHIFT) & ITER_ENDPOINT_READY_READY_MASK))

/* ITER_QUEUE_COUNT register */
#define ITER_QUEUE_COUNT_QUEUED_SHIFT 0
#define ITER_QUEUE_COUNT_QUEUED_MASK (0xFF << ITER_QUEUE_COUNT_QUEUED_SHIFT)
#define ITER_QUEUE_COUNT_QUEUED_GET(reg_val) ((reg_val & ITER_QUEUE_COUNT_QUEUED_MASK) >> ITER_QUEUE_COUNT_QUEUED_SHIFT)
#define ITER_QUEUE_COUNT_QUEUED_SET(reg_val, value) \
	((reg_val & ~ITER_QUEUE_COUNT_QUEUED_MASK) |    \
	 ((value << ITER_QUEUE_COUNT_QUEUED_SHIFT) & ITER_QUEUE_COUNT_QUEUED_MASK))
#define ITER_QUEUE_COUNT_ISSUING_SHIFT 8
#define ITER_QUEUE_COUNT_ISSUING_MASK (0x1 << ITER_QUEUE_COUNT_ISSUING_SHIFT)
#define ITER_QUEUE_COUNT_ISSUING_GET(reg_val) \
	((reg_val & ITER_QUEUE_COUNT_ISSUING_MASK) >> ITER_QUEUE_COUNT_ISSUING_SHIFT)
#define ITER_QUEUE_COUNT_ISSUING_SET(reg_val, value) \
	((reg_val & ~ITER_QUEUE_COUNT_ISSUING_MASK) |    \
	 ((value << ITER_QUEUE_COUNT_ISSUING_SHIFT) & ITER_QUEUE_COUNT_ISSUING_MASK))
#define ITER_QUEUE_COUNT_ACTIVE_SHIFT 9
#define ITER_QUEUE_COUNT_ACTIVE_MASK (0x1 << ITER_QUEUE_COUNT_ACTIVE_SHIFT)
#define ITER_QUEUE_COUNT_ACTIVE_GET(reg_val) ((reg_val & ITER_QUEUE_COUNT_ACTIVE_MASK) >> ITER_QUEUE_COUNT_ACTIVE_SHIFT)
#define ITER_QUEUE_COUNT_ACTIVE_SET(reg_val, value) \
	((reg_val & ~ITER_QUEUE_COUNT_ACTIVE_MASK) |    \
	 ((value << ITER_QUEUE_COUNT_ACTIVE_SHIFT) & ITER_QUEUE_COUNT_ACTIVE_MASK))

/* ITER_QUEUE_WATERMARK register */
#define ITER_QUEUE_WATERMARK_LOW_TIDE_SHIFT 0
#define ITER_QUEUE_WATERMARK_LOW_TIDE_MASK (0xFF << ITER_QUEUE_WATERMARK_LOW_TIDE_SHIFT)
#define ITER_QUEUE_WATERMARK_LOW_TIDE_GET(reg_val) \
	((reg_val & ITER_QUEUE_WATERMARK_LOW_TIDE_MASK) >> ITER_QUEUE_WATERMARK_LOW_TIDE_SHIFT)
#define ITER_QUEUE_WATERMARK_LOW_TIDE_SET(reg_val, value) \
	((reg_val & ~ITER_QUEUE_WATERMARK_LOW_TIDE_MASK) |    \
	 ((value << ITER_QUEUE_WATERMARK_LOW_TIDE_SHIFT) & ITER_QUEUE_WATERMARK_LOW_TIDE_MASK))

/* ITER_SUSPEND_DMA_BUF register */
#define ITER_SUSPEND_DMA_BUF_ADDR_SHIFT 0
#define ITER_SUSPEND_DMA_BUF_ADDR_MASK (0xFFFFFFFFFFFFFFFF << ITER_SUSPEND_DMA_BUF_ADDR_SHIFT)
#define ITER_SUSPEND_DMA_BUF_ADDR_GET(reg_val) \
	((reg_val & ITER_SUSPEND_DMA_BUF_ADDR_MASK) >> ITER_SUSPEND_DMA_BUF_ADDR_SHIFT)
#define ITER_SUSPEND_DMA_BUF_ADDR_SET(reg_val, value) \
	((reg_val & ~ITER_SUSPEND_DMA_BUF_ADDR_MASK) |    \
	 ((value << ITER_SUSPEND_DMA_BUF_ADDR_SHIFT) & ITER_SUSPEND_DMA_BUF_ADDR_MASK))

/* ITER_SUSPEND_DMA_JASID register */
#define ITER_SUSPEND_DMA_JASID_JASID_SHIFT 0
#define ITER_SUSPEND_DMA_JASID_JASID_MASK (0xF << ITER_SUSPEND_DMA_JASID_JASID_SHIFT)
#define ITER_SUSPEND_DMA_JASID_JASID_GET(reg_val) \
	((reg_val & ITER_SUSPEND_DMA_JASID_JASID_MASK) >> ITER_SUSPEND_DMA_JASID_JASID_SHIFT)
#define ITER_SUSPEND_DMA_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~ITER_SUSPEND_DMA_JASID_JASID_MASK) |    \
	 ((value << ITER_SUSPEND_DMA_JASID_JASID_SHIFT) & ITER_SUSPEND_DMA_JASID_JASID_MASK))

/* ITER_SUSPEND_STATE_INDEX register */
#define ITER_SUSPEND_STATE_INDEX_INDEX_SHIFT 0
#define ITER_SUSPEND_STATE_INDEX_INDEX_MASK (0x3F << ITER_SUSPEND_STATE_INDEX_INDEX_SHIFT)
#define ITER_SUSPEND_STATE_INDEX_INDEX_GET(reg_val) \
	((reg_val & ITER_SUSPEND_STATE_INDEX_INDEX_MASK) >> ITER_SUSPEND_STATE_INDEX_INDEX_SHIFT)
#define ITER_SUSPEND_STATE_INDEX_INDEX_SET(reg_val, value) \
	((reg_val & ~ITER_SUSPEND_STATE_INDEX_INDEX_MASK) |    \
	 ((value << ITER_SUSPEND_STATE_INDEX_INDEX_SHIFT) & ITER_SUSPEND_STATE_INDEX_INDEX_MASK))

/* ITER_SUSPEND_STATE_DATA register */
#define ITER_SUSPEND_STATE_DATA_DATA_SHIFT 0
#define ITER_SUSPEND_STATE_DATA_DATA_MASK (0xFFFFFFFF << ITER_SUSPEND_STATE_DATA_DATA_SHIFT)
#define ITER_SUSPEND_STATE_DATA_DATA_GET(reg_val) \
	((reg_val & ITER_SUSPEND_STATE_DATA_DATA_MASK) >> ITER_SUSPEND_STATE_DATA_DATA_SHIFT)
#define ITER_SUSPEND_STATE_DATA_DATA_SET(reg_val, value) \
	((reg_val & ~ITER_SUSPEND_STATE_DATA_DATA_MASK) |    \
	 ((value << ITER_SUSPEND_STATE_DATA_DATA_SHIFT) & ITER_SUSPEND_STATE_DATA_DATA_MASK))

/* ITER_SUSPEND_ENDPOINT_BUF register */
#define ITER_SUSPEND_ENDPOINT_BUF_ADDR_SHIFT 0
#define ITER_SUSPEND_ENDPOINT_BUF_ADDR_MASK (0xFFFFFFFFFFFFFFFF << ITER_SUSPEND_ENDPOINT_BUF_ADDR_SHIFT)
#define ITER_SUSPEND_ENDPOINT_BUF_ADDR_GET(reg_val) \
	((reg_val & ITER_SUSPEND_ENDPOINT_BUF_ADDR_MASK) >> ITER_SUSPEND_ENDPOINT_BUF_ADDR_SHIFT)
#define ITER_SUSPEND_ENDPOINT_BUF_ADDR_SET(reg_val, value) \
	((reg_val & ~ITER_SUSPEND_ENDPOINT_BUF_ADDR_MASK) |    \
	 ((value << ITER_SUSPEND_ENDPOINT_BUF_ADDR_SHIFT) & ITER_SUSPEND_ENDPOINT_BUF_ADDR_MASK))

/* ITER_SUSPEND_ENDPOINT_JASID register */
#define ITER_SUSPEND_ENDPOINT_JASID_JASID_SHIFT 0
#define ITER_SUSPEND_ENDPOINT_JASID_JASID_MASK (0xF << ITER_SUSPEND_ENDPOINT_JASID_JASID_SHIFT)
#define ITER_SUSPEND_ENDPOINT_JASID_JASID_GET(reg_val) \
	((reg_val & ITER_SUSPEND_ENDPOINT_JASID_JASID_MASK) >> ITER_SUSPEND_ENDPOINT_JASID_JASID_SHIFT)
#define ITER_SUSPEND_ENDPOINT_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~ITER_SUSPEND_ENDPOINT_JASID_JASID_MASK) |    \
	 ((value << ITER_SUSPEND_ENDPOINT_JASID_JASID_SHIFT) & ITER_SUSPEND_ENDPOINT_JASID_JASID_MASK))

/* ITER_PATCH_ITEMS register */
#define ITER_PATCH_ITEMS_VALUE_SHIFT 0
#define ITER_PATCH_ITEMS_VALUE_MASK (0xFFFFFFFF << ITER_PATCH_ITEMS_VALUE_SHIFT)
#define ITER_PATCH_ITEMS_VALUE_GET(reg_val) ((reg_val & ITER_PATCH_ITEMS_VALUE_MASK) >> ITER_PATCH_ITEMS_VALUE_SHIFT)
#define ITER_PATCH_ITEMS_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_PATCH_ITEMS_VALUE_MASK) | ((value << ITER_PATCH_ITEMS_VALUE_SHIFT) & ITER_PATCH_ITEMS_VALUE_MASK))

/* ITER_PATCH_INDEX register */
#define ITER_PATCH_INDEX_INDEX_SHIFT 0
#define ITER_PATCH_INDEX_INDEX_MASK (0xFFFF << ITER_PATCH_INDEX_INDEX_SHIFT)
#define ITER_PATCH_INDEX_INDEX_GET(reg_val) ((reg_val & ITER_PATCH_INDEX_INDEX_MASK) >> ITER_PATCH_INDEX_INDEX_SHIFT)
#define ITER_PATCH_INDEX_INDEX_SET(reg_val, value) \
	((reg_val & ~ITER_PATCH_INDEX_INDEX_MASK) | ((value << ITER_PATCH_INDEX_INDEX_SHIFT) & ITER_PATCH_INDEX_INDEX_MASK))

/* ITER_PATCH_VALUE register */
#define ITER_PATCH_VALUE_VALUE_SHIFT 0
#define ITER_PATCH_VALUE_VALUE_MASK (0xFFFF << ITER_PATCH_VALUE_VALUE_SHIFT)
#define ITER_PATCH_VALUE_VALUE_GET(reg_val) ((reg_val & ITER_PATCH_VALUE_VALUE_MASK) >> ITER_PATCH_VALUE_VALUE_SHIFT)
#define ITER_PATCH_VALUE_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_PATCH_VALUE_VALUE_MASK) | ((value << ITER_PATCH_VALUE_VALUE_SHIFT) & ITER_PATCH_VALUE_VALUE_MASK))
#define ITER_PATCH_VALUE_VALID_SHIFT 31
#define ITER_PATCH_VALUE_VALID_MASK (0x1 << ITER_PATCH_VALUE_VALID_SHIFT)
#define ITER_PATCH_VALUE_VALID_GET(reg_val) ((reg_val & ITER_PATCH_VALUE_VALID_MASK) >> ITER_PATCH_VALUE_VALID_SHIFT)
#define ITER_PATCH_VALUE_VALID_SET(reg_val, value) \
	((reg_val & ~ITER_PATCH_VALUE_VALID_MASK) | ((value << ITER_PATCH_VALUE_VALID_SHIFT) & ITER_PATCH_VALUE_VALID_MASK))

/* ITER_BLOCKED_SB_ENTRY register */
#define ITER_BLOCKED_SB_ENTRY_ENTRY_SHIFT 0
#define ITER_BLOCKED_SB_ENTRY_ENTRY_MASK (0xFFFF << ITER_BLOCKED_SB_ENTRY_ENTRY_SHIFT)
#define ITER_BLOCKED_SB_ENTRY_ENTRY_GET(reg_val) \
	((reg_val & ITER_BLOCKED_SB_ENTRY_ENTRY_MASK) >> ITER_BLOCKED_SB_ENTRY_ENTRY_SHIFT)
#define ITER_BLOCKED_SB_ENTRY_ENTRY_SET(reg_val, value) \
	((reg_val & ~ITER_BLOCKED_SB_ENTRY_ENTRY_MASK) |    \
	 ((value << ITER_BLOCKED_SB_ENTRY_ENTRY_SHIFT) & ITER_BLOCKED_SB_ENTRY_ENTRY_MASK))
#define ITER_BLOCKED_SB_ENTRY_SET_SHIFT 16
#define ITER_BLOCKED_SB_ENTRY_SET_MASK (0xFFFF << ITER_BLOCKED_SB_ENTRY_SET_SHIFT)
#define ITER_BLOCKED_SB_ENTRY_SET_GET(reg_val) \
	((reg_val & ITER_BLOCKED_SB_ENTRY_SET_MASK) >> ITER_BLOCKED_SB_ENTRY_SET_SHIFT)
#define ITER_BLOCKED_SB_ENTRY_SET_SET(reg_val, value) \
	((reg_val & ~ITER_BLOCKED_SB_ENTRY_SET_MASK) |    \
	 ((value << ITER_BLOCKED_SB_ENTRY_SET_SHIFT) & ITER_BLOCKED_SB_ENTRY_SET_MASK))

/* ITER_ENDPOINT_EVENT register */
#define ITER_ENDPOINT_EVENT_TILER_OOM_SHIFT 0
#define ITER_ENDPOINT_EVENT_TILER_OOM_MASK (0x1 << ITER_ENDPOINT_EVENT_TILER_OOM_SHIFT)
#define ITER_ENDPOINT_EVENT_TILER_OOM_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_EVENT_TILER_OOM_MASK) >> ITER_ENDPOINT_EVENT_TILER_OOM_SHIFT)
#define ITER_ENDPOINT_EVENT_TILER_OOM_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_EVENT_TILER_OOM_MASK) |    \
	 ((value << ITER_ENDPOINT_EVENT_TILER_OOM_SHIFT) & ITER_ENDPOINT_EVENT_TILER_OOM_MASK))
#define ITER_ENDPOINT_EVENT_TILER_FAULT_SHIFT 1
#define ITER_ENDPOINT_EVENT_TILER_FAULT_MASK (0x1 << ITER_ENDPOINT_EVENT_TILER_FAULT_SHIFT)
#define ITER_ENDPOINT_EVENT_TILER_FAULT_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_EVENT_TILER_FAULT_MASK) >> ITER_ENDPOINT_EVENT_TILER_FAULT_SHIFT)
#define ITER_ENDPOINT_EVENT_TILER_FAULT_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_EVENT_TILER_FAULT_MASK) |    \
	 ((value << ITER_ENDPOINT_EVENT_TILER_FAULT_SHIFT) & ITER_ENDPOINT_EVENT_TILER_FAULT_MASK))

/* ITER_ENDPOINT_CLEAR register */
#define ITER_ENDPOINT_CLEAR_TILER_OOM_SHIFT 0
#define ITER_ENDPOINT_CLEAR_TILER_OOM_MASK (0x1 << ITER_ENDPOINT_CLEAR_TILER_OOM_SHIFT)
#define ITER_ENDPOINT_CLEAR_TILER_OOM_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_CLEAR_TILER_OOM_MASK) >> ITER_ENDPOINT_CLEAR_TILER_OOM_SHIFT)
#define ITER_ENDPOINT_CLEAR_TILER_OOM_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_CLEAR_TILER_OOM_MASK) |    \
	 ((value << ITER_ENDPOINT_CLEAR_TILER_OOM_SHIFT) & ITER_ENDPOINT_CLEAR_TILER_OOM_MASK))
#define ITER_ENDPOINT_CLEAR_TILER_FAULT_SHIFT 1
#define ITER_ENDPOINT_CLEAR_TILER_FAULT_MASK (0x1 << ITER_ENDPOINT_CLEAR_TILER_FAULT_SHIFT)
#define ITER_ENDPOINT_CLEAR_TILER_FAULT_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_CLEAR_TILER_FAULT_MASK) >> ITER_ENDPOINT_CLEAR_TILER_FAULT_SHIFT)
#define ITER_ENDPOINT_CLEAR_TILER_FAULT_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_CLEAR_TILER_FAULT_MASK) |    \
	 ((value << ITER_ENDPOINT_CLEAR_TILER_FAULT_SHIFT) & ITER_ENDPOINT_CLEAR_TILER_FAULT_MASK))

/* ITER_ENDPOINT_RESPONSE register */
#define ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_SHIFT 0
#define ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_MASK (0x1 << ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_SHIFT)
#define ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_MASK) >> ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_SHIFT)
#define ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_MASK) |    \
	 ((value << ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_SHIFT) & ITER_ENDPOINT_RESPONSE_TILER_OOM_RESPONSE_MASK))

/* ITER_ENDPOINT_RESPONSE_PAYLOAD register */
#define ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_SHIFT 0
#define ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_MASK (0xFFFFFFFFFFFFFFFF << ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_SHIFT)
#define ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_GET(reg_val) \
	((reg_val & ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_MASK) >> ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_SHIFT)
#define ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_MASK) |    \
	 ((value << ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_SHIFT) & ITER_ENDPOINT_RESPONSE_PAYLOAD_VALUE_MASK))

/* ITER_SHADER_DOORBELL_RAW register */
#define ITER_SHADER_DOORBELL_RAW_VALUE_SHIFT 0
#define ITER_SHADER_DOORBELL_RAW_VALUE_MASK (0xFFFFFFFF << ITER_SHADER_DOORBELL_RAW_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_RAW_VALUE_GET(reg_val) \
	((reg_val & ITER_SHADER_DOORBELL_RAW_VALUE_MASK) >> ITER_SHADER_DOORBELL_RAW_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_RAW_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_SHADER_DOORBELL_RAW_VALUE_MASK) |    \
	 ((value << ITER_SHADER_DOORBELL_RAW_VALUE_SHIFT) & ITER_SHADER_DOORBELL_RAW_VALUE_MASK))

/* ITER_SHADER_DOORBELL_MASK register */
#define ITER_SHADER_DOORBELL_MASK_VALUE_SHIFT 0
#define ITER_SHADER_DOORBELL_MASK_VALUE_MASK (0xFFFFFFFF << ITER_SHADER_DOORBELL_MASK_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_MASK_VALUE_GET(reg_val) \
	((reg_val & ITER_SHADER_DOORBELL_MASK_VALUE_MASK) >> ITER_SHADER_DOORBELL_MASK_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_MASK_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_SHADER_DOORBELL_MASK_VALUE_MASK) |    \
	 ((value << ITER_SHADER_DOORBELL_MASK_VALUE_SHIFT) & ITER_SHADER_DOORBELL_MASK_VALUE_MASK))

/* ITER_SHADER_DOORBELL_CLEAR register */
#define ITER_SHADER_DOORBELL_CLEAR_VALUE_SHIFT 0
#define ITER_SHADER_DOORBELL_CLEAR_VALUE_MASK (0xFFFFFFFF << ITER_SHADER_DOORBELL_CLEAR_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_CLEAR_VALUE_GET(reg_val) \
	((reg_val & ITER_SHADER_DOORBELL_CLEAR_VALUE_MASK) >> ITER_SHADER_DOORBELL_CLEAR_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_CLEAR_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_SHADER_DOORBELL_CLEAR_VALUE_MASK) |    \
	 ((value << ITER_SHADER_DOORBELL_CLEAR_VALUE_SHIFT) & ITER_SHADER_DOORBELL_CLEAR_VALUE_MASK))

/* ITER_SHADER_DOORBELL_STATUS register */
#define ITER_SHADER_DOORBELL_STATUS_VALUE_SHIFT 0
#define ITER_SHADER_DOORBELL_STATUS_VALUE_MASK (0xFFFFFFFF << ITER_SHADER_DOORBELL_STATUS_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_STATUS_VALUE_GET(reg_val) \
	((reg_val & ITER_SHADER_DOORBELL_STATUS_VALUE_MASK) >> ITER_SHADER_DOORBELL_STATUS_VALUE_SHIFT)
#define ITER_SHADER_DOORBELL_STATUS_VALUE_SET(reg_val, value) \
	((reg_val & ~ITER_SHADER_DOORBELL_STATUS_VALUE_MASK) |    \
	 ((value << ITER_SHADER_DOORBELL_STATUS_VALUE_SHIFT) & ITER_SHADER_DOORBELL_STATUS_VALUE_MASK))

/* ITER_IRQ_RAW register */
#define ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_SHIFT 0
#define ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_MASK (0x1 << ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_GET(reg_val) \
	((reg_val & ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_MASK) >> ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_MASK) |    \
	 ((value << ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_SHIFT) & ITER_IRQ_RAW_STATE_TRANSITION_COMPLETE_MASK))
#define ITER_IRQ_RAW_IDLE_SHIFT 1
#define ITER_IRQ_RAW_IDLE_MASK (0x1 << ITER_IRQ_RAW_IDLE_SHIFT)
#define ITER_IRQ_RAW_IDLE_GET(reg_val) ((reg_val & ITER_IRQ_RAW_IDLE_MASK) >> ITER_IRQ_RAW_IDLE_SHIFT)
#define ITER_IRQ_RAW_IDLE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_IDLE_MASK) | ((value << ITER_IRQ_RAW_IDLE_SHIFT) & ITER_IRQ_RAW_IDLE_MASK))
#define ITER_IRQ_RAW_FAULT_SHIFT 2
#define ITER_IRQ_RAW_FAULT_MASK (0x1 << ITER_IRQ_RAW_FAULT_SHIFT)
#define ITER_IRQ_RAW_FAULT_GET(reg_val) ((reg_val & ITER_IRQ_RAW_FAULT_MASK) >> ITER_IRQ_RAW_FAULT_SHIFT)
#define ITER_IRQ_RAW_FAULT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_FAULT_MASK) | ((value << ITER_IRQ_RAW_FAULT_SHIFT) & ITER_IRQ_RAW_FAULT_MASK))
#define ITER_IRQ_RAW_LOW_TIDE_SHIFT 4
#define ITER_IRQ_RAW_LOW_TIDE_MASK (0x1 << ITER_IRQ_RAW_LOW_TIDE_SHIFT)
#define ITER_IRQ_RAW_LOW_TIDE_GET(reg_val) ((reg_val & ITER_IRQ_RAW_LOW_TIDE_MASK) >> ITER_IRQ_RAW_LOW_TIDE_SHIFT)
#define ITER_IRQ_RAW_LOW_TIDE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_LOW_TIDE_MASK) | ((value << ITER_IRQ_RAW_LOW_TIDE_SHIFT) & ITER_IRQ_RAW_LOW_TIDE_MASK))
#define ITER_IRQ_RAW_SHADER_DOORBELL_SHIFT 5
#define ITER_IRQ_RAW_SHADER_DOORBELL_MASK (0x1 << ITER_IRQ_RAW_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_RAW_SHADER_DOORBELL_GET(reg_val) \
	((reg_val & ITER_IRQ_RAW_SHADER_DOORBELL_MASK) >> ITER_IRQ_RAW_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_RAW_SHADER_DOORBELL_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_SHADER_DOORBELL_MASK) |    \
	 ((value << ITER_IRQ_RAW_SHADER_DOORBELL_SHIFT) & ITER_IRQ_RAW_SHADER_DOORBELL_MASK))
#define ITER_IRQ_RAW_ENDPOINT_EVENT_SHIFT 6
#define ITER_IRQ_RAW_ENDPOINT_EVENT_MASK (0x1 << ITER_IRQ_RAW_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_RAW_ENDPOINT_EVENT_GET(reg_val) \
	((reg_val & ITER_IRQ_RAW_ENDPOINT_EVENT_MASK) >> ITER_IRQ_RAW_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_RAW_ENDPOINT_EVENT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_ENDPOINT_EVENT_MASK) |    \
	 ((value << ITER_IRQ_RAW_ENDPOINT_EVENT_SHIFT) & ITER_IRQ_RAW_ENDPOINT_EVENT_MASK))
#define ITER_IRQ_RAW_PROGRESS_TIMEOUT_SHIFT 7
#define ITER_IRQ_RAW_PROGRESS_TIMEOUT_MASK (0x1 << ITER_IRQ_RAW_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_RAW_PROGRESS_TIMEOUT_GET(reg_val) \
	((reg_val & ITER_IRQ_RAW_PROGRESS_TIMEOUT_MASK) >> ITER_IRQ_RAW_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_RAW_PROGRESS_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_PROGRESS_TIMEOUT_MASK) |    \
	 ((value << ITER_IRQ_RAW_PROGRESS_TIMEOUT_SHIFT) & ITER_IRQ_RAW_PROGRESS_TIMEOUT_MASK))
#define ITER_IRQ_RAW_NO_IDVS_SHIFT 8
#define ITER_IRQ_RAW_NO_IDVS_MASK (0x1 << ITER_IRQ_RAW_NO_IDVS_SHIFT)
#define ITER_IRQ_RAW_NO_IDVS_GET(reg_val) ((reg_val & ITER_IRQ_RAW_NO_IDVS_MASK) >> ITER_IRQ_RAW_NO_IDVS_SHIFT)
#define ITER_IRQ_RAW_NO_IDVS_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_NO_IDVS_MASK) | ((value << ITER_IRQ_RAW_NO_IDVS_SHIFT) & ITER_IRQ_RAW_NO_IDVS_MASK))
#define ITER_IRQ_RAW_BLOCKED_SHIFT 9
#define ITER_IRQ_RAW_BLOCKED_MASK (0x1 << ITER_IRQ_RAW_BLOCKED_SHIFT)
#define ITER_IRQ_RAW_BLOCKED_GET(reg_val) ((reg_val & ITER_IRQ_RAW_BLOCKED_MASK) >> ITER_IRQ_RAW_BLOCKED_SHIFT)
#define ITER_IRQ_RAW_BLOCKED_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_RAW_BLOCKED_MASK) | ((value << ITER_IRQ_RAW_BLOCKED_SHIFT) & ITER_IRQ_RAW_BLOCKED_MASK))

/* ITER_IRQ_MASK register */
#define ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_SHIFT 0
#define ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_MASK (0x1 << ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_GET(reg_val) \
	((reg_val & ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_MASK) >> ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_MASK) |    \
	 ((value << ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_SHIFT) & ITER_IRQ_MASK_STATE_TRANSITION_COMPLETE_MASK))
#define ITER_IRQ_MASK_IDLE_SHIFT 1
#define ITER_IRQ_MASK_IDLE_MASK (0x1 << ITER_IRQ_MASK_IDLE_SHIFT)
#define ITER_IRQ_MASK_IDLE_GET(reg_val) ((reg_val & ITER_IRQ_MASK_IDLE_MASK) >> ITER_IRQ_MASK_IDLE_SHIFT)
#define ITER_IRQ_MASK_IDLE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_IDLE_MASK) | ((value << ITER_IRQ_MASK_IDLE_SHIFT) & ITER_IRQ_MASK_IDLE_MASK))
#define ITER_IRQ_MASK_FAULT_SHIFT 2
#define ITER_IRQ_MASK_FAULT_MASK (0x1 << ITER_IRQ_MASK_FAULT_SHIFT)
#define ITER_IRQ_MASK_FAULT_GET(reg_val) ((reg_val & ITER_IRQ_MASK_FAULT_MASK) >> ITER_IRQ_MASK_FAULT_SHIFT)
#define ITER_IRQ_MASK_FAULT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_FAULT_MASK) | ((value << ITER_IRQ_MASK_FAULT_SHIFT) & ITER_IRQ_MASK_FAULT_MASK))
#define ITER_IRQ_MASK_LOW_TIDE_SHIFT 4
#define ITER_IRQ_MASK_LOW_TIDE_MASK (0x1 << ITER_IRQ_MASK_LOW_TIDE_SHIFT)
#define ITER_IRQ_MASK_LOW_TIDE_GET(reg_val) ((reg_val & ITER_IRQ_MASK_LOW_TIDE_MASK) >> ITER_IRQ_MASK_LOW_TIDE_SHIFT)
#define ITER_IRQ_MASK_LOW_TIDE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_LOW_TIDE_MASK) | ((value << ITER_IRQ_MASK_LOW_TIDE_SHIFT) & ITER_IRQ_MASK_LOW_TIDE_MASK))
#define ITER_IRQ_MASK_SHADER_DOORBELL_SHIFT 5
#define ITER_IRQ_MASK_SHADER_DOORBELL_MASK (0x1 << ITER_IRQ_MASK_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_MASK_SHADER_DOORBELL_GET(reg_val) \
	((reg_val & ITER_IRQ_MASK_SHADER_DOORBELL_MASK) >> ITER_IRQ_MASK_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_MASK_SHADER_DOORBELL_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_SHADER_DOORBELL_MASK) |    \
	 ((value << ITER_IRQ_MASK_SHADER_DOORBELL_SHIFT) & ITER_IRQ_MASK_SHADER_DOORBELL_MASK))
#define ITER_IRQ_MASK_ENDPOINT_EVENT_SHIFT 6
#define ITER_IRQ_MASK_ENDPOINT_EVENT_MASK (0x1 << ITER_IRQ_MASK_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_MASK_ENDPOINT_EVENT_GET(reg_val) \
	((reg_val & ITER_IRQ_MASK_ENDPOINT_EVENT_MASK) >> ITER_IRQ_MASK_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_MASK_ENDPOINT_EVENT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_ENDPOINT_EVENT_MASK) |    \
	 ((value << ITER_IRQ_MASK_ENDPOINT_EVENT_SHIFT) & ITER_IRQ_MASK_ENDPOINT_EVENT_MASK))
#define ITER_IRQ_MASK_PROGRESS_TIMEOUT_SHIFT 7
#define ITER_IRQ_MASK_PROGRESS_TIMEOUT_MASK (0x1 << ITER_IRQ_MASK_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_MASK_PROGRESS_TIMEOUT_GET(reg_val) \
	((reg_val & ITER_IRQ_MASK_PROGRESS_TIMEOUT_MASK) >> ITER_IRQ_MASK_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_MASK_PROGRESS_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_PROGRESS_TIMEOUT_MASK) |    \
	 ((value << ITER_IRQ_MASK_PROGRESS_TIMEOUT_SHIFT) & ITER_IRQ_MASK_PROGRESS_TIMEOUT_MASK))
#define ITER_IRQ_MASK_NO_IDVS_SHIFT 8
#define ITER_IRQ_MASK_NO_IDVS_MASK (0x1 << ITER_IRQ_MASK_NO_IDVS_SHIFT)
#define ITER_IRQ_MASK_NO_IDVS_GET(reg_val) ((reg_val & ITER_IRQ_MASK_NO_IDVS_MASK) >> ITER_IRQ_MASK_NO_IDVS_SHIFT)
#define ITER_IRQ_MASK_NO_IDVS_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_NO_IDVS_MASK) | ((value << ITER_IRQ_MASK_NO_IDVS_SHIFT) & ITER_IRQ_MASK_NO_IDVS_MASK))
#define ITER_IRQ_MASK_BLOCKED_SHIFT 9
#define ITER_IRQ_MASK_BLOCKED_MASK (0x1 << ITER_IRQ_MASK_BLOCKED_SHIFT)
#define ITER_IRQ_MASK_BLOCKED_GET(reg_val) ((reg_val & ITER_IRQ_MASK_BLOCKED_MASK) >> ITER_IRQ_MASK_BLOCKED_SHIFT)
#define ITER_IRQ_MASK_BLOCKED_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_MASK_BLOCKED_MASK) | ((value << ITER_IRQ_MASK_BLOCKED_SHIFT) & ITER_IRQ_MASK_BLOCKED_MASK))

/* ITER_IRQ_CLEAR register */
#define ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_SHIFT 0
#define ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_MASK (0x1 << ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_GET(reg_val) \
	((reg_val & ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_MASK) >> ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_MASK) |    \
	 ((value << ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_SHIFT) & ITER_IRQ_CLEAR_STATE_TRANSITION_COMPLETE_MASK))
#define ITER_IRQ_CLEAR_IDLE_SHIFT 1
#define ITER_IRQ_CLEAR_IDLE_MASK (0x1 << ITER_IRQ_CLEAR_IDLE_SHIFT)
#define ITER_IRQ_CLEAR_IDLE_GET(reg_val) ((reg_val & ITER_IRQ_CLEAR_IDLE_MASK) >> ITER_IRQ_CLEAR_IDLE_SHIFT)
#define ITER_IRQ_CLEAR_IDLE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_IDLE_MASK) | ((value << ITER_IRQ_CLEAR_IDLE_SHIFT) & ITER_IRQ_CLEAR_IDLE_MASK))
#define ITER_IRQ_CLEAR_FAULT_SHIFT 2
#define ITER_IRQ_CLEAR_FAULT_MASK (0x1 << ITER_IRQ_CLEAR_FAULT_SHIFT)
#define ITER_IRQ_CLEAR_FAULT_GET(reg_val) ((reg_val & ITER_IRQ_CLEAR_FAULT_MASK) >> ITER_IRQ_CLEAR_FAULT_SHIFT)
#define ITER_IRQ_CLEAR_FAULT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_FAULT_MASK) | ((value << ITER_IRQ_CLEAR_FAULT_SHIFT) & ITER_IRQ_CLEAR_FAULT_MASK))
#define ITER_IRQ_CLEAR_LOW_TIDE_SHIFT 4
#define ITER_IRQ_CLEAR_LOW_TIDE_MASK (0x1 << ITER_IRQ_CLEAR_LOW_TIDE_SHIFT)
#define ITER_IRQ_CLEAR_LOW_TIDE_GET(reg_val) ((reg_val & ITER_IRQ_CLEAR_LOW_TIDE_MASK) >> ITER_IRQ_CLEAR_LOW_TIDE_SHIFT)
#define ITER_IRQ_CLEAR_LOW_TIDE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_LOW_TIDE_MASK) |    \
	 ((value << ITER_IRQ_CLEAR_LOW_TIDE_SHIFT) & ITER_IRQ_CLEAR_LOW_TIDE_MASK))
#define ITER_IRQ_CLEAR_SHADER_DOORBELL_SHIFT 5
#define ITER_IRQ_CLEAR_SHADER_DOORBELL_MASK (0x1 << ITER_IRQ_CLEAR_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_CLEAR_SHADER_DOORBELL_GET(reg_val) \
	((reg_val & ITER_IRQ_CLEAR_SHADER_DOORBELL_MASK) >> ITER_IRQ_CLEAR_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_CLEAR_SHADER_DOORBELL_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_SHADER_DOORBELL_MASK) |    \
	 ((value << ITER_IRQ_CLEAR_SHADER_DOORBELL_SHIFT) & ITER_IRQ_CLEAR_SHADER_DOORBELL_MASK))
#define ITER_IRQ_CLEAR_ENDPOINT_EVENT_SHIFT 6
#define ITER_IRQ_CLEAR_ENDPOINT_EVENT_MASK (0x1 << ITER_IRQ_CLEAR_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_CLEAR_ENDPOINT_EVENT_GET(reg_val) \
	((reg_val & ITER_IRQ_CLEAR_ENDPOINT_EVENT_MASK) >> ITER_IRQ_CLEAR_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_CLEAR_ENDPOINT_EVENT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_ENDPOINT_EVENT_MASK) |    \
	 ((value << ITER_IRQ_CLEAR_ENDPOINT_EVENT_SHIFT) & ITER_IRQ_CLEAR_ENDPOINT_EVENT_MASK))
#define ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_SHIFT 7
#define ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_MASK (0x1 << ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_GET(reg_val) \
	((reg_val & ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_MASK) >> ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_MASK) |    \
	 ((value << ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_SHIFT) & ITER_IRQ_CLEAR_PROGRESS_TIMEOUT_MASK))
#define ITER_IRQ_CLEAR_NO_IDVS_SHIFT 8
#define ITER_IRQ_CLEAR_NO_IDVS_MASK (0x1 << ITER_IRQ_CLEAR_NO_IDVS_SHIFT)
#define ITER_IRQ_CLEAR_NO_IDVS_GET(reg_val) ((reg_val & ITER_IRQ_CLEAR_NO_IDVS_MASK) >> ITER_IRQ_CLEAR_NO_IDVS_SHIFT)
#define ITER_IRQ_CLEAR_NO_IDVS_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_NO_IDVS_MASK) | ((value << ITER_IRQ_CLEAR_NO_IDVS_SHIFT) & ITER_IRQ_CLEAR_NO_IDVS_MASK))
#define ITER_IRQ_CLEAR_BLOCKED_SHIFT 9
#define ITER_IRQ_CLEAR_BLOCKED_MASK (0x1 << ITER_IRQ_CLEAR_BLOCKED_SHIFT)
#define ITER_IRQ_CLEAR_BLOCKED_GET(reg_val) ((reg_val & ITER_IRQ_CLEAR_BLOCKED_MASK) >> ITER_IRQ_CLEAR_BLOCKED_SHIFT)
#define ITER_IRQ_CLEAR_BLOCKED_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_CLEAR_BLOCKED_MASK) | ((value << ITER_IRQ_CLEAR_BLOCKED_SHIFT) & ITER_IRQ_CLEAR_BLOCKED_MASK))

/* ITER_IRQ_STATUS register */
#define ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_SHIFT 0
#define ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_MASK (0x1 << ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_GET(reg_val) \
	((reg_val & ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_MASK) >> ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_SHIFT)
#define ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_MASK) |    \
	 ((value << ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_SHIFT) & ITER_IRQ_STATUS_STATE_TRANSITION_COMPLETE_MASK))
#define ITER_IRQ_STATUS_IDLE_SHIFT 1
#define ITER_IRQ_STATUS_IDLE_MASK (0x1 << ITER_IRQ_STATUS_IDLE_SHIFT)
#define ITER_IRQ_STATUS_IDLE_GET(reg_val) ((reg_val & ITER_IRQ_STATUS_IDLE_MASK) >> ITER_IRQ_STATUS_IDLE_SHIFT)
#define ITER_IRQ_STATUS_IDLE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_IDLE_MASK) | ((value << ITER_IRQ_STATUS_IDLE_SHIFT) & ITER_IRQ_STATUS_IDLE_MASK))
#define ITER_IRQ_STATUS_FAULT_SHIFT 2
#define ITER_IRQ_STATUS_FAULT_MASK (0x1 << ITER_IRQ_STATUS_FAULT_SHIFT)
#define ITER_IRQ_STATUS_FAULT_GET(reg_val) ((reg_val & ITER_IRQ_STATUS_FAULT_MASK) >> ITER_IRQ_STATUS_FAULT_SHIFT)
#define ITER_IRQ_STATUS_FAULT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_FAULT_MASK) | ((value << ITER_IRQ_STATUS_FAULT_SHIFT) & ITER_IRQ_STATUS_FAULT_MASK))
#define ITER_IRQ_STATUS_LOW_TIDE_SHIFT 4
#define ITER_IRQ_STATUS_LOW_TIDE_MASK (0x1 << ITER_IRQ_STATUS_LOW_TIDE_SHIFT)
#define ITER_IRQ_STATUS_LOW_TIDE_GET(reg_val) \
	((reg_val & ITER_IRQ_STATUS_LOW_TIDE_MASK) >> ITER_IRQ_STATUS_LOW_TIDE_SHIFT)
#define ITER_IRQ_STATUS_LOW_TIDE_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_LOW_TIDE_MASK) |    \
	 ((value << ITER_IRQ_STATUS_LOW_TIDE_SHIFT) & ITER_IRQ_STATUS_LOW_TIDE_MASK))
#define ITER_IRQ_STATUS_SHADER_DOORBELL_SHIFT 5
#define ITER_IRQ_STATUS_SHADER_DOORBELL_MASK (0x1 << ITER_IRQ_STATUS_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_STATUS_SHADER_DOORBELL_GET(reg_val) \
	((reg_val & ITER_IRQ_STATUS_SHADER_DOORBELL_MASK) >> ITER_IRQ_STATUS_SHADER_DOORBELL_SHIFT)
#define ITER_IRQ_STATUS_SHADER_DOORBELL_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_SHADER_DOORBELL_MASK) |    \
	 ((value << ITER_IRQ_STATUS_SHADER_DOORBELL_SHIFT) & ITER_IRQ_STATUS_SHADER_DOORBELL_MASK))
#define ITER_IRQ_STATUS_ENDPOINT_EVENT_SHIFT 6
#define ITER_IRQ_STATUS_ENDPOINT_EVENT_MASK (0x1 << ITER_IRQ_STATUS_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_STATUS_ENDPOINT_EVENT_GET(reg_val) \
	((reg_val & ITER_IRQ_STATUS_ENDPOINT_EVENT_MASK) >> ITER_IRQ_STATUS_ENDPOINT_EVENT_SHIFT)
#define ITER_IRQ_STATUS_ENDPOINT_EVENT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_ENDPOINT_EVENT_MASK) |    \
	 ((value << ITER_IRQ_STATUS_ENDPOINT_EVENT_SHIFT) & ITER_IRQ_STATUS_ENDPOINT_EVENT_MASK))
#define ITER_IRQ_STATUS_PROGRESS_TIMEOUT_SHIFT 7
#define ITER_IRQ_STATUS_PROGRESS_TIMEOUT_MASK (0x1 << ITER_IRQ_STATUS_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_STATUS_PROGRESS_TIMEOUT_GET(reg_val) \
	((reg_val & ITER_IRQ_STATUS_PROGRESS_TIMEOUT_MASK) >> ITER_IRQ_STATUS_PROGRESS_TIMEOUT_SHIFT)
#define ITER_IRQ_STATUS_PROGRESS_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_PROGRESS_TIMEOUT_MASK) |    \
	 ((value << ITER_IRQ_STATUS_PROGRESS_TIMEOUT_SHIFT) & ITER_IRQ_STATUS_PROGRESS_TIMEOUT_MASK))
#define ITER_IRQ_STATUS_NO_IDVS_SHIFT 8
#define ITER_IRQ_STATUS_NO_IDVS_MASK (0x1 << ITER_IRQ_STATUS_NO_IDVS_SHIFT)
#define ITER_IRQ_STATUS_NO_IDVS_GET(reg_val) ((reg_val & ITER_IRQ_STATUS_NO_IDVS_MASK) >> ITER_IRQ_STATUS_NO_IDVS_SHIFT)
#define ITER_IRQ_STATUS_NO_IDVS_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_NO_IDVS_MASK) |    \
	 ((value << ITER_IRQ_STATUS_NO_IDVS_SHIFT) & ITER_IRQ_STATUS_NO_IDVS_MASK))
#define ITER_IRQ_STATUS_BLOCKED_SHIFT 9
#define ITER_IRQ_STATUS_BLOCKED_MASK (0x1 << ITER_IRQ_STATUS_BLOCKED_SHIFT)
#define ITER_IRQ_STATUS_BLOCKED_GET(reg_val) ((reg_val & ITER_IRQ_STATUS_BLOCKED_MASK) >> ITER_IRQ_STATUS_BLOCKED_SHIFT)
#define ITER_IRQ_STATUS_BLOCKED_SET(reg_val, value) \
	((reg_val & ~ITER_IRQ_STATUS_BLOCKED_MASK) |    \
	 ((value << ITER_IRQ_STATUS_BLOCKED_SHIFT) & ITER_IRQ_STATUS_BLOCKED_MASK))

/* ITER_FAULT_STATUS register */
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_SHIFT 0
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_MASK (0xFF << ITER_FAULT_STATUS_EXCEPTION_TYPE_SHIFT)
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_GET(reg_val) \
	((reg_val & ITER_FAULT_STATUS_EXCEPTION_TYPE_MASK) >> ITER_FAULT_STATUS_EXCEPTION_TYPE_SHIFT)
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_SET(reg_val, value) \
	((reg_val & ~ITER_FAULT_STATUS_EXCEPTION_TYPE_MASK) |    \
	 ((value << ITER_FAULT_STATUS_EXCEPTION_TYPE_SHIFT) & ITER_FAULT_STATUS_EXCEPTION_TYPE_MASK))
/* ITER_FAULT_STATUS_EXCEPTION_TYPE values */
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_OK 0x00
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_TERMINATED 0x04
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_KABOOM 0x05
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_EUREKA 0x06
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_INSTR_INVALID_PC 0x50
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_INSTR_INVALID_ENC 0x51
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_INSTR_BARRIER_FAULT 0x55
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_DATA_INVALID_FAULT 0x58
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_TILE_RANGE_FAULT 0x59
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_ADDR_RANGE_FAULT 0x5A
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_IMPRECISE_FAULT 0x5B
#define ITER_FAULT_STATUS_EXCEPTION_TYPE_OUT_OF_MEMORY 0x60
/* End of ITER_FAULT_STATUS_EXCEPTION_TYPE values */
#define ITER_FAULT_STATUS_ACCESS_TYPE_SHIFT 8
#define ITER_FAULT_STATUS_ACCESS_TYPE_MASK (0x3 << ITER_FAULT_STATUS_ACCESS_TYPE_SHIFT)
#define ITER_FAULT_STATUS_ACCESS_TYPE_GET(reg_val) \
	((reg_val & ITER_FAULT_STATUS_ACCESS_TYPE_MASK) >> ITER_FAULT_STATUS_ACCESS_TYPE_SHIFT)
#define ITER_FAULT_STATUS_ACCESS_TYPE_SET(reg_val, value) \
	((reg_val & ~ITER_FAULT_STATUS_ACCESS_TYPE_MASK) |    \
	 ((value << ITER_FAULT_STATUS_ACCESS_TYPE_SHIFT) & ITER_FAULT_STATUS_ACCESS_TYPE_MASK))
/* ITER_FAULT_STATUS_ACCESS_TYPE values */
#define ITER_FAULT_STATUS_ACCESS_TYPE_ATOMIC 0x0
#define ITER_FAULT_STATUS_ACCESS_TYPE_EXECUTE 0x1
#define ITER_FAULT_STATUS_ACCESS_TYPE_READ 0x2
#define ITER_FAULT_STATUS_ACCESS_TYPE_WRITE 0x3
/* End of ITER_FAULT_STATUS_ACCESS_TYPE values */
#define ITER_FAULT_STATUS_ERROR_SOURCE_SHIFT 16
#define ITER_FAULT_STATUS_ERROR_SOURCE_MASK (0xFFFF << ITER_FAULT_STATUS_ERROR_SOURCE_SHIFT)
#define ITER_FAULT_STATUS_ERROR_SOURCE_GET(reg_val) \
	((reg_val & ITER_FAULT_STATUS_ERROR_SOURCE_MASK) >> ITER_FAULT_STATUS_ERROR_SOURCE_SHIFT)
#define ITER_FAULT_STATUS_ERROR_SOURCE_SET(reg_val, value) \
	((reg_val & ~ITER_FAULT_STATUS_ERROR_SOURCE_MASK) |    \
	 ((value << ITER_FAULT_STATUS_ERROR_SOURCE_SHIFT) & ITER_FAULT_STATUS_ERROR_SOURCE_MASK))
/* ITER_FAULT_STATUS_ERROR_SOURCE values */
#define ITER_FAULT_STATUS_ERROR_SOURCE_UNKNOWN 0x0000
#define ITER_FAULT_STATUS_ERROR_SOURCE_CSB 0x0001
#define ITER_FAULT_STATUS_ERROR_SOURCE_FBD 0x0002
#define ITER_FAULT_STATUS_ERROR_SOURCE_PL 0x0003
#define ITER_FAULT_STATUS_ERROR_SOURCE_SED 0x0004
#define ITER_FAULT_STATUS_ERROR_SOURCE_ZSD 0x0005
#define ITER_FAULT_STATUS_ERROR_SOURCE_AD 0x0006
#define ITER_FAULT_STATUS_ERROR_SOURCE_ABD 0x0007
#define ITER_FAULT_STATUS_ERROR_SOURCE_TXD 0x0008
#define ITER_FAULT_STATUS_ERROR_SOURCE_SMD 0x000A
#define ITER_FAULT_STATUS_ERROR_SOURCE_TEX 0x000C
#define ITER_FAULT_STATUS_ERROR_SOURCE_CZSB 0x000D
#define ITER_FAULT_STATUS_ERROR_SOURCE_CRCB 0x000E
#define ITER_FAULT_STATUS_ERROR_SOURCE_IXB 0x0010
#define ITER_FAULT_STATUS_ERROR_SOURCE_VXB 0x0011
#define ITER_FAULT_STATUS_ERROR_SOURCE_SP 0x0012
#define ITER_FAULT_STATUS_ERROR_SOURCE_LS 0x0013
#define ITER_FAULT_STATUS_ERROR_SOURCE_PERF 0x0014
#define ITER_FAULT_STATUS_ERROR_SOURCE_OCCQ 0x0015
#define ITER_FAULT_STATUS_ERROR_SOURCE_TSD 0x0016
#define ITER_FAULT_STATUS_ERROR_SOURCE_FAUB 0x0017
#define ITER_FAULT_STATUS_ERROR_SOURCE_CMD 0x0018
#define ITER_FAULT_STATUS_ERROR_SOURCE_GD 0x0019
#define ITER_FAULT_STATUS_ERROR_SOURCE_VARB 0x001A
#define ITER_FAULT_STATUS_ERROR_SOURCE_BD 0x001B
#define ITER_FAULT_STATUS_ERROR_SOURCE_TEM 0x001C
#define ITER_FAULT_STATUS_ERROR_SOURCE_CSHWIF 0x001D
#define ITER_FAULT_STATUS_ERROR_SOURCE_FASTCMD 0x001E
#define ITER_FAULT_STATUS_ERROR_SOURCE_PD 0x0020
#define ITER_FAULT_STATUS_ERROR_SOURCE_RTD 0x0021
#define ITER_FAULT_STATUS_ERROR_SOURCE_SRE 0x0022
#define ITER_FAULT_STATUS_ERROR_SOURCE_PF 0x0023
#define ITER_FAULT_STATUS_ERROR_SOURCE_SCBD 0x0024
#define ITER_FAULT_STATUS_ERROR_SOURCE_SPD 0x0025
#define ITER_FAULT_STATUS_ERROR_SOURCE_TD 0x0026
#define ITER_FAULT_STATUS_ERROR_SOURCE_HCPM 0x0027
#define ITER_FAULT_STATUS_ERROR_SOURCE_HCPC 0x0028
/* End of ITER_FAULT_STATUS_ERROR_SOURCE values */

/* ITER_FAULT_SCOREBOARD register */
#define ITER_FAULT_SCOREBOARD_INDEX_SHIFT 0
#define ITER_FAULT_SCOREBOARD_INDEX_MASK (0xF << ITER_FAULT_SCOREBOARD_INDEX_SHIFT)
#define ITER_FAULT_SCOREBOARD_INDEX_GET(reg_val) \
	((reg_val & ITER_FAULT_SCOREBOARD_INDEX_MASK) >> ITER_FAULT_SCOREBOARD_INDEX_SHIFT)
#define ITER_FAULT_SCOREBOARD_INDEX_SET(reg_val, value) \
	((reg_val & ~ITER_FAULT_SCOREBOARD_INDEX_MASK) |    \
	 ((value << ITER_FAULT_SCOREBOARD_INDEX_SHIFT) & ITER_FAULT_SCOREBOARD_INDEX_MASK))
#define ITER_FAULT_SCOREBOARD_SET_INDEX_SHIFT 16
#define ITER_FAULT_SCOREBOARD_SET_INDEX_MASK (0xF << ITER_FAULT_SCOREBOARD_SET_INDEX_SHIFT)
#define ITER_FAULT_SCOREBOARD_SET_INDEX_GET(reg_val) \
	((reg_val & ITER_FAULT_SCOREBOARD_SET_INDEX_MASK) >> ITER_FAULT_SCOREBOARD_SET_INDEX_SHIFT)
#define ITER_FAULT_SCOREBOARD_SET_INDEX_SET(reg_val, value) \
	((reg_val & ~ITER_FAULT_SCOREBOARD_SET_INDEX_MASK) |    \
	 ((value << ITER_FAULT_SCOREBOARD_SET_INDEX_SHIFT) & ITER_FAULT_SCOREBOARD_SET_INDEX_MASK))

/* ITER_FAULT_ADDRESS register */
#define ITER_FAULT_ADDRESS_ADDR_SHIFT 0
#define ITER_FAULT_ADDRESS_ADDR_MASK (0xFFFFFFFFFFFFFFFF << ITER_FAULT_ADDRESS_ADDR_SHIFT)
#define ITER_FAULT_ADDRESS_ADDR_GET(reg_val) ((reg_val & ITER_FAULT_ADDRESS_ADDR_MASK) >> ITER_FAULT_ADDRESS_ADDR_SHIFT)
#define ITER_FAULT_ADDRESS_ADDR_SET(reg_val, value) \
	((reg_val & ~ITER_FAULT_ADDRESS_ADDR_MASK) |    \
	 ((value << ITER_FAULT_ADDRESS_ADDR_SHIFT) & ITER_FAULT_ADDRESS_ADDR_MASK))
/* End of ITER register set definitions */

/* SCOREBOARD register set definitions */

/* SB_DEC register */
#define SB_DEC_SB_SHIFT 0
#define SB_DEC_SB_MASK (0xF << SB_DEC_SB_SHIFT)
#define SB_DEC_SB_GET(reg_val) ((reg_val & SB_DEC_SB_MASK) >> SB_DEC_SB_SHIFT)
#define SB_DEC_SB_SET(reg_val, value) ((reg_val & ~SB_DEC_SB_MASK) | ((value << SB_DEC_SB_SHIFT) & SB_DEC_SB_MASK))

/* SB_INC register */
#define SB_INC_SB_SHIFT 0
#define SB_INC_SB_MASK (0xF << SB_INC_SB_SHIFT)
#define SB_INC_SB_GET(reg_val) ((reg_val & SB_INC_SB_MASK) >> SB_INC_SB_SHIFT)
#define SB_INC_SB_SET(reg_val, value) ((reg_val & ~SB_INC_SB_MASK) | ((value << SB_INC_SB_SHIFT) & SB_INC_SB_MASK))

/* SB_ZERO_MASK register */
#define SB_ZERO_MASK_MASK_SHIFT 0
#define SB_ZERO_MASK_MASK_MASK (0xFFFFFFFF << SB_ZERO_MASK_MASK_SHIFT)
#define SB_ZERO_MASK_MASK_GET(reg_val) ((reg_val & SB_ZERO_MASK_MASK_MASK) >> SB_ZERO_MASK_MASK_SHIFT)
#define SB_ZERO_MASK_MASK_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_MASK_MASK_MASK) | ((value << SB_ZERO_MASK_MASK_SHIFT) & SB_ZERO_MASK_MASK_MASK))

/* SB_ZERO register */
#define SB_ZERO_STATUS_SHIFT 0
#define SB_ZERO_STATUS_MASK (0xFFFFFFFF << SB_ZERO_STATUS_SHIFT)
#define SB_ZERO_STATUS_GET(reg_val) ((reg_val & SB_ZERO_STATUS_MASK) >> SB_ZERO_STATUS_SHIFT)
#define SB_ZERO_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_STATUS_MASK) | ((value << SB_ZERO_STATUS_SHIFT) & SB_ZERO_STATUS_MASK))

/* SB_VALUE register */
#define SB_VALUE_VALUE_SHIFT 0
#define SB_VALUE_VALUE_MASK (0xFFFFFFFF << SB_VALUE_VALUE_SHIFT)
#define SB_VALUE_VALUE_GET(reg_val) ((reg_val & SB_VALUE_VALUE_MASK) >> SB_VALUE_VALUE_SHIFT)
#define SB_VALUE_VALUE_SET(reg_val, value) \
	((reg_val & ~SB_VALUE_VALUE_MASK) | ((value << SB_VALUE_VALUE_SHIFT) & SB_VALUE_VALUE_MASK))

/* SB_SET_SEL register */
#define SB_SET_SEL_VALUE_SHIFT 0
#define SB_SET_SEL_VALUE_MASK (0xF << SB_SET_SEL_VALUE_SHIFT)
#define SB_SET_SEL_VALUE_GET(reg_val) ((reg_val & SB_SET_SEL_VALUE_MASK) >> SB_SET_SEL_VALUE_SHIFT)
#define SB_SET_SEL_VALUE_SET(reg_val, value) \
	((reg_val & ~SB_SET_SEL_VALUE_MASK) | ((value << SB_SET_SEL_VALUE_SHIFT) & SB_SET_SEL_VALUE_MASK))

/* SB_ALL_ZERO_IRQ_RAW register */
#define SB_ALL_ZERO_IRQ_RAW_STATUS_SHIFT 0
#define SB_ALL_ZERO_IRQ_RAW_STATUS_MASK (0xFFFFFFFF << SB_ALL_ZERO_IRQ_RAW_STATUS_SHIFT)
#define SB_ALL_ZERO_IRQ_RAW_STATUS_GET(reg_val) \
	((reg_val & SB_ALL_ZERO_IRQ_RAW_STATUS_MASK) >> SB_ALL_ZERO_IRQ_RAW_STATUS_SHIFT)
#define SB_ALL_ZERO_IRQ_RAW_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_ALL_ZERO_IRQ_RAW_STATUS_MASK) |    \
	 ((value << SB_ALL_ZERO_IRQ_RAW_STATUS_SHIFT) & SB_ALL_ZERO_IRQ_RAW_STATUS_MASK))

/* SB_ALL_ZERO_IRQ_MASK register */
#define SB_ALL_ZERO_IRQ_MASK_MASK_SHIFT 0
#define SB_ALL_ZERO_IRQ_MASK_MASK_MASK (0xFFFFFFFF << SB_ALL_ZERO_IRQ_MASK_MASK_SHIFT)
#define SB_ALL_ZERO_IRQ_MASK_MASK_GET(reg_val) \
	((reg_val & SB_ALL_ZERO_IRQ_MASK_MASK_MASK) >> SB_ALL_ZERO_IRQ_MASK_MASK_SHIFT)
#define SB_ALL_ZERO_IRQ_MASK_MASK_SET(reg_val, value) \
	((reg_val & ~SB_ALL_ZERO_IRQ_MASK_MASK_MASK) |    \
	 ((value << SB_ALL_ZERO_IRQ_MASK_MASK_SHIFT) & SB_ALL_ZERO_IRQ_MASK_MASK_MASK))

/* SB_ALL_ZERO_IRQ_STATUS register */
#define SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT NaN
#define SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK (0x << SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT)
#define SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_GET(reg_val)     \
	((reg_val & SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK) >> \
	 SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT)
#define SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SET(reg_val, value) \
	((reg_val & ~SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK) |    \
	 ((value << SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT) &    \
	  SB_ALL_ZERO_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK))
#define SB_ALL_ZERO_IRQ_STATUS_STATUS_SHIFT 0
#define SB_ALL_ZERO_IRQ_STATUS_STATUS_MASK (0xFFFFFFFF << SB_ALL_ZERO_IRQ_STATUS_STATUS_SHIFT)
#define SB_ALL_ZERO_IRQ_STATUS_STATUS_GET(reg_val) \
	((reg_val & SB_ALL_ZERO_IRQ_STATUS_STATUS_MASK) >> SB_ALL_ZERO_IRQ_STATUS_STATUS_SHIFT)
#define SB_ALL_ZERO_IRQ_STATUS_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_ALL_ZERO_IRQ_STATUS_STATUS_MASK) |    \
	 ((value << SB_ALL_ZERO_IRQ_STATUS_STATUS_SHIFT) & SB_ALL_ZERO_IRQ_STATUS_STATUS_MASK))

/* SB_ZERO_MASK_IRQ_RAW register */
#define SB_ZERO_MASK_IRQ_RAW_STATUS_SHIFT 0
#define SB_ZERO_MASK_IRQ_RAW_STATUS_MASK (0xFFFFFFFF << SB_ZERO_MASK_IRQ_RAW_STATUS_SHIFT)
#define SB_ZERO_MASK_IRQ_RAW_STATUS_GET(reg_val) \
	((reg_val & SB_ZERO_MASK_IRQ_RAW_STATUS_MASK) >> SB_ZERO_MASK_IRQ_RAW_STATUS_SHIFT)
#define SB_ZERO_MASK_IRQ_RAW_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_MASK_IRQ_RAW_STATUS_MASK) |    \
	 ((value << SB_ZERO_MASK_IRQ_RAW_STATUS_SHIFT) & SB_ZERO_MASK_IRQ_RAW_STATUS_MASK))

/* SB_ZERO_MASK_IRQ_MASK register */
#define SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_SHIFT NaN
#define SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_MASK (0x << SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_SHIFT)
#define SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_GET(reg_val)     \
	((reg_val & SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_MASK) >> \
	 SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_SHIFT)
#define SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_MASK) |    \
	 ((value << SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_SHIFT) &    \
	  SB_ZERO_MASK_IRQ_MASK_CSF_MCU_INTERRUPT_TYPE_MASK))
#define SB_ZERO_MASK_IRQ_MASK_MASK_SHIFT 0
#define SB_ZERO_MASK_IRQ_MASK_MASK_MASK (0xFFFFFFFF << SB_ZERO_MASK_IRQ_MASK_MASK_SHIFT)
#define SB_ZERO_MASK_IRQ_MASK_MASK_GET(reg_val) \
	((reg_val & SB_ZERO_MASK_IRQ_MASK_MASK_MASK) >> SB_ZERO_MASK_IRQ_MASK_MASK_SHIFT)
#define SB_ZERO_MASK_IRQ_MASK_MASK_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_MASK_IRQ_MASK_MASK_MASK) |    \
	 ((value << SB_ZERO_MASK_IRQ_MASK_MASK_SHIFT) & SB_ZERO_MASK_IRQ_MASK_MASK_MASK))

/* SB_ZERO_MASK_IRQ_STATUS register */
#define SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT NaN
#define SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK (0x << SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT)
#define SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_GET(reg_val)     \
	((reg_val & SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK) >> \
	 SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT)
#define SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK) |    \
	 ((value << SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_SHIFT) &    \
	  SB_ZERO_MASK_IRQ_STATUS_CSF_MCU_INTERRUPT_TYPE_MASK))
#define SB_ZERO_MASK_IRQ_STATUS_STATUS_SHIFT 0
#define SB_ZERO_MASK_IRQ_STATUS_STATUS_MASK (0xFFFFFFFF << SB_ZERO_MASK_IRQ_STATUS_STATUS_SHIFT)
#define SB_ZERO_MASK_IRQ_STATUS_STATUS_GET(reg_val) \
	((reg_val & SB_ZERO_MASK_IRQ_STATUS_STATUS_MASK) >> SB_ZERO_MASK_IRQ_STATUS_STATUS_SHIFT)
#define SB_ZERO_MASK_IRQ_STATUS_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_ZERO_MASK_IRQ_STATUS_STATUS_MASK) |    \
	 ((value << SB_ZERO_MASK_IRQ_STATUS_STATUS_SHIFT) & SB_ZERO_MASK_IRQ_STATUS_STATUS_MASK))

/* SB_FAULT_IRQ_RAW register */
#define SB_FAULT_IRQ_RAW_STATUS_SHIFT 0
#define SB_FAULT_IRQ_RAW_STATUS_MASK (0xFFFFFFFF << SB_FAULT_IRQ_RAW_STATUS_SHIFT)
#define SB_FAULT_IRQ_RAW_STATUS_GET(reg_val) ((reg_val & SB_FAULT_IRQ_RAW_STATUS_MASK) >> SB_FAULT_IRQ_RAW_STATUS_SHIFT)
#define SB_FAULT_IRQ_RAW_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_FAULT_IRQ_RAW_STATUS_MASK) |    \
	 ((value << SB_FAULT_IRQ_RAW_STATUS_SHIFT) & SB_FAULT_IRQ_RAW_STATUS_MASK))

/* SB_FAULT_IRQ_MASK register */
#define SB_FAULT_IRQ_MASK_MASK_SHIFT 0
#define SB_FAULT_IRQ_MASK_MASK_MASK (0xFFFFFFFF << SB_FAULT_IRQ_MASK_MASK_SHIFT)
#define SB_FAULT_IRQ_MASK_MASK_GET(reg_val) ((reg_val & SB_FAULT_IRQ_MASK_MASK_MASK) >> SB_FAULT_IRQ_MASK_MASK_SHIFT)
#define SB_FAULT_IRQ_MASK_MASK_SET(reg_val, value) \
	((reg_val & ~SB_FAULT_IRQ_MASK_MASK_MASK) | ((value << SB_FAULT_IRQ_MASK_MASK_SHIFT) & SB_FAULT_IRQ_MASK_MASK_MASK))

/* SB_FAULT_IRQ_STATUS register */
#define SB_FAULT_IRQ_STATUS_STATUS_SHIFT 0
#define SB_FAULT_IRQ_STATUS_STATUS_MASK (0xFFFFFFFF << SB_FAULT_IRQ_STATUS_STATUS_SHIFT)
#define SB_FAULT_IRQ_STATUS_STATUS_GET(reg_val) \
	((reg_val & SB_FAULT_IRQ_STATUS_STATUS_MASK) >> SB_FAULT_IRQ_STATUS_STATUS_SHIFT)
#define SB_FAULT_IRQ_STATUS_STATUS_SET(reg_val, value) \
	((reg_val & ~SB_FAULT_IRQ_STATUS_STATUS_MASK) |    \
	 ((value << SB_FAULT_IRQ_STATUS_STATUS_SHIFT) & SB_FAULT_IRQ_STATUS_STATUS_MASK))

/* SB_FAULT_IRQ_CLEAR register */
#define SB_FAULT_IRQ_CLEAR_CLEAR_SHIFT 0
#define SB_FAULT_IRQ_CLEAR_CLEAR_MASK (0xFFFFFFFF << SB_FAULT_IRQ_CLEAR_CLEAR_SHIFT)
#define SB_FAULT_IRQ_CLEAR_CLEAR_GET(reg_val) \
	((reg_val & SB_FAULT_IRQ_CLEAR_CLEAR_MASK) >> SB_FAULT_IRQ_CLEAR_CLEAR_SHIFT)
#define SB_FAULT_IRQ_CLEAR_CLEAR_SET(reg_val, value) \
	((reg_val & ~SB_FAULT_IRQ_CLEAR_CLEAR_MASK) |    \
	 ((value << SB_FAULT_IRQ_CLEAR_CLEAR_SHIFT) & SB_FAULT_IRQ_CLEAR_CLEAR_MASK))
/* End of SCOREBOARD register set definitions */

/* USER register set definitions */

/* LATEST_FLUSH register */
#define LATEST_FLUSH_FLUSH_ID_SHIFT 0
#define LATEST_FLUSH_FLUSH_ID_MASK (0xFFFFFF << LATEST_FLUSH_FLUSH_ID_SHIFT)
#define LATEST_FLUSH_FLUSH_ID_GET(reg_val) ((reg_val & LATEST_FLUSH_FLUSH_ID_MASK) >> LATEST_FLUSH_FLUSH_ID_SHIFT)
#define LATEST_FLUSH_FLUSH_ID_SET(reg_val, value) \
	((reg_val & ~LATEST_FLUSH_FLUSH_ID_MASK) | ((value << LATEST_FLUSH_FLUSH_ID_SHIFT) & LATEST_FLUSH_FLUSH_ID_MASK))
#define LATEST_FLUSH_ACTIVE_SHIFT 31
#define LATEST_FLUSH_ACTIVE_MASK (0x1 << LATEST_FLUSH_ACTIVE_SHIFT)
#define LATEST_FLUSH_ACTIVE_GET(reg_val) ((reg_val & LATEST_FLUSH_ACTIVE_MASK) >> LATEST_FLUSH_ACTIVE_SHIFT)
#define LATEST_FLUSH_ACTIVE_SET(reg_val, value) \
	((reg_val & ~LATEST_FLUSH_ACTIVE_MASK) | ((value << LATEST_FLUSH_ACTIVE_SHIFT) & LATEST_FLUSH_ACTIVE_MASK))
/* End of USER register set definitions */

/* CSHWIF register set definitions */

/* CSHWIF_CMD_PTR register */
#define CSHWIF_CMD_PTR_POINTER_SHIFT 0
#define CSHWIF_CMD_PTR_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_CMD_PTR_POINTER_SHIFT)
#define CSHWIF_CMD_PTR_POINTER_GET(reg_val) ((reg_val & CSHWIF_CMD_PTR_POINTER_MASK) >> CSHWIF_CMD_PTR_POINTER_SHIFT)
#define CSHWIF_CMD_PTR_POINTER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_CMD_PTR_POINTER_MASK) | ((value << CSHWIF_CMD_PTR_POINTER_SHIFT) & CSHWIF_CMD_PTR_POINTER_MASK))

/* CSHWIF_CMD_PTR_END register */
#define CSHWIF_CMD_PTR_END_POINTER_SHIFT 0
#define CSHWIF_CMD_PTR_END_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_CMD_PTR_END_POINTER_SHIFT)
#define CSHWIF_CMD_PTR_END_POINTER_GET(reg_val) \
	((reg_val & CSHWIF_CMD_PTR_END_POINTER_MASK) >> CSHWIF_CMD_PTR_END_POINTER_SHIFT)
#define CSHWIF_CMD_PTR_END_POINTER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_CMD_PTR_END_POINTER_MASK) |    \
	 ((value << CSHWIF_CMD_PTR_END_POINTER_SHIFT) & CSHWIF_CMD_PTR_END_POINTER_MASK))

/* CSHWIF_CMD_PTR_ADD register */
#define CSHWIF_CMD_PTR_ADD_VALUE_SHIFT 0
#define CSHWIF_CMD_PTR_ADD_VALUE_MASK (0x1 << CSHWIF_CMD_PTR_ADD_VALUE_SHIFT)
#define CSHWIF_CMD_PTR_ADD_VALUE_GET(reg_val) \
	((reg_val & CSHWIF_CMD_PTR_ADD_VALUE_MASK) >> CSHWIF_CMD_PTR_ADD_VALUE_SHIFT)
#define CSHWIF_CMD_PTR_ADD_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_CMD_PTR_ADD_VALUE_MASK) |    \
	 ((value << CSHWIF_CMD_PTR_ADD_VALUE_SHIFT) & CSHWIF_CMD_PTR_ADD_VALUE_MASK))

/* CSHWIF_PREFETCH_BUF_CFG register */
#define CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_SHIFT 0
#define CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_MASK (0x1 << CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_SHIFT)
#define CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_GET(reg_val) \
	((reg_val & CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_MASK) >> CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_SHIFT)
#define CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_MASK) |    \
	 ((value << CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_SHIFT) & CSHWIF_PREFETCH_BUF_CFG_L2C_ALLOCATE_MASK))
#define CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_SHIFT 1
#define CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_MASK (0x1 << CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_SHIFT)
#define CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_GET(reg_val) \
	((reg_val & CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_MASK) >> CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_SHIFT)
#define CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_SET(reg_val, value) \
	((reg_val & ~CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_MASK) |    \
	 ((value << CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_SHIFT) & CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_MASK))
/* CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS values */
#define CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_DATA 0x0
#define CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS_INSTRUCTION 0x1
/* End of CSHWIF_PREFETCH_BUF_CFG_L2C_INSTR_ACCESS values */

/* CSHWIF_PREFETCH_BUF_CTRL register */
#define CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_SHIFT 0
#define CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_MASK (0x1 << CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_SHIFT)
#define CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_GET(reg_val) \
	((reg_val & CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_MASK) >> CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_SHIFT)
#define CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_MASK) |    \
	 ((value << CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_SHIFT) & CSHWIF_PREFETCH_BUF_CTRL_INVALIDATE_MASK))

/* CSHWIF_PREFETCH_BUF_STATUS register */
#define CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_SHIFT 0
#define CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_MASK (0x1 << CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_SHIFT)
#define CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_GET(reg_val) \
	((reg_val & CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_MASK) >> CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_SHIFT)
#define CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_SET(reg_val, value) \
	((reg_val & ~CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_MASK) |    \
	 ((value << CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_SHIFT) & CSHWIF_PREFETCH_BUF_STATUS_INVALIDATING_MASK))

/* CSHWIF_CTRL register */
#define CSHWIF_CTRL_STATE_REQUEST_SHIFT 0
#define CSHWIF_CTRL_STATE_REQUEST_MASK (0x7 << CSHWIF_CTRL_STATE_REQUEST_SHIFT)
#define CSHWIF_CTRL_STATE_REQUEST_GET(reg_val) \
	((reg_val & CSHWIF_CTRL_STATE_REQUEST_MASK) >> CSHWIF_CTRL_STATE_REQUEST_SHIFT)
#define CSHWIF_CTRL_STATE_REQUEST_SET(reg_val, value) \
	((reg_val & ~CSHWIF_CTRL_STATE_REQUEST_MASK) |    \
	 ((value << CSHWIF_CTRL_STATE_REQUEST_SHIFT) & CSHWIF_CTRL_STATE_REQUEST_MASK))
/* CSHWIF_CTRL_STATE_REQUEST values */
#define CSHWIF_CTRL_STATE_REQUEST_DISABLED 0x0
#define CSHWIF_CTRL_STATE_REQUEST_ENABLED 0x2
#define CSHWIF_CTRL_STATE_REQUEST_HALTED 0x4
#define CSHWIF_CTRL_STATE_REQUEST_PAUSED 0x6
/* End of CSHWIF_CTRL_STATE_REQUEST values */

/* CSHWIF_STATUS register */
#define CSHWIF_STATUS_STATE_SHIFT 0
#define CSHWIF_STATUS_STATE_MASK (0x7 << CSHWIF_STATUS_STATE_SHIFT)
#define CSHWIF_STATUS_STATE_GET(reg_val) ((reg_val & CSHWIF_STATUS_STATE_MASK) >> CSHWIF_STATUS_STATE_SHIFT)
#define CSHWIF_STATUS_STATE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_STATUS_STATE_MASK) | ((value << CSHWIF_STATUS_STATE_SHIFT) & CSHWIF_STATUS_STATE_MASK))
/* CSHWIF_STATUS_STATE values */
#define CSHWIF_STATUS_STATE_DISABLED 0x0
#define CSHWIF_STATUS_STATE_DISABLING 0x1
#define CSHWIF_STATUS_STATE_ENABLED 0x2
#define CSHWIF_STATUS_STATE_ENABLING 0x3
#define CSHWIF_STATUS_STATE_HALTED 0x4
#define CSHWIF_STATUS_STATE_HALTING 0x5
#define CSHWIF_STATUS_STATE_PAUSED 0x6
#define CSHWIF_STATUS_STATE_PAUSING 0x7
/* End of CSHWIF_STATUS_STATE values */

/* CSHWIF_ITER_COMPUTE register */
#define CSHWIF_ITER_COMPUTE_ID_SHIFT 0
#define CSHWIF_ITER_COMPUTE_ID_MASK (0xF << CSHWIF_ITER_COMPUTE_ID_SHIFT)
#define CSHWIF_ITER_COMPUTE_ID_GET(reg_val) ((reg_val & CSHWIF_ITER_COMPUTE_ID_MASK) >> CSHWIF_ITER_COMPUTE_ID_SHIFT)
#define CSHWIF_ITER_COMPUTE_ID_SET(reg_val, value) \
	((reg_val & ~CSHWIF_ITER_COMPUTE_ID_MASK) | ((value << CSHWIF_ITER_COMPUTE_ID_SHIFT) & CSHWIF_ITER_COMPUTE_ID_MASK))
#define CSHWIF_ITER_COMPUTE_ENABLE_SHIFT 31
#define CSHWIF_ITER_COMPUTE_ENABLE_MASK (0x1 << CSHWIF_ITER_COMPUTE_ENABLE_SHIFT)
#define CSHWIF_ITER_COMPUTE_ENABLE_GET(reg_val) \
	((reg_val & CSHWIF_ITER_COMPUTE_ENABLE_MASK) >> CSHWIF_ITER_COMPUTE_ENABLE_SHIFT)
#define CSHWIF_ITER_COMPUTE_ENABLE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_ITER_COMPUTE_ENABLE_MASK) |    \
	 ((value << CSHWIF_ITER_COMPUTE_ENABLE_SHIFT) & CSHWIF_ITER_COMPUTE_ENABLE_MASK))

/* CSHWIF_ITER_FRAGMENT register */
#define CSHWIF_ITER_FRAGMENT_ID_SHIFT 0
#define CSHWIF_ITER_FRAGMENT_ID_MASK (0xF << CSHWIF_ITER_FRAGMENT_ID_SHIFT)
#define CSHWIF_ITER_FRAGMENT_ID_GET(reg_val) ((reg_val & CSHWIF_ITER_FRAGMENT_ID_MASK) >> CSHWIF_ITER_FRAGMENT_ID_SHIFT)
#define CSHWIF_ITER_FRAGMENT_ID_SET(reg_val, value) \
	((reg_val & ~CSHWIF_ITER_FRAGMENT_ID_MASK) |    \
	 ((value << CSHWIF_ITER_FRAGMENT_ID_SHIFT) & CSHWIF_ITER_FRAGMENT_ID_MASK))
#define CSHWIF_ITER_FRAGMENT_ENABLE_SHIFT 31
#define CSHWIF_ITER_FRAGMENT_ENABLE_MASK (0x1 << CSHWIF_ITER_FRAGMENT_ENABLE_SHIFT)
#define CSHWIF_ITER_FRAGMENT_ENABLE_GET(reg_val) \
	((reg_val & CSHWIF_ITER_FRAGMENT_ENABLE_MASK) >> CSHWIF_ITER_FRAGMENT_ENABLE_SHIFT)
#define CSHWIF_ITER_FRAGMENT_ENABLE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_ITER_FRAGMENT_ENABLE_MASK) |    \
	 ((value << CSHWIF_ITER_FRAGMENT_ENABLE_SHIFT) & CSHWIF_ITER_FRAGMENT_ENABLE_MASK))

/* CSHWIF_ITER_TILER register */
#define CSHWIF_ITER_TILER_ID_SHIFT 0
#define CSHWIF_ITER_TILER_ID_MASK (0xF << CSHWIF_ITER_TILER_ID_SHIFT)
#define CSHWIF_ITER_TILER_ID_GET(reg_val) ((reg_val & CSHWIF_ITER_TILER_ID_MASK) >> CSHWIF_ITER_TILER_ID_SHIFT)
#define CSHWIF_ITER_TILER_ID_SET(reg_val, value) \
	((reg_val & ~CSHWIF_ITER_TILER_ID_MASK) | ((value << CSHWIF_ITER_TILER_ID_SHIFT) & CSHWIF_ITER_TILER_ID_MASK))
#define CSHWIF_ITER_TILER_ENABLE_SHIFT 31
#define CSHWIF_ITER_TILER_ENABLE_MASK (0x1 << CSHWIF_ITER_TILER_ENABLE_SHIFT)
#define CSHWIF_ITER_TILER_ENABLE_GET(reg_val) \
	((reg_val & CSHWIF_ITER_TILER_ENABLE_MASK) >> CSHWIF_ITER_TILER_ENABLE_SHIFT)
#define CSHWIF_ITER_TILER_ENABLE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_ITER_TILER_ENABLE_MASK) |    \
	 ((value << CSHWIF_ITER_TILER_ENABLE_SHIFT) & CSHWIF_ITER_TILER_ENABLE_MASK))

/* CSHWIF_JASID register */
#define CSHWIF_JASID_JASID_SHIFT 0
#define CSHWIF_JASID_JASID_MASK (0xF << CSHWIF_JASID_JASID_SHIFT)
#define CSHWIF_JASID_JASID_GET(reg_val) ((reg_val & CSHWIF_JASID_JASID_MASK) >> CSHWIF_JASID_JASID_SHIFT)
#define CSHWIF_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~CSHWIF_JASID_JASID_MASK) | ((value << CSHWIF_JASID_JASID_SHIFT) & CSHWIF_JASID_JASID_MASK))

/* CSHWIF_TRAP_CFG register */
#define CSHWIF_TRAP_CFG_STATUS_SHIFT 0
#define CSHWIF_TRAP_CFG_STATUS_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_TRAP_CFG_STATUS_SHIFT)
#define CSHWIF_TRAP_CFG_STATUS_GET(reg_val) ((reg_val & CSHWIF_TRAP_CFG_STATUS_MASK) >> CSHWIF_TRAP_CFG_STATUS_SHIFT)
#define CSHWIF_TRAP_CFG_STATUS_SET(reg_val, value) \
	((reg_val & ~CSHWIF_TRAP_CFG_STATUS_MASK) | ((value << CSHWIF_TRAP_CFG_STATUS_SHIFT) & CSHWIF_TRAP_CFG_STATUS_MASK))

/* CSHWIF_EMULATION_INSTR register */
#define CSHWIF_EMULATION_INSTR_VALUE_SHIFT 0
#define CSHWIF_EMULATION_INSTR_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_EMULATION_INSTR_VALUE_SHIFT)
#define CSHWIF_EMULATION_INSTR_VALUE_GET(reg_val) \
	((reg_val & CSHWIF_EMULATION_INSTR_VALUE_MASK) >> CSHWIF_EMULATION_INSTR_VALUE_SHIFT)
#define CSHWIF_EMULATION_INSTR_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EMULATION_INSTR_VALUE_MASK) |    \
	 ((value << CSHWIF_EMULATION_INSTR_VALUE_SHIFT) & CSHWIF_EMULATION_INSTR_VALUE_MASK))

/* CSHWIF_FASTCMD register */
#define CSHWIF_FASTCMD_VALUE_SHIFT 0
#define CSHWIF_FASTCMD_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_FASTCMD_VALUE_SHIFT)
#define CSHWIF_FASTCMD_VALUE_GET(reg_val) ((reg_val & CSHWIF_FASTCMD_VALUE_MASK) >> CSHWIF_FASTCMD_VALUE_SHIFT)
#define CSHWIF_FASTCMD_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_FASTCMD_VALUE_MASK) | ((value << CSHWIF_FASTCMD_VALUE_SHIFT) & CSHWIF_FASTCMD_VALUE_MASK))

/* CSHWIF_FASTCMD_CLEAR register */
#define CSHWIF_FASTCMD_CLEAR_CLEAR_SHIFT 0
#define CSHWIF_FASTCMD_CLEAR_CLEAR_MASK (0x1 << CSHWIF_FASTCMD_CLEAR_CLEAR_SHIFT)
#define CSHWIF_FASTCMD_CLEAR_CLEAR_GET(reg_val) \
	((reg_val & CSHWIF_FASTCMD_CLEAR_CLEAR_MASK) >> CSHWIF_FASTCMD_CLEAR_CLEAR_SHIFT)
#define CSHWIF_FASTCMD_CLEAR_CLEAR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_FASTCMD_CLEAR_CLEAR_MASK) |    \
	 ((value << CSHWIF_FASTCMD_CLEAR_CLEAR_SHIFT) & CSHWIF_FASTCMD_CLEAR_CLEAR_MASK))

/* CSHWIF_WAIT_STATUS register */
#define CSHWIF_WAIT_STATUS_SB_FLAGS_SHIFT 0
#define CSHWIF_WAIT_STATUS_SB_FLAGS_MASK (0xFF << CSHWIF_WAIT_STATUS_SB_FLAGS_SHIFT)
#define CSHWIF_WAIT_STATUS_SB_FLAGS_GET(reg_val) \
	((reg_val & CSHWIF_WAIT_STATUS_SB_FLAGS_MASK) >> CSHWIF_WAIT_STATUS_SB_FLAGS_SHIFT)
#define CSHWIF_WAIT_STATUS_SB_FLAGS_SET(reg_val, value) \
	((reg_val & ~CSHWIF_WAIT_STATUS_SB_FLAGS_MASK) |    \
	 ((value << CSHWIF_WAIT_STATUS_SB_FLAGS_SHIFT) & CSHWIF_WAIT_STATUS_SB_FLAGS_MASK))
#define CSHWIF_WAIT_STATUS_WAITING_SHIFT 31
#define CSHWIF_WAIT_STATUS_WAITING_MASK (0x1 << CSHWIF_WAIT_STATUS_WAITING_SHIFT)
#define CSHWIF_WAIT_STATUS_WAITING_GET(reg_val) \
	((reg_val & CSHWIF_WAIT_STATUS_WAITING_MASK) >> CSHWIF_WAIT_STATUS_WAITING_SHIFT)
#define CSHWIF_WAIT_STATUS_WAITING_SET(reg_val, value) \
	((reg_val & ~CSHWIF_WAIT_STATUS_WAITING_MASK) |    \
	 ((value << CSHWIF_WAIT_STATUS_WAITING_SHIFT) & CSHWIF_WAIT_STATUS_WAITING_MASK))

/* CSHWIF_SB_SET_SEL register */
#define CSHWIF_SB_SET_SEL_VALUE_SHIFT 0
#define CSHWIF_SB_SET_SEL_VALUE_MASK (0xF << CSHWIF_SB_SET_SEL_VALUE_SHIFT)
#define CSHWIF_SB_SET_SEL_VALUE_GET(reg_val) ((reg_val & CSHWIF_SB_SET_SEL_VALUE_MASK) >> CSHWIF_SB_SET_SEL_VALUE_SHIFT)
#define CSHWIF_SB_SET_SEL_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_SB_SET_SEL_VALUE_MASK) |    \
	 ((value << CSHWIF_SB_SET_SEL_VALUE_SHIFT) & CSHWIF_SB_SET_SEL_VALUE_MASK))

/* CSHWIF_SB_SEL register */
#define CSHWIF_SB_SEL_ENDPOINT_ENTRY_SHIFT 0
#define CSHWIF_SB_SEL_ENDPOINT_ENTRY_MASK (0xF << CSHWIF_SB_SEL_ENDPOINT_ENTRY_SHIFT)
#define CSHWIF_SB_SEL_ENDPOINT_ENTRY_GET(reg_val) \
	((reg_val & CSHWIF_SB_SEL_ENDPOINT_ENTRY_MASK) >> CSHWIF_SB_SEL_ENDPOINT_ENTRY_SHIFT)
#define CSHWIF_SB_SEL_ENDPOINT_ENTRY_SET(reg_val, value) \
	((reg_val & ~CSHWIF_SB_SEL_ENDPOINT_ENTRY_MASK) |    \
	 ((value << CSHWIF_SB_SEL_ENDPOINT_ENTRY_SHIFT) & CSHWIF_SB_SEL_ENDPOINT_ENTRY_MASK))
#define CSHWIF_SB_SEL_OTHER_ENTRY_SHIFT 4
#define CSHWIF_SB_SEL_OTHER_ENTRY_MASK (0xF << CSHWIF_SB_SEL_OTHER_ENTRY_SHIFT)
#define CSHWIF_SB_SEL_OTHER_ENTRY_GET(reg_val) \
	((reg_val & CSHWIF_SB_SEL_OTHER_ENTRY_MASK) >> CSHWIF_SB_SEL_OTHER_ENTRY_SHIFT)
#define CSHWIF_SB_SEL_OTHER_ENTRY_SET(reg_val, value) \
	((reg_val & ~CSHWIF_SB_SEL_OTHER_ENTRY_MASK) |    \
	 ((value << CSHWIF_SB_SEL_OTHER_ENTRY_SHIFT) & CSHWIF_SB_SEL_OTHER_ENTRY_MASK))

/* CSHWIF_COMMAND_COUNTER register */
#define CSHWIF_COMMAND_COUNTER_VALUE_SHIFT 0
#define CSHWIF_COMMAND_COUNTER_VALUE_MASK (0xFFFFFFFF << CSHWIF_COMMAND_COUNTER_VALUE_SHIFT)
#define CSHWIF_COMMAND_COUNTER_VALUE_GET(reg_val) \
	((reg_val & CSHWIF_COMMAND_COUNTER_VALUE_MASK) >> CSHWIF_COMMAND_COUNTER_VALUE_SHIFT)
#define CSHWIF_COMMAND_COUNTER_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_COMMAND_COUNTER_VALUE_MASK) |    \
	 ((value << CSHWIF_COMMAND_COUNTER_VALUE_SHIFT) & CSHWIF_COMMAND_COUNTER_VALUE_MASK))

/* CSHWIF_PROGRESS_COMPARE register */
#define CSHWIF_PROGRESS_COMPARE_VALUE_SHIFT 0
#define CSHWIF_PROGRESS_COMPARE_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_PROGRESS_COMPARE_VALUE_SHIFT)
#define CSHWIF_PROGRESS_COMPARE_VALUE_GET(reg_val) \
	((reg_val & CSHWIF_PROGRESS_COMPARE_VALUE_MASK) >> CSHWIF_PROGRESS_COMPARE_VALUE_SHIFT)
#define CSHWIF_PROGRESS_COMPARE_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_PROGRESS_COMPARE_VALUE_MASK) |    \
	 ((value << CSHWIF_PROGRESS_COMPARE_VALUE_SHIFT) & CSHWIF_PROGRESS_COMPARE_VALUE_MASK))

/* CSHWIF_PROGRESS_LIVE register */
#define CSHWIF_PROGRESS_LIVE_VALUE_SHIFT 0
#define CSHWIF_PROGRESS_LIVE_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_PROGRESS_LIVE_VALUE_SHIFT)
#define CSHWIF_PROGRESS_LIVE_VALUE_GET(reg_val) \
	((reg_val & CSHWIF_PROGRESS_LIVE_VALUE_MASK) >> CSHWIF_PROGRESS_LIVE_VALUE_SHIFT)
#define CSHWIF_PROGRESS_LIVE_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_PROGRESS_LIVE_VALUE_MASK) |    \
	 ((value << CSHWIF_PROGRESS_LIVE_VALUE_SHIFT) & CSHWIF_PROGRESS_LIVE_VALUE_MASK))

/* CSHWIF_EVENT_RAW register */
#define CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_SHIFT 0
#define CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_MASK (0x1 << CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_MASK) >> CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_SHIFT) & CSHWIF_EVENT_RAW_COMMAND_BUFFER_COMPLETED_MASK))
#define CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_SHIFT 1
#define CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_MASK (0x1 << CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_MASK) >> CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_SHIFT) & CSHWIF_EVENT_RAW_COMMAND_POINTER_OVERFLOW_MASK))
#define CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_SHIFT 2
#define CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_MASK (0x1 << CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_MASK) >> CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_SHIFT) & CSHWIF_EVENT_RAW_COMMAND_ILLEGAL_MASK))
#define CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_SHIFT 3
#define CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_MASK (0x1 << CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_MASK) >> CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_SHIFT) & CSHWIF_EVENT_RAW_COMMAND_UNKNOWN_MASK))
#define CSHWIF_EVENT_RAW_COMMAND_TRAPPED_SHIFT 4
#define CSHWIF_EVENT_RAW_COMMAND_TRAPPED_MASK (0x1 << CSHWIF_EVENT_RAW_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_TRAPPED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_COMMAND_TRAPPED_MASK) >> CSHWIF_EVENT_RAW_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_RAW_COMMAND_TRAPPED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_COMMAND_TRAPPED_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_COMMAND_TRAPPED_SHIFT) & CSHWIF_EVENT_RAW_COMMAND_TRAPPED_MASK))
#define CSHWIF_EVENT_RAW_PROGRESS_COMPARE_SHIFT 7
#define CSHWIF_EVENT_RAW_PROGRESS_COMPARE_MASK (0x1 << CSHWIF_EVENT_RAW_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_RAW_PROGRESS_COMPARE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_PROGRESS_COMPARE_MASK) >> CSHWIF_EVENT_RAW_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_RAW_PROGRESS_COMPARE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_PROGRESS_COMPARE_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_PROGRESS_COMPARE_SHIFT) & CSHWIF_EVENT_RAW_PROGRESS_COMPARE_MASK))
#define CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_SHIFT 8
#define CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_MASK (0x1 << CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_MASK) >> CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_SHIFT) & CSHWIF_EVENT_RAW_FASTCMD_COMPLETE_MASK))
#define CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_SHIFT 9
#define CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_MASK (0x1 << CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_MASK) >> CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_SHIFT) & CSHWIF_EVENT_RAW_FASTCMD_OVERRUN_MASK))
#define CSHWIF_EVENT_RAW_FASTCMD_ERROR_SHIFT 10
#define CSHWIF_EVENT_RAW_FASTCMD_ERROR_MASK (0x1 << CSHWIF_EVENT_RAW_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_ERROR_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_FASTCMD_ERROR_MASK) >> CSHWIF_EVENT_RAW_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_ERROR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_FASTCMD_ERROR_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_FASTCMD_ERROR_SHIFT) & CSHWIF_EVENT_RAW_FASTCMD_ERROR_MASK))
#define CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_SHIFT 11
#define CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_MASK (0x1 << CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_MASK) >> CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_SHIFT) & CSHWIF_EVENT_RAW_FASTCMD_ACTIVE_MASK))
#define CSHWIF_EVENT_RAW_FAULT_SHIFT 15
#define CSHWIF_EVENT_RAW_FAULT_MASK (0x1 << CSHWIF_EVENT_RAW_FAULT_SHIFT)
#define CSHWIF_EVENT_RAW_FAULT_GET(reg_val) ((reg_val & CSHWIF_EVENT_RAW_FAULT_MASK) >> CSHWIF_EVENT_RAW_FAULT_SHIFT)
#define CSHWIF_EVENT_RAW_FAULT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_FAULT_MASK) | ((value << CSHWIF_EVENT_RAW_FAULT_SHIFT) & CSHWIF_EVENT_RAW_FAULT_MASK))
#define CSHWIF_EVENT_RAW_STALL_TILER_SHIFT 16
#define CSHWIF_EVENT_RAW_STALL_TILER_MASK (0x1 << CSHWIF_EVENT_RAW_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STALL_TILER_MASK) >> CSHWIF_EVENT_RAW_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STALL_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STALL_TILER_SHIFT) & CSHWIF_EVENT_RAW_STALL_TILER_MASK))
#define CSHWIF_EVENT_RAW_STALL_COMPUTE_SHIFT 17
#define CSHWIF_EVENT_RAW_STALL_COMPUTE_MASK (0x1 << CSHWIF_EVENT_RAW_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STALL_COMPUTE_MASK) >> CSHWIF_EVENT_RAW_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STALL_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STALL_COMPUTE_SHIFT) & CSHWIF_EVENT_RAW_STALL_COMPUTE_MASK))
#define CSHWIF_EVENT_RAW_STALL_FRAGMENT_SHIFT 18
#define CSHWIF_EVENT_RAW_STALL_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_RAW_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STALL_FRAGMENT_MASK) >> CSHWIF_EVENT_RAW_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STALL_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STALL_FRAGMENT_SHIFT) & CSHWIF_EVENT_RAW_STALL_FRAGMENT_MASK))
#define CSHWIF_EVENT_RAW_STALL_LSU_SHIFT 19
#define CSHWIF_EVENT_RAW_STALL_LSU_MASK (0x1 << CSHWIF_EVENT_RAW_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_LSU_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STALL_LSU_MASK) >> CSHWIF_EVENT_RAW_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_LSU_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STALL_LSU_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STALL_LSU_SHIFT) & CSHWIF_EVENT_RAW_STALL_LSU_MASK))
#define CSHWIF_EVENT_RAW_STALL_WAIT_SHIFT 20
#define CSHWIF_EVENT_RAW_STALL_WAIT_MASK (0x1 << CSHWIF_EVENT_RAW_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_WAIT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STALL_WAIT_MASK) >> CSHWIF_EVENT_RAW_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_RAW_STALL_WAIT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STALL_WAIT_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STALL_WAIT_SHIFT) & CSHWIF_EVENT_RAW_STALL_WAIT_MASK))
#define CSHWIF_EVENT_RAW_BLOCK_TILER_SHIFT 24
#define CSHWIF_EVENT_RAW_BLOCK_TILER_MASK (0x1 << CSHWIF_EVENT_RAW_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_RAW_BLOCK_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_BLOCK_TILER_MASK) >> CSHWIF_EVENT_RAW_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_RAW_BLOCK_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_BLOCK_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_BLOCK_TILER_SHIFT) & CSHWIF_EVENT_RAW_BLOCK_TILER_MASK))
#define CSHWIF_EVENT_RAW_BLOCK_COMPUTE_SHIFT 25
#define CSHWIF_EVENT_RAW_BLOCK_COMPUTE_MASK (0x1 << CSHWIF_EVENT_RAW_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_RAW_BLOCK_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_BLOCK_COMPUTE_MASK) >> CSHWIF_EVENT_RAW_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_RAW_BLOCK_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_BLOCK_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_BLOCK_COMPUTE_SHIFT) & CSHWIF_EVENT_RAW_BLOCK_COMPUTE_MASK))
#define CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_SHIFT 26
#define CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_MASK) >> CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_SHIFT) & CSHWIF_EVENT_RAW_BLOCK_FRAGMENT_MASK))
#define CSHWIF_EVENT_RAW_STATE_DISABLED_SHIFT 28
#define CSHWIF_EVENT_RAW_STATE_DISABLED_MASK (0x1 << CSHWIF_EVENT_RAW_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_DISABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STATE_DISABLED_MASK) >> CSHWIF_EVENT_RAW_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_DISABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STATE_DISABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STATE_DISABLED_SHIFT) & CSHWIF_EVENT_RAW_STATE_DISABLED_MASK))
#define CSHWIF_EVENT_RAW_STATE_ENABLED_SHIFT 29
#define CSHWIF_EVENT_RAW_STATE_ENABLED_MASK (0x1 << CSHWIF_EVENT_RAW_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_ENABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STATE_ENABLED_MASK) >> CSHWIF_EVENT_RAW_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_ENABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STATE_ENABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STATE_ENABLED_SHIFT) & CSHWIF_EVENT_RAW_STATE_ENABLED_MASK))
#define CSHWIF_EVENT_RAW_STATE_HALTED_SHIFT 30
#define CSHWIF_EVENT_RAW_STATE_HALTED_MASK (0x1 << CSHWIF_EVENT_RAW_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_HALTED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STATE_HALTED_MASK) >> CSHWIF_EVENT_RAW_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_HALTED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STATE_HALTED_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STATE_HALTED_SHIFT) & CSHWIF_EVENT_RAW_STATE_HALTED_MASK))
#define CSHWIF_EVENT_RAW_STATE_PAUSED_SHIFT 31
#define CSHWIF_EVENT_RAW_STATE_PAUSED_MASK (0x1 << CSHWIF_EVENT_RAW_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_PAUSED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_RAW_STATE_PAUSED_MASK) >> CSHWIF_EVENT_RAW_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_RAW_STATE_PAUSED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_RAW_STATE_PAUSED_MASK) |    \
	 ((value << CSHWIF_EVENT_RAW_STATE_PAUSED_SHIFT) & CSHWIF_EVENT_RAW_STATE_PAUSED_MASK))

/* CSHWIF_EVENT_CLEAR register */
#define CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_SHIFT 0
#define CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_MASK (0x1 << CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_MASK) >> CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_SHIFT) &    \
	  CSHWIF_EVENT_CLEAR_COMMAND_BUFFER_COMPLETED_MASK))
#define CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_SHIFT 1
#define CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_MASK (0x1 << CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_MASK) >> CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_SHIFT) &    \
	  CSHWIF_EVENT_CLEAR_COMMAND_POINTER_OVERFLOW_MASK))
#define CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_SHIFT 2
#define CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_MASK (0x1 << CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_MASK) >> CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_SHIFT) & CSHWIF_EVENT_CLEAR_COMMAND_ILLEGAL_MASK))
#define CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_SHIFT 3
#define CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_MASK (0x1 << CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_MASK) >> CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_SHIFT) & CSHWIF_EVENT_CLEAR_COMMAND_UNKNOWN_MASK))
#define CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_SHIFT 4
#define CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_MASK (0x1 << CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_MASK) >> CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_SHIFT) & CSHWIF_EVENT_CLEAR_COMMAND_TRAPPED_MASK))
#define CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_SHIFT 7
#define CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_MASK (0x1 << CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_MASK) >> CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_SHIFT) & CSHWIF_EVENT_CLEAR_PROGRESS_COMPARE_MASK))
#define CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_SHIFT 8
#define CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_MASK (0x1 << CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_MASK) >> CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_SHIFT) & CSHWIF_EVENT_CLEAR_FASTCMD_COMPLETE_MASK))
#define CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_SHIFT 9
#define CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_MASK (0x1 << CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_MASK) >> CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_SHIFT) & CSHWIF_EVENT_CLEAR_FASTCMD_OVERRUN_MASK))
#define CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_SHIFT 10
#define CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_MASK (0x1 << CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_MASK) >> CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_SHIFT) & CSHWIF_EVENT_CLEAR_FASTCMD_ERROR_MASK))
#define CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_SHIFT 11
#define CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_MASK (0x1 << CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_MASK) >> CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_SHIFT) & CSHWIF_EVENT_CLEAR_FASTCMD_ACTIVE_MASK))
#define CSHWIF_EVENT_CLEAR_FAULT_SHIFT 15
#define CSHWIF_EVENT_CLEAR_FAULT_MASK (0x1 << CSHWIF_EVENT_CLEAR_FAULT_SHIFT)
#define CSHWIF_EVENT_CLEAR_FAULT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_FAULT_MASK) >> CSHWIF_EVENT_CLEAR_FAULT_SHIFT)
#define CSHWIF_EVENT_CLEAR_FAULT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_FAULT_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_FAULT_SHIFT) & CSHWIF_EVENT_CLEAR_FAULT_MASK))
#define CSHWIF_EVENT_CLEAR_STALL_TILER_SHIFT 16
#define CSHWIF_EVENT_CLEAR_STALL_TILER_MASK (0x1 << CSHWIF_EVENT_CLEAR_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STALL_TILER_MASK) >> CSHWIF_EVENT_CLEAR_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STALL_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STALL_TILER_SHIFT) & CSHWIF_EVENT_CLEAR_STALL_TILER_MASK))
#define CSHWIF_EVENT_CLEAR_STALL_COMPUTE_SHIFT 17
#define CSHWIF_EVENT_CLEAR_STALL_COMPUTE_MASK (0x1 << CSHWIF_EVENT_CLEAR_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STALL_COMPUTE_MASK) >> CSHWIF_EVENT_CLEAR_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STALL_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STALL_COMPUTE_SHIFT) & CSHWIF_EVENT_CLEAR_STALL_COMPUTE_MASK))
#define CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_SHIFT 18
#define CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_MASK) >> CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_SHIFT) & CSHWIF_EVENT_CLEAR_STALL_FRAGMENT_MASK))
#define CSHWIF_EVENT_CLEAR_STALL_LSU_SHIFT 19
#define CSHWIF_EVENT_CLEAR_STALL_LSU_MASK (0x1 << CSHWIF_EVENT_CLEAR_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_LSU_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STALL_LSU_MASK) >> CSHWIF_EVENT_CLEAR_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_LSU_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STALL_LSU_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STALL_LSU_SHIFT) & CSHWIF_EVENT_CLEAR_STALL_LSU_MASK))
#define CSHWIF_EVENT_CLEAR_STALL_WAIT_SHIFT 20
#define CSHWIF_EVENT_CLEAR_STALL_WAIT_MASK (0x1 << CSHWIF_EVENT_CLEAR_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_WAIT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STALL_WAIT_MASK) >> CSHWIF_EVENT_CLEAR_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_CLEAR_STALL_WAIT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STALL_WAIT_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STALL_WAIT_SHIFT) & CSHWIF_EVENT_CLEAR_STALL_WAIT_MASK))
#define CSHWIF_EVENT_CLEAR_BLOCK_TILER_SHIFT 24
#define CSHWIF_EVENT_CLEAR_BLOCK_TILER_MASK (0x1 << CSHWIF_EVENT_CLEAR_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_CLEAR_BLOCK_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_BLOCK_TILER_MASK) >> CSHWIF_EVENT_CLEAR_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_CLEAR_BLOCK_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_BLOCK_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_BLOCK_TILER_SHIFT) & CSHWIF_EVENT_CLEAR_BLOCK_TILER_MASK))
#define CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_SHIFT 25
#define CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_MASK (0x1 << CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_MASK) >> CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_SHIFT) & CSHWIF_EVENT_CLEAR_BLOCK_COMPUTE_MASK))
#define CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_SHIFT 26
#define CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_MASK) >> CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_SHIFT) & CSHWIF_EVENT_CLEAR_BLOCK_FRAGMENT_MASK))
#define CSHWIF_EVENT_CLEAR_STATE_DISABLED_SHIFT 28
#define CSHWIF_EVENT_CLEAR_STATE_DISABLED_MASK (0x1 << CSHWIF_EVENT_CLEAR_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_DISABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STATE_DISABLED_MASK) >> CSHWIF_EVENT_CLEAR_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_DISABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STATE_DISABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STATE_DISABLED_SHIFT) & CSHWIF_EVENT_CLEAR_STATE_DISABLED_MASK))
#define CSHWIF_EVENT_CLEAR_STATE_ENABLED_SHIFT 29
#define CSHWIF_EVENT_CLEAR_STATE_ENABLED_MASK (0x1 << CSHWIF_EVENT_CLEAR_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_ENABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STATE_ENABLED_MASK) >> CSHWIF_EVENT_CLEAR_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_ENABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STATE_ENABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STATE_ENABLED_SHIFT) & CSHWIF_EVENT_CLEAR_STATE_ENABLED_MASK))
#define CSHWIF_EVENT_CLEAR_STATE_HALTED_SHIFT 30
#define CSHWIF_EVENT_CLEAR_STATE_HALTED_MASK (0x1 << CSHWIF_EVENT_CLEAR_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_HALTED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STATE_HALTED_MASK) >> CSHWIF_EVENT_CLEAR_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_HALTED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STATE_HALTED_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STATE_HALTED_SHIFT) & CSHWIF_EVENT_CLEAR_STATE_HALTED_MASK))
#define CSHWIF_EVENT_CLEAR_STATE_PAUSED_SHIFT 31
#define CSHWIF_EVENT_CLEAR_STATE_PAUSED_MASK (0x1 << CSHWIF_EVENT_CLEAR_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_PAUSED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_CLEAR_STATE_PAUSED_MASK) >> CSHWIF_EVENT_CLEAR_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_CLEAR_STATE_PAUSED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_CLEAR_STATE_PAUSED_MASK) |    \
	 ((value << CSHWIF_EVENT_CLEAR_STATE_PAUSED_SHIFT) & CSHWIF_EVENT_CLEAR_STATE_PAUSED_MASK))

/* CSHWIF_EVENT_IRQ_ENABLE register */
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT 0
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_MASK \
	(0x1 << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_MASK) >> \
	 CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT) &    \
	  CSHWIF_EVENT_IRQ_ENABLE_COMMAND_BUFFER_COMPLETED_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT 1
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_MASK \
	(0x1 << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_MASK) >> \
	 CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT) &    \
	  CSHWIF_EVENT_IRQ_ENABLE_COMMAND_POINTER_OVERFLOW_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_SHIFT 2
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_ILLEGAL_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_SHIFT 3
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_UNKNOWN_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_SHIFT 4
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_COMMAND_TRAPPED_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_SHIFT 7
#define CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_PROGRESS_COMPARE_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_SHIFT 8
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_COMPLETE_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_SHIFT 9
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_OVERRUN_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_SHIFT 10
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ERROR_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_SHIFT 11
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_FASTCMD_ACTIVE_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_FAULT_SHIFT 15
#define CSHWIF_EVENT_IRQ_ENABLE_FAULT_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_FAULT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FAULT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_FAULT_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_FAULT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_FAULT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_FAULT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_FAULT_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_FAULT_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_SHIFT 16
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STALL_TILER_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_SHIFT 17
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STALL_COMPUTE_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_SHIFT 18
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STALL_FRAGMENT_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_SHIFT 19
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STALL_LSU_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_SHIFT 20
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STALL_WAIT_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_SHIFT 24
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_BLOCK_TILER_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_SHIFT 25
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_BLOCK_COMPUTE_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_SHIFT 26
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_BLOCK_FRAGMENT_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_SHIFT 28
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STATE_DISABLED_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_SHIFT 29
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STATE_ENABLED_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_SHIFT 30
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STATE_HALTED_MASK))
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_SHIFT 31
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_MASK (0x1 << CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_MASK) >> CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_SHIFT) & CSHWIF_EVENT_IRQ_ENABLE_STATE_PAUSED_MASK))

/* CSHWIF_EVENT_IRQ_STATUS register */
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT 0
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_MASK \
	(0x1 << CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_MASK) >> \
	 CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT) &    \
	  CSHWIF_EVENT_IRQ_STATUS_COMMAND_BUFFER_COMPLETED_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT 1
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_MASK \
	(0x1 << CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_MASK) >> \
	 CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT) &    \
	  CSHWIF_EVENT_IRQ_STATUS_COMMAND_POINTER_OVERFLOW_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_SHIFT 2
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_MASK) >> CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_COMMAND_ILLEGAL_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_SHIFT 3
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_MASK) >> CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_COMMAND_UNKNOWN_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_SHIFT 4
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_MASK) >> CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_COMMAND_TRAPPED_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_SHIFT 7
#define CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_MASK) >> CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_PROGRESS_COMPARE_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_SHIFT 8
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_MASK) >> CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_COMPLETE_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_SHIFT 9
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_MASK) >> CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_OVERRUN_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_SHIFT 10
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_MASK) >> CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ERROR_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_SHIFT 11
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_MASK) >> CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_FASTCMD_ACTIVE_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_FAULT_SHIFT 15
#define CSHWIF_EVENT_IRQ_STATUS_FAULT_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_FAULT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FAULT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_FAULT_MASK) >> CSHWIF_EVENT_IRQ_STATUS_FAULT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_FAULT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_FAULT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_FAULT_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_FAULT_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_SHIFT 16
#define CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STALL_TILER_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_SHIFT 17
#define CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STALL_COMPUTE_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_SHIFT 18
#define CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STALL_FRAGMENT_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_SHIFT 19
#define CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STALL_LSU_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_SHIFT 20
#define CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STALL_WAIT_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_SHIFT 24
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_MASK) >> CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_BLOCK_TILER_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_SHIFT 25
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_MASK) >> CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_BLOCK_COMPUTE_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_SHIFT 26
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_MASK) >> CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_BLOCK_FRAGMENT_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_SHIFT 28
#define CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STATE_DISABLED_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_SHIFT 29
#define CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STATE_ENABLED_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_SHIFT 30
#define CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STATE_HALTED_MASK))
#define CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_SHIFT 31
#define CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_MASK (0x1 << CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_MASK) >> CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_MASK) |    \
	 ((value << CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_SHIFT) & CSHWIF_EVENT_IRQ_STATUS_STATE_PAUSED_MASK))

/* CSHWIF_EVENT_HALT_ENABLE register */
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT 0
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_MASK \
	(0x1 << CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_MASK) >> \
	 CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_SHIFT) &    \
	  CSHWIF_EVENT_HALT_ENABLE_COMMAND_BUFFER_COMPLETED_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT 1
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_MASK \
	(0x1 << CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_MASK) >> \
	 CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_SHIFT) &    \
	  CSHWIF_EVENT_HALT_ENABLE_COMMAND_POINTER_OVERFLOW_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_SHIFT 2
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_MASK) >> CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_COMMAND_ILLEGAL_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_SHIFT 3
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_MASK) >> CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_COMMAND_UNKNOWN_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_SHIFT 4
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_MASK) >> CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_COMMAND_TRAPPED_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_SHIFT 7
#define CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_MASK) >> CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_PROGRESS_COMPARE_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_SHIFT 8
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_MASK) >> CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_COMPLETE_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_SHIFT 9
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_MASK) >> CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_OVERRUN_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_SHIFT 10
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_MASK) >> CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ERROR_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_SHIFT 11
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_MASK) >> CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_FASTCMD_ACTIVE_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_FAULT_SHIFT 15
#define CSHWIF_EVENT_HALT_ENABLE_FAULT_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_FAULT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FAULT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_FAULT_MASK) >> CSHWIF_EVENT_HALT_ENABLE_FAULT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_FAULT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_FAULT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_FAULT_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_FAULT_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_SHIFT 16
#define CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STALL_TILER_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_SHIFT 17
#define CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STALL_COMPUTE_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_SHIFT 18
#define CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STALL_FRAGMENT_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_SHIFT 19
#define CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STALL_LSU_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_SHIFT 20
#define CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STALL_WAIT_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_SHIFT 24
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_MASK) >> CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_BLOCK_TILER_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_SHIFT 25
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_MASK) >> CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_BLOCK_COMPUTE_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_SHIFT 26
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_MASK) >> CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_BLOCK_FRAGMENT_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_SHIFT 28
#define CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STATE_DISABLED_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_SHIFT 29
#define CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STATE_ENABLED_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_SHIFT 30
#define CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STATE_HALTED_MASK))
#define CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_SHIFT 31
#define CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_MASK (0x1 << CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_MASK) >> CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_SHIFT) & CSHWIF_EVENT_HALT_ENABLE_STATE_PAUSED_MASK))

/* CSHWIF_EVENT_HALT_STATUS register */
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT 0
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_MASK \
	(0x1 << CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_MASK) >> \
	 CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_SHIFT) &    \
	  CSHWIF_EVENT_HALT_STATUS_COMMAND_BUFFER_COMPLETED_MASK))
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT 1
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_MASK \
	(0x1 << CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_GET(reg_val)     \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_MASK) >> \
	 CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_SHIFT) &    \
	  CSHWIF_EVENT_HALT_STATUS_COMMAND_POINTER_OVERFLOW_MASK))
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_SHIFT 2
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_MASK) >> CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_SHIFT) & CSHWIF_EVENT_HALT_STATUS_COMMAND_ILLEGAL_MASK))
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_SHIFT 3
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_MASK) >> CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_SHIFT) & CSHWIF_EVENT_HALT_STATUS_COMMAND_UNKNOWN_MASK))
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_SHIFT 4
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_MASK) >> CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_SHIFT) & CSHWIF_EVENT_HALT_STATUS_COMMAND_TRAPPED_MASK))
#define CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_SHIFT 7
#define CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_MASK) >> CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_SHIFT) & CSHWIF_EVENT_HALT_STATUS_PROGRESS_COMPARE_MASK))
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_SHIFT 8
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_MASK) >> CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_SHIFT) & CSHWIF_EVENT_HALT_STATUS_FASTCMD_COMPLETE_MASK))
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_SHIFT 9
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_MASK) >> CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_SHIFT) & CSHWIF_EVENT_HALT_STATUS_FASTCMD_OVERRUN_MASK))
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_SHIFT 10
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_MASK) >> CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_SHIFT) & CSHWIF_EVENT_HALT_STATUS_FASTCMD_ERROR_MASK))
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_SHIFT 11
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_MASK) >> CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_SHIFT) & CSHWIF_EVENT_HALT_STATUS_FASTCMD_ACTIVE_MASK))
#define CSHWIF_EVENT_HALT_STATUS_FAULT_SHIFT 15
#define CSHWIF_EVENT_HALT_STATUS_FAULT_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_FAULT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FAULT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_FAULT_MASK) >> CSHWIF_EVENT_HALT_STATUS_FAULT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_FAULT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_FAULT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_FAULT_SHIFT) & CSHWIF_EVENT_HALT_STATUS_FAULT_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STALL_TILER_SHIFT 16
#define CSHWIF_EVENT_HALT_STATUS_STALL_TILER_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STALL_TILER_MASK) >> CSHWIF_EVENT_HALT_STATUS_STALL_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STALL_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STALL_TILER_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STALL_TILER_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_SHIFT 17
#define CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_MASK) >> CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STALL_COMPUTE_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_SHIFT 18
#define CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_MASK) >> CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STALL_FRAGMENT_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STALL_LSU_SHIFT 19
#define CSHWIF_EVENT_HALT_STATUS_STALL_LSU_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_LSU_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STALL_LSU_MASK) >> CSHWIF_EVENT_HALT_STATUS_STALL_LSU_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_LSU_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STALL_LSU_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STALL_LSU_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STALL_LSU_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_SHIFT 20
#define CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_MASK) >> CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STALL_WAIT_MASK))
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_SHIFT 24
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_MASK) >> CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_SHIFT) & CSHWIF_EVENT_HALT_STATUS_BLOCK_TILER_MASK))
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_SHIFT 25
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_MASK) >> CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_SHIFT) & CSHWIF_EVENT_HALT_STATUS_BLOCK_COMPUTE_MASK))
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_SHIFT 26
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_MASK) >> CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_SHIFT) & CSHWIF_EVENT_HALT_STATUS_BLOCK_FRAGMENT_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_SHIFT 28
#define CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_MASK) >> CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STATE_DISABLED_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_SHIFT 29
#define CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_MASK) >> CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STATE_ENABLED_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_SHIFT 30
#define CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_MASK) >> CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STATE_HALTED_MASK))
#define CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_SHIFT 31
#define CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_MASK (0x1 << CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_GET(reg_val) \
	((reg_val & CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_MASK) >> CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_SHIFT)
#define CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_SET(reg_val, value) \
	((reg_val & ~CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_MASK) |    \
	 ((value << CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_SHIFT) & CSHWIF_EVENT_HALT_STATUS_STATE_PAUSED_MASK))

/* CSHWIF_FAULT_STATUS register */
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_SHIFT 0
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_MASK (0xFF << CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_SHIFT)
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_GET(reg_val) \
	((reg_val & CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_MASK) >> CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_SHIFT)
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_MASK) |    \
	 ((value << CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_SHIFT) & CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_MASK))
/* CSHWIF_FAULT_STATUS_EXCEPTION_TYPE values */
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_OK 0x00
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_CS_CONFIG_FAULT 0x40
#define CSHWIF_FAULT_STATUS_EXCEPTION_TYPE_CS_BUS_FAULT 0x48
/* End of CSHWIF_FAULT_STATUS_EXCEPTION_TYPE values */
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_SHIFT 8
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_MASK (0x3 << CSHWIF_FAULT_STATUS_ACCESS_TYPE_SHIFT)
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_GET(reg_val) \
	((reg_val & CSHWIF_FAULT_STATUS_ACCESS_TYPE_MASK) >> CSHWIF_FAULT_STATUS_ACCESS_TYPE_SHIFT)
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_FAULT_STATUS_ACCESS_TYPE_MASK) |    \
	 ((value << CSHWIF_FAULT_STATUS_ACCESS_TYPE_SHIFT) & CSHWIF_FAULT_STATUS_ACCESS_TYPE_MASK))
/* CSHWIF_FAULT_STATUS_ACCESS_TYPE values */
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_ATOMIC 0x0
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_EXECUTE 0x1
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_READ 0x2
#define CSHWIF_FAULT_STATUS_ACCESS_TYPE_WRITE 0x3
/* End of CSHWIF_FAULT_STATUS_ACCESS_TYPE values */
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_SHIFT 16
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_MASK (0xFFFF << CSHWIF_FAULT_STATUS_ERROR_SOURCE_SHIFT)
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_GET(reg_val) \
	((reg_val & CSHWIF_FAULT_STATUS_ERROR_SOURCE_MASK) >> CSHWIF_FAULT_STATUS_ERROR_SOURCE_SHIFT)
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_FAULT_STATUS_ERROR_SOURCE_MASK) |    \
	 ((value << CSHWIF_FAULT_STATUS_ERROR_SOURCE_SHIFT) & CSHWIF_FAULT_STATUS_ERROR_SOURCE_MASK))
/* CSHWIF_FAULT_STATUS_ERROR_SOURCE values */
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_UNKNOWN 0x0000
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_CSB 0x0001
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_LS 0x0013
#define CSHWIF_FAULT_STATUS_ERROR_SOURCE_CSHWIF 0x001D
/* End of CSHWIF_FAULT_STATUS_ERROR_SOURCE values */

/* CSHWIF_FAULT_ADDRESS register */
#define CSHWIF_FAULT_ADDRESS_VADDR_SHIFT 0
#define CSHWIF_FAULT_ADDRESS_VADDR_MASK (0xFFFFFFFFFFFFFFFF << CSHWIF_FAULT_ADDRESS_VADDR_SHIFT)
#define CSHWIF_FAULT_ADDRESS_VADDR_GET(reg_val) \
	((reg_val & CSHWIF_FAULT_ADDRESS_VADDR_MASK) >> CSHWIF_FAULT_ADDRESS_VADDR_SHIFT)
#define CSHWIF_FAULT_ADDRESS_VADDR_SET(reg_val, value) \
	((reg_val & ~CSHWIF_FAULT_ADDRESS_VADDR_MASK) |    \
	 ((value << CSHWIF_FAULT_ADDRESS_VADDR_SHIFT) & CSHWIF_FAULT_ADDRESS_VADDR_MASK))
/* End of CSHWIF register set definitions */

/* CSHWIF_REGFILE register set definitions */

/* CSHWIF_CSF_R register */
#define CSHWIF_CSF_R_VALUE_SHIFT 0
#define CSHWIF_CSF_R_VALUE_MASK (0xFFFFFFFF << CSHWIF_CSF_R_VALUE_SHIFT)
#define CSHWIF_CSF_R_VALUE_GET(reg_val) ((reg_val & CSHWIF_CSF_R_VALUE_MASK) >> CSHWIF_CSF_R_VALUE_SHIFT)
#define CSHWIF_CSF_R_VALUE_SET(reg_val, value) \
	((reg_val & ~CSHWIF_CSF_R_VALUE_MASK) | ((value << CSHWIF_CSF_R_VALUE_SHIFT) & CSHWIF_CSF_R_VALUE_MASK))
/* End of CSHWIF_REGFILE register set definitions */

/* ACCESS_CONTROL register set definitions */

/* ACCESS_FAILURE_MODE register */
#define ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_SHIFT 0
#define ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_MASK (0x1 << ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_SHIFT)
#define ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_GET(reg_val) \
	((reg_val & ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_MASK) >> ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_SHIFT)
#define ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_SET(reg_val, value) \
	((reg_val & ~ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_MASK) |    \
	 ((value << ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_SHIFT) & ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_MASK))
/* ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE values */
#define ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_IGNORE 0x0
#define ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE_FAULT 0x1
/* End of ACCESS_FAILURE_MODE_ACCESS_FAILED_RESPONSE values */

/* ACCESS_REGISTER_MCU_UNPRIVILEGED_0 register */
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_SHIFT 0
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_MASK \
	(0x1 << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_GET(reg_val)     \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_MASK) >> \
	 ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_SHIFT) &    \
	  ACCESS_REGISTER_MCU_UNPRIVILEGED_0_DOORBELL_SET_MASK))
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_SHIFT 1
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_MASK (0x1 << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_GET(reg_val)     \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_MASK) >> \
	 ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_SHIFT) &    \
	  ACCESS_REGISTER_MCU_UNPRIVILEGED_0_CSHW_CTRL_MASK))
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_SHIFT 2
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_MASK (0x1 << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_GET(reg_val)     \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_MASK) >> \
	 ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_SHIFT) &    \
	  ACCESS_REGISTER_MCU_UNPRIVILEGED_0_SCOREBOARD_MASK))
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_SHIFT 16
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_MASK \
	(0xFFFF << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_GET(reg_val)     \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_MASK) >> \
	 ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_SHIFT) &    \
	  ACCESS_REGISTER_MCU_UNPRIVILEGED_0_ITER_COMPUTE_MASK))

/* ACCESS_REGISTER_MCU_UNPRIVILEGED_1 register */
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_SHIFT 0
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_MASK \
	(0xFFFF << ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_GET(reg_val)     \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_MASK) >> \
	 ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_SHIFT) &    \
	  ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_FRAGMENT_MASK))
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_SHIFT 16
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_MASK \
	(0xFFFF << ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_GET(reg_val)     \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_MASK) >> \
	 ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_SHIFT) &    \
	  ACCESS_REGISTER_MCU_UNPRIVILEGED_1_ITER_TILER_MASK))

/* ACCESS_REGISTER_MCU_UNPRIVILEGED_2 register */
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_SHIFT 0
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_MASK (0xFFFFFFFF << ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_GET(reg_val) \
	((reg_val & ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_MASK) >> ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_SHIFT)
#define ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_SET(reg_val, value) \
	((reg_val & ~ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_MASK) |    \
	 ((value << ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_SHIFT) & ACCESS_REGISTER_MCU_UNPRIVILEGED_2_CSHWIF_MASK))

/* ACCESS_SEGMENT_UNPRIVILEGED register */
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_SHIFT 0
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_SHIFT 1
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0A_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_SHIFT 2
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_SHIFT 3
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0B_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_SHIFT 4
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_SHIFT 5
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0C_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_SHIFT 6
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_SHIFT 7
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT0D_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_SHIFT 8
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_SHIFT 9
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT1_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_SHIFT 10
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_SHIFT 11
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT2_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_SHIFT 12
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_SHIFT 13
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT3_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_SHIFT 14
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_SHIFT 15
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT4_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_SHIFT 16
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_SHIFT 17
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT5_W_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_SHIFT 18
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_R_MASK))
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_SHIFT 19
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_MASK (0x1 << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_GET(reg_val) \
	((reg_val & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_MASK) >> ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_SHIFT)
#define ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_SET(reg_val, value) \
	((reg_val & ~ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_MASK) |    \
	 ((value << ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_SHIFT) & ACCESS_SEGMENT_UNPRIVILEGED_SEGMENT6_W_MASK))
/* End of ACCESS_CONTROL register set definitions */

/* DOORBELL_SET register set definitions */

/* MCUC_DB_SET register */
#define MCUC_DB_SET_MASK_SHIFT 0
#define MCUC_DB_SET_MASK_MASK (0xFFFFFFFF << MCUC_DB_SET_MASK_SHIFT)
#define MCUC_DB_SET_MASK_GET(reg_val) ((reg_val & MCUC_DB_SET_MASK_MASK) >> MCUC_DB_SET_MASK_SHIFT)
#define MCUC_DB_SET_MASK_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_SET_MASK_MASK) | ((value << MCUC_DB_SET_MASK_SHIFT) & MCUC_DB_SET_MASK_MASK))
/* End of DOORBELL_SET register set definitions */

/* DOORBELL_CFG register set definitions */

/* MCUC_DB_GROUP_STATUS register */
#define MCUC_DB_GROUP_STATUS_STATE_SHIFT 0
#define MCUC_DB_GROUP_STATUS_STATE_MASK (0xFFFFFFFF << MCUC_DB_GROUP_STATUS_STATE_SHIFT)
#define MCUC_DB_GROUP_STATUS_STATE_GET(reg_val) \
	((reg_val & MCUC_DB_GROUP_STATUS_STATE_MASK) >> MCUC_DB_GROUP_STATUS_STATE_SHIFT)
#define MCUC_DB_GROUP_STATUS_STATE_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_GROUP_STATUS_STATE_MASK) |    \
	 ((value << MCUC_DB_GROUP_STATUS_STATE_SHIFT) & MCUC_DB_GROUP_STATUS_STATE_MASK))

/* MCUC_DB_VALUE register */
#define MCUC_DB_VALUE_STATE_SHIFT 0
#define MCUC_DB_VALUE_STATE_MASK (0xFFFFFFFF << MCUC_DB_VALUE_STATE_SHIFT)
#define MCUC_DB_VALUE_STATE_GET(reg_val) ((reg_val & MCUC_DB_VALUE_STATE_MASK) >> MCUC_DB_VALUE_STATE_SHIFT)
#define MCUC_DB_VALUE_STATE_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_VALUE_STATE_MASK) | ((value << MCUC_DB_VALUE_STATE_SHIFT) & MCUC_DB_VALUE_STATE_MASK))

/* MCUC_DB_VALUE_SET register */
#define MCUC_DB_VALUE_SET_MASK_SHIFT 0
#define MCUC_DB_VALUE_SET_MASK_MASK (0xFFFFFFFF << MCUC_DB_VALUE_SET_MASK_SHIFT)
#define MCUC_DB_VALUE_SET_MASK_GET(reg_val) ((reg_val & MCUC_DB_VALUE_SET_MASK_MASK) >> MCUC_DB_VALUE_SET_MASK_SHIFT)
#define MCUC_DB_VALUE_SET_MASK_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_VALUE_SET_MASK_MASK) | ((value << MCUC_DB_VALUE_SET_MASK_SHIFT) & MCUC_DB_VALUE_SET_MASK_MASK))

/* MCUC_DB_VALUE_CLEAR register */
#define MCUC_DB_VALUE_CLEAR_MASK_SHIFT 0
#define MCUC_DB_VALUE_CLEAR_MASK_MASK (0xFFFFFFFF << MCUC_DB_VALUE_CLEAR_MASK_SHIFT)
#define MCUC_DB_VALUE_CLEAR_MASK_GET(reg_val) \
	((reg_val & MCUC_DB_VALUE_CLEAR_MASK_MASK) >> MCUC_DB_VALUE_CLEAR_MASK_SHIFT)
#define MCUC_DB_VALUE_CLEAR_MASK_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_VALUE_CLEAR_MASK_MASK) |    \
	 ((value << MCUC_DB_VALUE_CLEAR_MASK_SHIFT) & MCUC_DB_VALUE_CLEAR_MASK_MASK))

/* MCUC_DB_ENABLE register */
#define MCUC_DB_ENABLE_MASK_SHIFT 0
#define MCUC_DB_ENABLE_MASK_MASK (0xFFFFFFFF << MCUC_DB_ENABLE_MASK_SHIFT)
#define MCUC_DB_ENABLE_MASK_GET(reg_val) ((reg_val & MCUC_DB_ENABLE_MASK_MASK) >> MCUC_DB_ENABLE_MASK_SHIFT)
#define MCUC_DB_ENABLE_MASK_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_ENABLE_MASK_MASK) | ((value << MCUC_DB_ENABLE_MASK_SHIFT) & MCUC_DB_ENABLE_MASK_MASK))

/* MCUC_DB_ENABLE_SET register */
#define MCUC_DB_ENABLE_SET_MASK_SHIFT 0
#define MCUC_DB_ENABLE_SET_MASK_MASK (0xFFFFFFFF << MCUC_DB_ENABLE_SET_MASK_SHIFT)
#define MCUC_DB_ENABLE_SET_MASK_GET(reg_val) ((reg_val & MCUC_DB_ENABLE_SET_MASK_MASK) >> MCUC_DB_ENABLE_SET_MASK_SHIFT)
#define MCUC_DB_ENABLE_SET_MASK_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_ENABLE_SET_MASK_MASK) |    \
	 ((value << MCUC_DB_ENABLE_SET_MASK_SHIFT) & MCUC_DB_ENABLE_SET_MASK_MASK))

/* MCUC_DB_ENABLE_CLEAR register */
#define MCUC_DB_ENABLE_CLEAR_MASK_SHIFT 0
#define MCUC_DB_ENABLE_CLEAR_MASK_MASK (0xFFFFFFFF << MCUC_DB_ENABLE_CLEAR_MASK_SHIFT)
#define MCUC_DB_ENABLE_CLEAR_MASK_GET(reg_val) \
	((reg_val & MCUC_DB_ENABLE_CLEAR_MASK_MASK) >> MCUC_DB_ENABLE_CLEAR_MASK_SHIFT)
#define MCUC_DB_ENABLE_CLEAR_MASK_SET(reg_val, value) \
	((reg_val & ~MCUC_DB_ENABLE_CLEAR_MASK_MASK) |    \
	 ((value << MCUC_DB_ENABLE_CLEAR_MASK_SHIFT) & MCUC_DB_ENABLE_CLEAR_MASK_MASK))
/* End of DOORBELL_CFG register set definitions */

/* SEGMENT_CONTROL register set definitions */

/* MCUC_SEGMENT0A_PROP register */
#define MCUC_SEGMENT0A_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT0A_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0A_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0A_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0A_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT0A_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0A_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0A_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0A_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT0A_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT0A_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT0A_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0A_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0A_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0A_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT0A_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0A_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0A_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0A_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT0A_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT0A_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT0A_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT0A_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0A_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0A_PROP_XDENY_MASK) >> MCUC_SEGMENT0A_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0A_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0A_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT0A_PROP_XDENY_SHIFT) & MCUC_SEGMENT0A_PROP_XDENY_MASK))
#define MCUC_SEGMENT0A_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT0A_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT0A_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0A_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0A_PROP_XCHECK_MASK) >> MCUC_SEGMENT0A_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0A_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0A_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT0A_PROP_XCHECK_SHIFT) & MCUC_SEGMENT0A_PROP_XCHECK_MASK))

/* MCUC_SEGMENT0B_PROP register */
#define MCUC_SEGMENT0B_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT0B_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0B_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0B_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0B_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT0B_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0B_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0B_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0B_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT0B_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT0B_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT0B_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0B_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0B_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0B_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT0B_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0B_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0B_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0B_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT0B_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT0B_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT0B_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT0B_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0B_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0B_PROP_XDENY_MASK) >> MCUC_SEGMENT0B_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0B_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0B_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT0B_PROP_XDENY_SHIFT) & MCUC_SEGMENT0B_PROP_XDENY_MASK))
#define MCUC_SEGMENT0B_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT0B_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT0B_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0B_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0B_PROP_XCHECK_MASK) >> MCUC_SEGMENT0B_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0B_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0B_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT0B_PROP_XCHECK_SHIFT) & MCUC_SEGMENT0B_PROP_XCHECK_MASK))

/* MCUC_SEGMENT0C_PROP register */
#define MCUC_SEGMENT0C_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT0C_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0C_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0C_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0C_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT0C_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0C_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0C_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0C_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT0C_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT0C_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT0C_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0C_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0C_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0C_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT0C_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0C_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0C_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0C_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT0C_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT0C_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT0C_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT0C_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0C_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0C_PROP_XDENY_MASK) >> MCUC_SEGMENT0C_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0C_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0C_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT0C_PROP_XDENY_SHIFT) & MCUC_SEGMENT0C_PROP_XDENY_MASK))
#define MCUC_SEGMENT0C_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT0C_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT0C_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0C_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0C_PROP_XCHECK_MASK) >> MCUC_SEGMENT0C_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0C_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0C_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT0C_PROP_XCHECK_SHIFT) & MCUC_SEGMENT0C_PROP_XCHECK_MASK))

/* MCUC_SEGMENT0D_PROP register */
#define MCUC_SEGMENT0D_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT0D_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0D_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0D_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0D_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT0D_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0D_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0D_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0D_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT0D_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT0D_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT0D_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT0D_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0D_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0D_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT0D_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT0D_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0D_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT0D_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT0D_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT0D_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT0D_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT0D_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0D_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0D_PROP_XDENY_MASK) >> MCUC_SEGMENT0D_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT0D_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0D_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT0D_PROP_XDENY_SHIFT) & MCUC_SEGMENT0D_PROP_XDENY_MASK))
#define MCUC_SEGMENT0D_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT0D_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT0D_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0D_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT0D_PROP_XCHECK_MASK) >> MCUC_SEGMENT0D_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT0D_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT0D_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT0D_PROP_XCHECK_SHIFT) & MCUC_SEGMENT0D_PROP_XCHECK_MASK))

/* MCUC_SEGMENT1_PROP register */
#define MCUC_SEGMENT1_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT1_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT1_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT1_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT1_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT1_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT1_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT1_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT1_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT1_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT1_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT1_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT1_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT1_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT1_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT1_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT1_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT1_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT1_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT1_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT1_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT1_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT1_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT1_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT1_PROP_XDENY_MASK) >> MCUC_SEGMENT1_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT1_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT1_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT1_PROP_XDENY_SHIFT) & MCUC_SEGMENT1_PROP_XDENY_MASK))
#define MCUC_SEGMENT1_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT1_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT1_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT1_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT1_PROP_XCHECK_MASK) >> MCUC_SEGMENT1_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT1_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT1_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT1_PROP_XCHECK_SHIFT) & MCUC_SEGMENT1_PROP_XCHECK_MASK))

/* MCUC_SEGMENT1_JASID register */
#define MCUC_SEGMENT1_JASID_JASID_SHIFT 0
#define MCUC_SEGMENT1_JASID_JASID_MASK (0xF << MCUC_SEGMENT1_JASID_JASID_SHIFT)
#define MCUC_SEGMENT1_JASID_JASID_GET(reg_val) \
	((reg_val & MCUC_SEGMENT1_JASID_JASID_MASK) >> MCUC_SEGMENT1_JASID_JASID_SHIFT)
#define MCUC_SEGMENT1_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT1_JASID_JASID_MASK) |    \
	 ((value << MCUC_SEGMENT1_JASID_JASID_SHIFT) & MCUC_SEGMENT1_JASID_JASID_MASK))

/* MCUC_SEGMENT1_BASE register */
#define MCUC_SEGMENT1_BASE_ADDRESS_SHIFT 26
#define MCUC_SEGMENT1_BASE_ADDRESS_MASK (0x3FFFFFFFFF << MCUC_SEGMENT1_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT1_BASE_ADDRESS_GET(reg_val) \
	((reg_val & MCUC_SEGMENT1_BASE_ADDRESS_MASK) >> MCUC_SEGMENT1_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT1_BASE_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT1_BASE_ADDRESS_MASK) |    \
	 ((value << MCUC_SEGMENT1_BASE_ADDRESS_SHIFT) & MCUC_SEGMENT1_BASE_ADDRESS_MASK))

/* MCUC_SEGMENT2_PROP register */
#define MCUC_SEGMENT2_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT2_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT2_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT2_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT2_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT2_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT2_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT2_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT2_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT2_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT2_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT2_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT2_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT2_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT2_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT2_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT2_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT2_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT2_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT2_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT2_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT2_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT2_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT2_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT2_PROP_XDENY_MASK) >> MCUC_SEGMENT2_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT2_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT2_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT2_PROP_XDENY_SHIFT) & MCUC_SEGMENT2_PROP_XDENY_MASK))
#define MCUC_SEGMENT2_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT2_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT2_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT2_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT2_PROP_XCHECK_MASK) >> MCUC_SEGMENT2_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT2_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT2_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT2_PROP_XCHECK_SHIFT) & MCUC_SEGMENT2_PROP_XCHECK_MASK))

/* MCUC_SEGMENT2_JASID register */
#define MCUC_SEGMENT2_JASID_JASID_SHIFT 0
#define MCUC_SEGMENT2_JASID_JASID_MASK (0xF << MCUC_SEGMENT2_JASID_JASID_SHIFT)
#define MCUC_SEGMENT2_JASID_JASID_GET(reg_val) \
	((reg_val & MCUC_SEGMENT2_JASID_JASID_MASK) >> MCUC_SEGMENT2_JASID_JASID_SHIFT)
#define MCUC_SEGMENT2_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT2_JASID_JASID_MASK) |    \
	 ((value << MCUC_SEGMENT2_JASID_JASID_SHIFT) & MCUC_SEGMENT2_JASID_JASID_MASK))

/* MCUC_SEGMENT2_BASE register */
#define MCUC_SEGMENT2_BASE_ADDRESS_SHIFT 26
#define MCUC_SEGMENT2_BASE_ADDRESS_MASK (0x3FFFFFFFFF << MCUC_SEGMENT2_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT2_BASE_ADDRESS_GET(reg_val) \
	((reg_val & MCUC_SEGMENT2_BASE_ADDRESS_MASK) >> MCUC_SEGMENT2_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT2_BASE_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT2_BASE_ADDRESS_MASK) |    \
	 ((value << MCUC_SEGMENT2_BASE_ADDRESS_SHIFT) & MCUC_SEGMENT2_BASE_ADDRESS_MASK))

/* MCUC_SEGMENT3_PROP register */
#define MCUC_SEGMENT3_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT3_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT3_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT3_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT3_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT3_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT3_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT3_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT3_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT3_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT3_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT3_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT3_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT3_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT3_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT3_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT3_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT3_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT3_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT3_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT3_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT3_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT3_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT3_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT3_PROP_XDENY_MASK) >> MCUC_SEGMENT3_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT3_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT3_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT3_PROP_XDENY_SHIFT) & MCUC_SEGMENT3_PROP_XDENY_MASK))
#define MCUC_SEGMENT3_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT3_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT3_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT3_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT3_PROP_XCHECK_MASK) >> MCUC_SEGMENT3_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT3_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT3_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT3_PROP_XCHECK_SHIFT) & MCUC_SEGMENT3_PROP_XCHECK_MASK))

/* MCUC_SEGMENT3_JASID register */
#define MCUC_SEGMENT3_JASID_JASID_SHIFT 0
#define MCUC_SEGMENT3_JASID_JASID_MASK (0xF << MCUC_SEGMENT3_JASID_JASID_SHIFT)
#define MCUC_SEGMENT3_JASID_JASID_GET(reg_val) \
	((reg_val & MCUC_SEGMENT3_JASID_JASID_MASK) >> MCUC_SEGMENT3_JASID_JASID_SHIFT)
#define MCUC_SEGMENT3_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT3_JASID_JASID_MASK) |    \
	 ((value << MCUC_SEGMENT3_JASID_JASID_SHIFT) & MCUC_SEGMENT3_JASID_JASID_MASK))

/* MCUC_SEGMENT3_BASE register */
#define MCUC_SEGMENT3_BASE_ADDRESS_SHIFT 26
#define MCUC_SEGMENT3_BASE_ADDRESS_MASK (0x3FFFFFFFFF << MCUC_SEGMENT3_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT3_BASE_ADDRESS_GET(reg_val) \
	((reg_val & MCUC_SEGMENT3_BASE_ADDRESS_MASK) >> MCUC_SEGMENT3_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT3_BASE_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT3_BASE_ADDRESS_MASK) |    \
	 ((value << MCUC_SEGMENT3_BASE_ADDRESS_SHIFT) & MCUC_SEGMENT3_BASE_ADDRESS_MASK))

/* MCUC_SEGMENT4_PROP register */
#define MCUC_SEGMENT4_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT4_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT4_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT4_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT4_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT4_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT4_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT4_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT4_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT4_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT4_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT4_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT4_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT4_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT4_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT4_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT4_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT4_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT4_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT4_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT4_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT4_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT4_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT4_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT4_PROP_XDENY_MASK) >> MCUC_SEGMENT4_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT4_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT4_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT4_PROP_XDENY_SHIFT) & MCUC_SEGMENT4_PROP_XDENY_MASK))
#define MCUC_SEGMENT4_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT4_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT4_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT4_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT4_PROP_XCHECK_MASK) >> MCUC_SEGMENT4_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT4_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT4_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT4_PROP_XCHECK_SHIFT) & MCUC_SEGMENT4_PROP_XCHECK_MASK))

/* MCUC_SEGMENT4_JASID register */
#define MCUC_SEGMENT4_JASID_JASID_SHIFT 0
#define MCUC_SEGMENT4_JASID_JASID_MASK (0xF << MCUC_SEGMENT4_JASID_JASID_SHIFT)
#define MCUC_SEGMENT4_JASID_JASID_GET(reg_val) \
	((reg_val & MCUC_SEGMENT4_JASID_JASID_MASK) >> MCUC_SEGMENT4_JASID_JASID_SHIFT)
#define MCUC_SEGMENT4_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT4_JASID_JASID_MASK) |    \
	 ((value << MCUC_SEGMENT4_JASID_JASID_SHIFT) & MCUC_SEGMENT4_JASID_JASID_MASK))

/* MCUC_SEGMENT4_BASE register */
#define MCUC_SEGMENT4_BASE_ADDRESS_SHIFT 26
#define MCUC_SEGMENT4_BASE_ADDRESS_MASK (0x3FFFFFFFFF << MCUC_SEGMENT4_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT4_BASE_ADDRESS_GET(reg_val) \
	((reg_val & MCUC_SEGMENT4_BASE_ADDRESS_MASK) >> MCUC_SEGMENT4_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT4_BASE_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT4_BASE_ADDRESS_MASK) |    \
	 ((value << MCUC_SEGMENT4_BASE_ADDRESS_SHIFT) & MCUC_SEGMENT4_BASE_ADDRESS_MASK))

/* MCUC_SEGMENT5_PROP register */
#define MCUC_SEGMENT5_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT5_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT5_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT5_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT5_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT5_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT5_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT5_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT5_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT5_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT5_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT5_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT5_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT5_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT5_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT5_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT5_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT5_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT5_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT5_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT5_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT5_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT5_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT5_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT5_PROP_XDENY_MASK) >> MCUC_SEGMENT5_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT5_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT5_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT5_PROP_XDENY_SHIFT) & MCUC_SEGMENT5_PROP_XDENY_MASK))
#define MCUC_SEGMENT5_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT5_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT5_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT5_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT5_PROP_XCHECK_MASK) >> MCUC_SEGMENT5_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT5_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT5_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT5_PROP_XCHECK_SHIFT) & MCUC_SEGMENT5_PROP_XCHECK_MASK))

/* MCUC_SEGMENT5_JASID register */
#define MCUC_SEGMENT5_JASID_JASID_SHIFT 0
#define MCUC_SEGMENT5_JASID_JASID_MASK (0xF << MCUC_SEGMENT5_JASID_JASID_SHIFT)
#define MCUC_SEGMENT5_JASID_JASID_GET(reg_val) \
	((reg_val & MCUC_SEGMENT5_JASID_JASID_MASK) >> MCUC_SEGMENT5_JASID_JASID_SHIFT)
#define MCUC_SEGMENT5_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT5_JASID_JASID_MASK) |    \
	 ((value << MCUC_SEGMENT5_JASID_JASID_SHIFT) & MCUC_SEGMENT5_JASID_JASID_MASK))

/* MCUC_SEGMENT5_BASE register */
#define MCUC_SEGMENT5_BASE_ADDRESS_SHIFT 26
#define MCUC_SEGMENT5_BASE_ADDRESS_MASK (0x3FFFFFFFFF << MCUC_SEGMENT5_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT5_BASE_ADDRESS_GET(reg_val) \
	((reg_val & MCUC_SEGMENT5_BASE_ADDRESS_MASK) >> MCUC_SEGMENT5_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT5_BASE_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT5_BASE_ADDRESS_MASK) |    \
	 ((value << MCUC_SEGMENT5_BASE_ADDRESS_SHIFT) & MCUC_SEGMENT5_BASE_ADDRESS_MASK))

/* MCUC_SEGMENT6_PROP register */
#define MCUC_SEGMENT6_PROP_R_ALLOCATE_SHIFT 0
#define MCUC_SEGMENT6_PROP_R_ALLOCATE_MASK (0x1 << MCUC_SEGMENT6_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT6_PROP_R_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT6_PROP_R_ALLOCATE_MASK) >> MCUC_SEGMENT6_PROP_R_ALLOCATE_SHIFT)
#define MCUC_SEGMENT6_PROP_R_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT6_PROP_R_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT6_PROP_R_ALLOCATE_SHIFT) & MCUC_SEGMENT6_PROP_R_ALLOCATE_MASK))
#define MCUC_SEGMENT6_PROP_W_ALLOCATE_SHIFT 1
#define MCUC_SEGMENT6_PROP_W_ALLOCATE_MASK (0x1 << MCUC_SEGMENT6_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT6_PROP_W_ALLOCATE_GET(reg_val) \
	((reg_val & MCUC_SEGMENT6_PROP_W_ALLOCATE_MASK) >> MCUC_SEGMENT6_PROP_W_ALLOCATE_SHIFT)
#define MCUC_SEGMENT6_PROP_W_ALLOCATE_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT6_PROP_W_ALLOCATE_MASK) |    \
	 ((value << MCUC_SEGMENT6_PROP_W_ALLOCATE_SHIFT) & MCUC_SEGMENT6_PROP_W_ALLOCATE_MASK))
#define MCUC_SEGMENT6_PROP_XDENY_SHIFT 2
#define MCUC_SEGMENT6_PROP_XDENY_MASK (0x1 << MCUC_SEGMENT6_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT6_PROP_XDENY_GET(reg_val) \
	((reg_val & MCUC_SEGMENT6_PROP_XDENY_MASK) >> MCUC_SEGMENT6_PROP_XDENY_SHIFT)
#define MCUC_SEGMENT6_PROP_XDENY_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT6_PROP_XDENY_MASK) |    \
	 ((value << MCUC_SEGMENT6_PROP_XDENY_SHIFT) & MCUC_SEGMENT6_PROP_XDENY_MASK))
#define MCUC_SEGMENT6_PROP_XCHECK_SHIFT 3
#define MCUC_SEGMENT6_PROP_XCHECK_MASK (0x1 << MCUC_SEGMENT6_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT6_PROP_XCHECK_GET(reg_val) \
	((reg_val & MCUC_SEGMENT6_PROP_XCHECK_MASK) >> MCUC_SEGMENT6_PROP_XCHECK_SHIFT)
#define MCUC_SEGMENT6_PROP_XCHECK_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT6_PROP_XCHECK_MASK) |    \
	 ((value << MCUC_SEGMENT6_PROP_XCHECK_SHIFT) & MCUC_SEGMENT6_PROP_XCHECK_MASK))

/* MCUC_SEGMENT6_JASID register */
#define MCUC_SEGMENT6_JASID_JASID_SHIFT 0
#define MCUC_SEGMENT6_JASID_JASID_MASK (0xF << MCUC_SEGMENT6_JASID_JASID_SHIFT)
#define MCUC_SEGMENT6_JASID_JASID_GET(reg_val) \
	((reg_val & MCUC_SEGMENT6_JASID_JASID_MASK) >> MCUC_SEGMENT6_JASID_JASID_SHIFT)
#define MCUC_SEGMENT6_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT6_JASID_JASID_MASK) |    \
	 ((value << MCUC_SEGMENT6_JASID_JASID_SHIFT) & MCUC_SEGMENT6_JASID_JASID_MASK))

/* MCUC_SEGMENT6_BASE register */
#define MCUC_SEGMENT6_BASE_ADDRESS_SHIFT 26
#define MCUC_SEGMENT6_BASE_ADDRESS_MASK (0x3FFFFFFFFF << MCUC_SEGMENT6_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT6_BASE_ADDRESS_GET(reg_val) \
	((reg_val & MCUC_SEGMENT6_BASE_ADDRESS_MASK) >> MCUC_SEGMENT6_BASE_ADDRESS_SHIFT)
#define MCUC_SEGMENT6_BASE_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCUC_SEGMENT6_BASE_ADDRESS_MASK) |    \
	 ((value << MCUC_SEGMENT6_BASE_ADDRESS_SHIFT) & MCUC_SEGMENT6_BASE_ADDRESS_MASK))
/* End of SEGMENT_CONTROL register set definitions */

/* TIMERS register set definitions */

/* TIMER_SYSTEM_CONFIG register */
#define TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_SHIFT 0
#define TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_MASK (0x1 << TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_SHIFT)
#define TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_GET(reg_val) \
	((reg_val & TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_MASK) >> TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_SHIFT)
#define TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_SET(reg_val, value) \
	((reg_val & ~TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_MASK) |    \
	 ((value << TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_SHIFT) & TIMER_SYSTEM_CONFIG_ENABLE_SYSTEM_MASK))

/* TIMER_CYCLE_CONFIG register */
#define TIMER_CYCLE_CONFIG_ENABLE_COUNTER_SHIFT 0
#define TIMER_CYCLE_CONFIG_ENABLE_COUNTER_MASK (0x1 << TIMER_CYCLE_CONFIG_ENABLE_COUNTER_SHIFT)
#define TIMER_CYCLE_CONFIG_ENABLE_COUNTER_GET(reg_val) \
	((reg_val & TIMER_CYCLE_CONFIG_ENABLE_COUNTER_MASK) >> TIMER_CYCLE_CONFIG_ENABLE_COUNTER_SHIFT)
#define TIMER_CYCLE_CONFIG_ENABLE_COUNTER_SET(reg_val, value) \
	((reg_val & ~TIMER_CYCLE_CONFIG_ENABLE_COUNTER_MASK) |    \
	 ((value << TIMER_CYCLE_CONFIG_ENABLE_COUNTER_SHIFT) & TIMER_CYCLE_CONFIG_ENABLE_COUNTER_MASK))

/* TIMER_SYSTEM_LIVE register */
#define TIMER_SYSTEM_LIVE_VALUE_SHIFT 0
#define TIMER_SYSTEM_LIVE_VALUE_MASK (0xFFFFFFFFFFFFFFFF << TIMER_SYSTEM_LIVE_VALUE_SHIFT)
#define TIMER_SYSTEM_LIVE_VALUE_GET(reg_val) ((reg_val & TIMER_SYSTEM_LIVE_VALUE_MASK) >> TIMER_SYSTEM_LIVE_VALUE_SHIFT)
#define TIMER_SYSTEM_LIVE_VALUE_SET(reg_val, value) \
	((reg_val & ~TIMER_SYSTEM_LIVE_VALUE_MASK) |    \
	 ((value << TIMER_SYSTEM_LIVE_VALUE_SHIFT) & TIMER_SYSTEM_LIVE_VALUE_MASK))

/* TIMER_SYSTEM_OFFSET register */
#define TIMER_SYSTEM_OFFSET_VALUE_SHIFT 0
#define TIMER_SYSTEM_OFFSET_VALUE_MASK (0xFFFFFFFF << TIMER_SYSTEM_OFFSET_VALUE_SHIFT)
#define TIMER_SYSTEM_OFFSET_VALUE_GET(reg_val) \
	((reg_val & TIMER_SYSTEM_OFFSET_VALUE_MASK) >> TIMER_SYSTEM_OFFSET_VALUE_SHIFT)
#define TIMER_SYSTEM_OFFSET_VALUE_SET(reg_val, value) \
	((reg_val & ~TIMER_SYSTEM_OFFSET_VALUE_MASK) |    \
	 ((value << TIMER_SYSTEM_OFFSET_VALUE_SHIFT) & TIMER_SYSTEM_OFFSET_VALUE_MASK))

/* TIMER_CYCLE_LIVE register */
#define TIMER_CYCLE_LIVE_VALUE_SHIFT 0
#define TIMER_CYCLE_LIVE_VALUE_MASK (0xFFFFFFFFFFFFFFFF << TIMER_CYCLE_LIVE_VALUE_SHIFT)
#define TIMER_CYCLE_LIVE_VALUE_GET(reg_val) ((reg_val & TIMER_CYCLE_LIVE_VALUE_MASK) >> TIMER_CYCLE_LIVE_VALUE_SHIFT)
#define TIMER_CYCLE_LIVE_VALUE_SET(reg_val, value) \
	((reg_val & ~TIMER_CYCLE_LIVE_VALUE_MASK) | ((value << TIMER_CYCLE_LIVE_VALUE_SHIFT) & TIMER_CYCLE_LIVE_VALUE_MASK))

/* TIMER_CYCLE_OFFSET register */
#define TIMER_CYCLE_OFFSET_VALUE_SHIFT 0
#define TIMER_CYCLE_OFFSET_VALUE_MASK (0xFFFFFFFF << TIMER_CYCLE_OFFSET_VALUE_SHIFT)
#define TIMER_CYCLE_OFFSET_VALUE_GET(reg_val) \
	((reg_val & TIMER_CYCLE_OFFSET_VALUE_MASK) >> TIMER_CYCLE_OFFSET_VALUE_SHIFT)
#define TIMER_CYCLE_OFFSET_VALUE_SET(reg_val, value) \
	((reg_val & ~TIMER_CYCLE_OFFSET_VALUE_MASK) |    \
	 ((value << TIMER_CYCLE_OFFSET_VALUE_SHIFT) & TIMER_CYCLE_OFFSET_VALUE_MASK))
/* End of TIMERS register set definitions */

/* GPU_CONTROL_MCU register set definitions */

/* MCU_GPU_IRQ_RAWSTAT register */
#define MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_SHIFT 0
#define MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_MASK (0x1 << MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_MASK) >> MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_MASK) |    \
	 ((value << MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_SHIFT) & MCU_GPU_IRQ_RAWSTAT_GPU_FAULT_MASK))
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_SHIFT 9
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_MASK (0x1 << MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_MASK) >> MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_MASK) |    \
	 ((value << MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_SHIFT) & MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_SINGLE_MASK))
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_SHIFT 10
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_MASK (0x1 << MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_MASK) >> MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_MASK) |    \
	 ((value << MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_SHIFT) & MCU_GPU_IRQ_RAWSTAT_POWER_CHANGED_ALL_MASK))
#define MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_SHIFT 16
#define MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_MASK) >> MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_SHIFT) &    \
	  MCU_GPU_IRQ_RAWSTAT_PRFCNT_SAMPLE_COMPLETED_MASK))
#define MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_SHIFT 17
#define MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_MASK) >> MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_SHIFT) & MCU_GPU_IRQ_RAWSTAT_CLEAN_CACHES_COMPLETED_MASK))

/* MCU_GPU_IRQ_CLEAR register */
#define MCU_GPU_IRQ_CLEAR_GPU_FAULT_SHIFT 0
#define MCU_GPU_IRQ_CLEAR_GPU_FAULT_MASK (0x1 << MCU_GPU_IRQ_CLEAR_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_CLEAR_GPU_FAULT_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_CLEAR_GPU_FAULT_MASK) >> MCU_GPU_IRQ_CLEAR_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_CLEAR_GPU_FAULT_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_CLEAR_GPU_FAULT_MASK) |    \
	 ((value << MCU_GPU_IRQ_CLEAR_GPU_FAULT_SHIFT) & MCU_GPU_IRQ_CLEAR_GPU_FAULT_MASK))
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_SHIFT 9
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_MASK (0x1 << MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_MASK) >> MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_MASK) |    \
	 ((value << MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_SHIFT) & MCU_GPU_IRQ_CLEAR_POWER_CHANGED_SINGLE_MASK))
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_SHIFT 10
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_MASK (0x1 << MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_MASK) >> MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_MASK) |    \
	 ((value << MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_SHIFT) & MCU_GPU_IRQ_CLEAR_POWER_CHANGED_ALL_MASK))
#define MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_SHIFT 16
#define MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_MASK) >> MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_SHIFT) & MCU_GPU_IRQ_CLEAR_PRFCNT_SAMPLE_COMPLETED_MASK))
#define MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_SHIFT 17
#define MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_MASK) >> MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_SHIFT) & MCU_GPU_IRQ_CLEAR_CLEAN_CACHES_COMPLETED_MASK))

/* MCU_GPU_IRQ_MASK register */
#define MCU_GPU_IRQ_MASK_GPU_FAULT_SHIFT 0
#define MCU_GPU_IRQ_MASK_GPU_FAULT_MASK (0x1 << MCU_GPU_IRQ_MASK_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_MASK_GPU_FAULT_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_MASK_GPU_FAULT_MASK) >> MCU_GPU_IRQ_MASK_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_MASK_GPU_FAULT_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_MASK_GPU_FAULT_MASK) |    \
	 ((value << MCU_GPU_IRQ_MASK_GPU_FAULT_SHIFT) & MCU_GPU_IRQ_MASK_GPU_FAULT_MASK))
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_SHIFT 9
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_MASK (0x1 << MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_MASK) >> MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_MASK) |    \
	 ((value << MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_SHIFT) & MCU_GPU_IRQ_MASK_POWER_CHANGED_SINGLE_MASK))
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_SHIFT 10
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_MASK (0x1 << MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_MASK) >> MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_MASK) |    \
	 ((value << MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_SHIFT) & MCU_GPU_IRQ_MASK_POWER_CHANGED_ALL_MASK))
#define MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_SHIFT 16
#define MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_MASK) >> MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_SHIFT) & MCU_GPU_IRQ_MASK_PRFCNT_SAMPLE_COMPLETED_MASK))
#define MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_SHIFT 17
#define MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_MASK) >> MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_SHIFT) & MCU_GPU_IRQ_MASK_CLEAN_CACHES_COMPLETED_MASK))

/* MCU_GPU_IRQ_STATUS register */
#define MCU_GPU_IRQ_STATUS_GPU_FAULT_SHIFT 0
#define MCU_GPU_IRQ_STATUS_GPU_FAULT_MASK (0x1 << MCU_GPU_IRQ_STATUS_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_STATUS_GPU_FAULT_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_STATUS_GPU_FAULT_MASK) >> MCU_GPU_IRQ_STATUS_GPU_FAULT_SHIFT)
#define MCU_GPU_IRQ_STATUS_GPU_FAULT_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_STATUS_GPU_FAULT_MASK) |    \
	 ((value << MCU_GPU_IRQ_STATUS_GPU_FAULT_SHIFT) & MCU_GPU_IRQ_STATUS_GPU_FAULT_MASK))
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_SHIFT 9
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_MASK (0x1 << MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_MASK) >> MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_SHIFT)
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_MASK) |    \
	 ((value << MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_SHIFT) & MCU_GPU_IRQ_STATUS_POWER_CHANGED_SINGLE_MASK))
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_SHIFT 10
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_MASK (0x1 << MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_MASK) >> MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_SHIFT)
#define MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_MASK) |    \
	 ((value << MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_SHIFT) & MCU_GPU_IRQ_STATUS_POWER_CHANGED_ALL_MASK))
#define MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_SHIFT 16
#define MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_MASK) >> MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_SHIFT) & MCU_GPU_IRQ_STATUS_PRFCNT_SAMPLE_COMPLETED_MASK))
#define MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_SHIFT 17
#define MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_MASK (0x1 << MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_GET(reg_val) \
	((reg_val & MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_MASK) >> MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_SHIFT)
#define MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_MASK) |    \
	 ((value << MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_SHIFT) & MCU_GPU_IRQ_STATUS_CLEAN_CACHES_COMPLETED_MASK))

/* MCU_GPU_STATUS register */
#define MCU_GPU_STATUS_GPU_ACTIVE_SHIFT 0
#define MCU_GPU_STATUS_GPU_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_GPU_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_GPU_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_GPU_ACTIVE_MASK) >> MCU_GPU_STATUS_GPU_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_GPU_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_GPU_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_GPU_ACTIVE_SHIFT) & MCU_GPU_STATUS_GPU_ACTIVE_MASK))
#define MCU_GPU_STATUS_PWR_ACTIVE_SHIFT 1
#define MCU_GPU_STATUS_PWR_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_PWR_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_PWR_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_PWR_ACTIVE_MASK) >> MCU_GPU_STATUS_PWR_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_PWR_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_PWR_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_PWR_ACTIVE_SHIFT) & MCU_GPU_STATUS_PWR_ACTIVE_MASK))
#define MCU_GPU_STATUS_PRFCNT_ACTIVE_SHIFT 2
#define MCU_GPU_STATUS_PRFCNT_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_PRFCNT_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_PRFCNT_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_PRFCNT_ACTIVE_MASK) >> MCU_GPU_STATUS_PRFCNT_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_PRFCNT_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_PRFCNT_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_PRFCNT_ACTIVE_SHIFT) & MCU_GPU_STATUS_PRFCNT_ACTIVE_MASK))
#define MCU_GPU_STATUS_PAGE_FAULT_SHIFT 4
#define MCU_GPU_STATUS_PAGE_FAULT_MASK (0x1 << MCU_GPU_STATUS_PAGE_FAULT_SHIFT)
#define MCU_GPU_STATUS_PAGE_FAULT_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_PAGE_FAULT_MASK) >> MCU_GPU_STATUS_PAGE_FAULT_SHIFT)
#define MCU_GPU_STATUS_PAGE_FAULT_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_PAGE_FAULT_MASK) |    \
	 ((value << MCU_GPU_STATUS_PAGE_FAULT_SHIFT) & MCU_GPU_STATUS_PAGE_FAULT_MASK))
#define MCU_GPU_STATUS_IRQ_ACTIVE_SHIFT 5
#define MCU_GPU_STATUS_IRQ_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_IRQ_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_IRQ_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_IRQ_ACTIVE_MASK) >> MCU_GPU_STATUS_IRQ_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_IRQ_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_IRQ_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_IRQ_ACTIVE_SHIFT) & MCU_GPU_STATUS_IRQ_ACTIVE_MASK))
#define MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_SHIFT 6
#define MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_MASK) >> MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_SHIFT) & MCU_GPU_STATUS_CYCLE_COUNT_ACTIVE_MASK))
#define MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_SHIFT 7
#define MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_MASK) >> MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_SHIFT) & MCU_GPU_STATUS_PROTECTED_MODE_ACTIVE_MASK))
#define MCU_GPU_STATUS_GPU_DBG_ENABLED_SHIFT 8
#define MCU_GPU_STATUS_GPU_DBG_ENABLED_MASK (0x1 << MCU_GPU_STATUS_GPU_DBG_ENABLED_SHIFT)
#define MCU_GPU_STATUS_GPU_DBG_ENABLED_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_GPU_DBG_ENABLED_MASK) >> MCU_GPU_STATUS_GPU_DBG_ENABLED_SHIFT)
#define MCU_GPU_STATUS_GPU_DBG_ENABLED_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_GPU_DBG_ENABLED_MASK) |    \
	 ((value << MCU_GPU_STATUS_GPU_DBG_ENABLED_SHIFT) & MCU_GPU_STATUS_GPU_DBG_ENABLED_MASK))
#define MCU_GPU_STATUS_DBG_ACTIVE_SHIFT 31
#define MCU_GPU_STATUS_DBG_ACTIVE_MASK (0x1 << MCU_GPU_STATUS_DBG_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_DBG_ACTIVE_GET(reg_val) \
	((reg_val & MCU_GPU_STATUS_DBG_ACTIVE_MASK) >> MCU_GPU_STATUS_DBG_ACTIVE_SHIFT)
#define MCU_GPU_STATUS_DBG_ACTIVE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_STATUS_DBG_ACTIVE_MASK) |    \
	 ((value << MCU_GPU_STATUS_DBG_ACTIVE_SHIFT) & MCU_GPU_STATUS_DBG_ACTIVE_MASK))

/* MCU_GPU_COMMAND register */
#define MCU_GPU_COMMAND_COMMAND_SHIFT 0
#define MCU_GPU_COMMAND_COMMAND_MASK (0xFF << MCU_GPU_COMMAND_COMMAND_SHIFT)
#define MCU_GPU_COMMAND_COMMAND_GET(reg_val) ((reg_val & MCU_GPU_COMMAND_COMMAND_MASK) >> MCU_GPU_COMMAND_COMMAND_SHIFT)
#define MCU_GPU_COMMAND_COMMAND_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_COMMAND_MASK) |    \
	 ((value << MCU_GPU_COMMAND_COMMAND_SHIFT) & MCU_GPU_COMMAND_COMMAND_MASK))
/* MCU_GPU_COMMAND_command values */
#define MCU_GPU_COMMAND_COMMAND_NOP 0x0
#define MCU_GPU_COMMAND_COMMAND_RESET 0x1
#define MCU_GPU_COMMAND_COMMAND_PRFCNT 0x2
#define MCU_GPU_COMMAND_COMMAND_TIME 0x3
#define MCU_GPU_COMMAND_COMMAND_FLUSH_CACHES 0x4
#define MCU_GPU_COMMAND_COMMAND_SET_PROTECTED_MODE 0x5
#define MCU_GPU_COMMAND_COMMAND_FINISH_HALT 0x6
#define MCU_GPU_COMMAND_COMMAND_CLEAR_FAULT 0x7
/* End of MCU_GPU_COMMAND_command values */
#define MCU_GPU_COMMAND_RESET_MODE_SHIFT 8
#define MCU_GPU_COMMAND_RESET_MODE_MASK (0xF << MCU_GPU_COMMAND_RESET_MODE_SHIFT)
#define MCU_GPU_COMMAND_RESET_MODE_GET(reg_val) \
	((reg_val & MCU_GPU_COMMAND_RESET_MODE_MASK) >> MCU_GPU_COMMAND_RESET_MODE_SHIFT)
#define MCU_GPU_COMMAND_RESET_MODE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_RESET_MODE_MASK) |    \
	 ((value << MCU_GPU_COMMAND_RESET_MODE_SHIFT) & MCU_GPU_COMMAND_RESET_MODE_MASK))
/* MCU_GPU_COMMAND_reset_mode values */
#define MCU_GPU_COMMAND_RESET_MODE_FAST_RESET 0x0
/* End of MCU_GPU_COMMAND_reset_mode values */
#define MCU_GPU_COMMAND_SAMPLE_SHIFT 8
#define MCU_GPU_COMMAND_SAMPLE_MASK (0x1 << MCU_GPU_COMMAND_SAMPLE_SHIFT)
#define MCU_GPU_COMMAND_SAMPLE_GET(reg_val) ((reg_val & MCU_GPU_COMMAND_SAMPLE_MASK) >> MCU_GPU_COMMAND_SAMPLE_SHIFT)
#define MCU_GPU_COMMAND_SAMPLE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_SAMPLE_MASK) | ((value << MCU_GPU_COMMAND_SAMPLE_SHIFT) & MCU_GPU_COMMAND_SAMPLE_MASK))
#define MCU_GPU_COMMAND_CLEAR_SHIFT 9
#define MCU_GPU_COMMAND_CLEAR_MASK (0x1 << MCU_GPU_COMMAND_CLEAR_SHIFT)
#define MCU_GPU_COMMAND_CLEAR_GET(reg_val) ((reg_val & MCU_GPU_COMMAND_CLEAR_MASK) >> MCU_GPU_COMMAND_CLEAR_SHIFT)
#define MCU_GPU_COMMAND_CLEAR_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_CLEAR_MASK) | ((value << MCU_GPU_COMMAND_CLEAR_SHIFT) & MCU_GPU_COMMAND_CLEAR_MASK))
#define MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_SHIFT 8
#define MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_MASK (0x1 << MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_SHIFT)
#define MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_GET(reg_val) \
	((reg_val & MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_MASK) >> MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_SHIFT)
#define MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_MASK) |    \
	 ((value << MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_SHIFT) & MCU_GPU_COMMAND_TIMESTAMP_BROADCAST_MASK))
#define MCU_GPU_COMMAND_L2_FLUSH_SHIFT 8
#define MCU_GPU_COMMAND_L2_FLUSH_MASK (0xF << MCU_GPU_COMMAND_L2_FLUSH_SHIFT)
#define MCU_GPU_COMMAND_L2_FLUSH_GET(reg_val) \
	((reg_val & MCU_GPU_COMMAND_L2_FLUSH_MASK) >> MCU_GPU_COMMAND_L2_FLUSH_SHIFT)
#define MCU_GPU_COMMAND_L2_FLUSH_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_L2_FLUSH_MASK) |    \
	 ((value << MCU_GPU_COMMAND_L2_FLUSH_SHIFT) & MCU_GPU_COMMAND_L2_FLUSH_MASK))
/* MCU_GPU_COMMAND_l2_flush values */
#define MCU_GPU_COMMAND_L2_FLUSH_NONE 0x0
#define MCU_GPU_COMMAND_L2_FLUSH_CLEAN 0x1
#define MCU_GPU_COMMAND_L2_FLUSH_CLEAN_INVALIDATE 0x3
/* End of MCU_GPU_COMMAND_l2_flush values */
#define MCU_GPU_COMMAND_LSC_FLUSH_SHIFT 12
#define MCU_GPU_COMMAND_LSC_FLUSH_MASK (0xF << MCU_GPU_COMMAND_LSC_FLUSH_SHIFT)
#define MCU_GPU_COMMAND_LSC_FLUSH_GET(reg_val) \
	((reg_val & MCU_GPU_COMMAND_LSC_FLUSH_MASK) >> MCU_GPU_COMMAND_LSC_FLUSH_SHIFT)
#define MCU_GPU_COMMAND_LSC_FLUSH_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_LSC_FLUSH_MASK) |    \
	 ((value << MCU_GPU_COMMAND_LSC_FLUSH_SHIFT) & MCU_GPU_COMMAND_LSC_FLUSH_MASK))
/* MCU_GPU_COMMAND_lsc_flush values */
#define MCU_GPU_COMMAND_LSC_FLUSH_NONE 0x0
#define MCU_GPU_COMMAND_LSC_FLUSH_CLEAN 0x1
#define MCU_GPU_COMMAND_LSC_FLUSH_CLEAN_INVALIDATE 0x3
/* End of MCU_GPU_COMMAND_lsc_flush values */
#define MCU_GPU_COMMAND_OTHER_FLUSH_SHIFT 16
#define MCU_GPU_COMMAND_OTHER_FLUSH_MASK (0xF << MCU_GPU_COMMAND_OTHER_FLUSH_SHIFT)
#define MCU_GPU_COMMAND_OTHER_FLUSH_GET(reg_val) \
	((reg_val & MCU_GPU_COMMAND_OTHER_FLUSH_MASK) >> MCU_GPU_COMMAND_OTHER_FLUSH_SHIFT)
#define MCU_GPU_COMMAND_OTHER_FLUSH_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_OTHER_FLUSH_MASK) |    \
	 ((value << MCU_GPU_COMMAND_OTHER_FLUSH_SHIFT) & MCU_GPU_COMMAND_OTHER_FLUSH_MASK))
/* MCU_GPU_COMMAND_other_flush values */
#define MCU_GPU_COMMAND_OTHER_FLUSH_NONE 0x0
#define MCU_GPU_COMMAND_OTHER_FLUSH_INVALIDATE 0x2
/* End of MCU_GPU_COMMAND_other_flush values */
#define MCU_GPU_COMMAND_ADDRESS_SHIFT 8
#define MCU_GPU_COMMAND_ADDRESS_MASK (0x7FF << MCU_GPU_COMMAND_ADDRESS_SHIFT)
#define MCU_GPU_COMMAND_ADDRESS_GET(reg_val) ((reg_val & MCU_GPU_COMMAND_ADDRESS_MASK) >> MCU_GPU_COMMAND_ADDRESS_SHIFT)
#define MCU_GPU_COMMAND_ADDRESS_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_COMMAND_ADDRESS_MASK) |    \
	 ((value << MCU_GPU_COMMAND_ADDRESS_SHIFT) & MCU_GPU_COMMAND_ADDRESS_MASK))

/* MCU_GPU_FAULTSTATUS register */
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_SHIFT 0
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_MASK (0xFF << MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_SHIFT)
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_MASK) >> MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_SHIFT)
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_MASK) |    \
	 ((value << MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_SHIFT) & MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_MASK))
/* MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE values */
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_OK 0x00
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_GPU_BUS_FAULT 0x80
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_GPU_SHAREABILITY_FAULT 0x88
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_SYSTEM_SHAREABILITY_FAULT 0x89
#define MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE_GPU_CACHEABILITY_FAULT 0x8A
/* End of MCU_GPU_FAULTSTATUS_EXCEPTION_TYPE values */
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_SHIFT 8
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_MASK (0x3 << MCU_GPU_FAULTSTATUS_ACCESS_TYPE_SHIFT)
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTSTATUS_ACCESS_TYPE_MASK) >> MCU_GPU_FAULTSTATUS_ACCESS_TYPE_SHIFT)
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTSTATUS_ACCESS_TYPE_MASK) |    \
	 ((value << MCU_GPU_FAULTSTATUS_ACCESS_TYPE_SHIFT) & MCU_GPU_FAULTSTATUS_ACCESS_TYPE_MASK))
/* MCU_GPU_FAULTSTATUS_ACCESS_TYPE values */
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_ATOMIC 0x0
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_EXECUTE 0x1
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_READ 0x2
#define MCU_GPU_FAULTSTATUS_ACCESS_TYPE_WRITE 0x3
/* End of MCU_GPU_FAULTSTATUS_ACCESS_TYPE values */
#define MCU_GPU_FAULTSTATUS_ADDRESS_VALID_SHIFT 10
#define MCU_GPU_FAULTSTATUS_ADDRESS_VALID_MASK (0x1 << MCU_GPU_FAULTSTATUS_ADDRESS_VALID_SHIFT)
#define MCU_GPU_FAULTSTATUS_ADDRESS_VALID_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTSTATUS_ADDRESS_VALID_MASK) >> MCU_GPU_FAULTSTATUS_ADDRESS_VALID_SHIFT)
#define MCU_GPU_FAULTSTATUS_ADDRESS_VALID_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTSTATUS_ADDRESS_VALID_MASK) |    \
	 ((value << MCU_GPU_FAULTSTATUS_ADDRESS_VALID_SHIFT) & MCU_GPU_FAULTSTATUS_ADDRESS_VALID_MASK))
#define MCU_GPU_FAULTSTATUS_JASID_VALID_SHIFT 11
#define MCU_GPU_FAULTSTATUS_JASID_VALID_MASK (0x1 << MCU_GPU_FAULTSTATUS_JASID_VALID_SHIFT)
#define MCU_GPU_FAULTSTATUS_JASID_VALID_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTSTATUS_JASID_VALID_MASK) >> MCU_GPU_FAULTSTATUS_JASID_VALID_SHIFT)
#define MCU_GPU_FAULTSTATUS_JASID_VALID_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTSTATUS_JASID_VALID_MASK) |    \
	 ((value << MCU_GPU_FAULTSTATUS_JASID_VALID_SHIFT) & MCU_GPU_FAULTSTATUS_JASID_VALID_MASK))
#define MCU_GPU_FAULTSTATUS_JASID_SHIFT 12
#define MCU_GPU_FAULTSTATUS_JASID_MASK (0xF << MCU_GPU_FAULTSTATUS_JASID_SHIFT)
#define MCU_GPU_FAULTSTATUS_JASID_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTSTATUS_JASID_MASK) >> MCU_GPU_FAULTSTATUS_JASID_SHIFT)
#define MCU_GPU_FAULTSTATUS_JASID_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTSTATUS_JASID_MASK) |    \
	 ((value << MCU_GPU_FAULTSTATUS_JASID_SHIFT) & MCU_GPU_FAULTSTATUS_JASID_MASK))
#define MCU_GPU_FAULTSTATUS_SOURCE_ID_SHIFT 16
#define MCU_GPU_FAULTSTATUS_SOURCE_ID_MASK (0xFFFF << MCU_GPU_FAULTSTATUS_SOURCE_ID_SHIFT)
#define MCU_GPU_FAULTSTATUS_SOURCE_ID_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTSTATUS_SOURCE_ID_MASK) >> MCU_GPU_FAULTSTATUS_SOURCE_ID_SHIFT)
#define MCU_GPU_FAULTSTATUS_SOURCE_ID_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTSTATUS_SOURCE_ID_MASK) |    \
	 ((value << MCU_GPU_FAULTSTATUS_SOURCE_ID_SHIFT) & MCU_GPU_FAULTSTATUS_SOURCE_ID_MASK))

/* MCU_GPU_FAULTADDRESS register */
#define MCU_GPU_FAULTADDRESS_POINTER_SHIFT 0
#define MCU_GPU_FAULTADDRESS_POINTER_MASK (0xFFFFFFFFFFFFFFFF << MCU_GPU_FAULTADDRESS_POINTER_SHIFT)
#define MCU_GPU_FAULTADDRESS_POINTER_GET(reg_val) \
	((reg_val & MCU_GPU_FAULTADDRESS_POINTER_MASK) >> MCU_GPU_FAULTADDRESS_POINTER_SHIFT)
#define MCU_GPU_FAULTADDRESS_POINTER_SET(reg_val, value) \
	((reg_val & ~MCU_GPU_FAULTADDRESS_POINTER_MASK) |    \
	 ((value << MCU_GPU_FAULTADDRESS_POINTER_SHIFT) & MCU_GPU_FAULTADDRESS_POINTER_MASK))

/* MCU_PRFCNT_BASE register */
#define MCU_PRFCNT_BASE_POINTER_SHIFT 0
#define MCU_PRFCNT_BASE_POINTER_MASK (0xFFFFFFFFFFFFFFFF << MCU_PRFCNT_BASE_POINTER_SHIFT)
#define MCU_PRFCNT_BASE_POINTER_GET(reg_val) ((reg_val & MCU_PRFCNT_BASE_POINTER_MASK) >> MCU_PRFCNT_BASE_POINTER_SHIFT)
#define MCU_PRFCNT_BASE_POINTER_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_BASE_POINTER_MASK) |    \
	 ((value << MCU_PRFCNT_BASE_POINTER_SHIFT) & MCU_PRFCNT_BASE_POINTER_MASK))

/* MCU_PRFCNT_CONFIG register */
#define MCU_PRFCNT_CONFIG_MODE_SHIFT 0
#define MCU_PRFCNT_CONFIG_MODE_MASK (0xF << MCU_PRFCNT_CONFIG_MODE_SHIFT)
#define MCU_PRFCNT_CONFIG_MODE_GET(reg_val) ((reg_val & MCU_PRFCNT_CONFIG_MODE_MASK) >> MCU_PRFCNT_CONFIG_MODE_SHIFT)
#define MCU_PRFCNT_CONFIG_MODE_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_CONFIG_MODE_MASK) | ((value << MCU_PRFCNT_CONFIG_MODE_SHIFT) & MCU_PRFCNT_CONFIG_MODE_MASK))
/* MCU_PRFCNT_CONFIG_MODE values */
#define MCU_PRFCNT_CONFIG_MODE_OFF 0x0
#define MCU_PRFCNT_CONFIG_MODE_MANUAL 0x1
#define MCU_PRFCNT_CONFIG_MODE_MANUAL_NO_CLEAR 0x3
/* End of MCU_PRFCNT_CONFIG_MODE values */
#define MCU_PRFCNT_CONFIG_ADDRESS_SPACE_SHIFT 4
#define MCU_PRFCNT_CONFIG_ADDRESS_SPACE_MASK (0xF << MCU_PRFCNT_CONFIG_ADDRESS_SPACE_SHIFT)
#define MCU_PRFCNT_CONFIG_ADDRESS_SPACE_GET(reg_val) \
	((reg_val & MCU_PRFCNT_CONFIG_ADDRESS_SPACE_MASK) >> MCU_PRFCNT_CONFIG_ADDRESS_SPACE_SHIFT)
#define MCU_PRFCNT_CONFIG_ADDRESS_SPACE_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_CONFIG_ADDRESS_SPACE_MASK) |    \
	 ((value << MCU_PRFCNT_CONFIG_ADDRESS_SPACE_SHIFT) & MCU_PRFCNT_CONFIG_ADDRESS_SPACE_MASK))
#define MCU_PRFCNT_CONFIG_SET_SELECT_SHIFT 8
#define MCU_PRFCNT_CONFIG_SET_SELECT_MASK (0x3 << MCU_PRFCNT_CONFIG_SET_SELECT_SHIFT)
#define MCU_PRFCNT_CONFIG_SET_SELECT_GET(reg_val) \
	((reg_val & MCU_PRFCNT_CONFIG_SET_SELECT_MASK) >> MCU_PRFCNT_CONFIG_SET_SELECT_SHIFT)
#define MCU_PRFCNT_CONFIG_SET_SELECT_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_CONFIG_SET_SELECT_MASK) |    \
	 ((value << MCU_PRFCNT_CONFIG_SET_SELECT_SHIFT) & MCU_PRFCNT_CONFIG_SET_SELECT_MASK))

/* MCU_PRFCNT_CSHW_EN register */
#define MCU_PRFCNT_CSHW_EN_ENABLE_SHIFT 0
#define MCU_PRFCNT_CSHW_EN_ENABLE_MASK (0xFFFFFFFF << MCU_PRFCNT_CSHW_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_CSHW_EN_ENABLE_GET(reg_val) \
	((reg_val & MCU_PRFCNT_CSHW_EN_ENABLE_MASK) >> MCU_PRFCNT_CSHW_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_CSHW_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_CSHW_EN_ENABLE_MASK) |    \
	 ((value << MCU_PRFCNT_CSHW_EN_ENABLE_SHIFT) & MCU_PRFCNT_CSHW_EN_ENABLE_MASK))

/* MCU_PRFCNT_SHADER_EN register */
#define MCU_PRFCNT_SHADER_EN_ENABLE_SHIFT 0
#define MCU_PRFCNT_SHADER_EN_ENABLE_MASK (0xFFFFFFFF << MCU_PRFCNT_SHADER_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_SHADER_EN_ENABLE_GET(reg_val) \
	((reg_val & MCU_PRFCNT_SHADER_EN_ENABLE_MASK) >> MCU_PRFCNT_SHADER_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_SHADER_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_SHADER_EN_ENABLE_MASK) |    \
	 ((value << MCU_PRFCNT_SHADER_EN_ENABLE_SHIFT) & MCU_PRFCNT_SHADER_EN_ENABLE_MASK))

/* MCU_PRFCNT_TILER_EN register */
#define MCU_PRFCNT_TILER_EN_ENABLE_SHIFT 0
#define MCU_PRFCNT_TILER_EN_ENABLE_MASK (0xFFFFFFFF << MCU_PRFCNT_TILER_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_TILER_EN_ENABLE_GET(reg_val) \
	((reg_val & MCU_PRFCNT_TILER_EN_ENABLE_MASK) >> MCU_PRFCNT_TILER_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_TILER_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_TILER_EN_ENABLE_MASK) |    \
	 ((value << MCU_PRFCNT_TILER_EN_ENABLE_SHIFT) & MCU_PRFCNT_TILER_EN_ENABLE_MASK))

/* MCU_PRFCNT_MMU_L2_EN register */
#define MCU_PRFCNT_MMU_L2_EN_ENABLE_SHIFT 0
#define MCU_PRFCNT_MMU_L2_EN_ENABLE_MASK (0xFFFFFFFF << MCU_PRFCNT_MMU_L2_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_MMU_L2_EN_ENABLE_GET(reg_val) \
	((reg_val & MCU_PRFCNT_MMU_L2_EN_ENABLE_MASK) >> MCU_PRFCNT_MMU_L2_EN_ENABLE_SHIFT)
#define MCU_PRFCNT_MMU_L2_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~MCU_PRFCNT_MMU_L2_EN_ENABLE_MASK) |    \
	 ((value << MCU_PRFCNT_MMU_L2_EN_ENABLE_SHIFT) & MCU_PRFCNT_MMU_L2_EN_ENABLE_MASK))

/* MCU_CYCLE_COUNT register */
#define MCU_CYCLE_COUNT_COUNT_SHIFT 0
#define MCU_CYCLE_COUNT_COUNT_MASK (0xFFFFFFFFFFFFFFFF << MCU_CYCLE_COUNT_COUNT_SHIFT)
#define MCU_CYCLE_COUNT_COUNT_GET(reg_val) ((reg_val & MCU_CYCLE_COUNT_COUNT_MASK) >> MCU_CYCLE_COUNT_COUNT_SHIFT)
#define MCU_CYCLE_COUNT_COUNT_SET(reg_val, value) \
	((reg_val & ~MCU_CYCLE_COUNT_COUNT_MASK) | ((value << MCU_CYCLE_COUNT_COUNT_SHIFT) & MCU_CYCLE_COUNT_COUNT_MASK))

/* MCU_TIMESTAMP register */
#define MCU_TIMESTAMP_TIMESTAMP_SHIFT 0
#define MCU_TIMESTAMP_TIMESTAMP_MASK (0xFFFFFFFFFFFFFFFF << MCU_TIMESTAMP_TIMESTAMP_SHIFT)
#define MCU_TIMESTAMP_TIMESTAMP_GET(reg_val) ((reg_val & MCU_TIMESTAMP_TIMESTAMP_MASK) >> MCU_TIMESTAMP_TIMESTAMP_SHIFT)
#define MCU_TIMESTAMP_TIMESTAMP_SET(reg_val, value) \
	((reg_val & ~MCU_TIMESTAMP_TIMESTAMP_MASK) |    \
	 ((value << MCU_TIMESTAMP_TIMESTAMP_SHIFT) & MCU_TIMESTAMP_TIMESTAMP_MASK))

/* MCU_PROTECTED_DEBUG register */
#define MCU_PROTECTED_DEBUG_VALUE_SHIFT 0
#define MCU_PROTECTED_DEBUG_VALUE_MASK (0xFFFFFFFFFFFFFFFF << MCU_PROTECTED_DEBUG_VALUE_SHIFT)
#define MCU_PROTECTED_DEBUG_VALUE_GET(reg_val) \
	((reg_val & MCU_PROTECTED_DEBUG_VALUE_MASK) >> MCU_PROTECTED_DEBUG_VALUE_SHIFT)
#define MCU_PROTECTED_DEBUG_VALUE_SET(reg_val, value) \
	((reg_val & ~MCU_PROTECTED_DEBUG_VALUE_MASK) |    \
	 ((value << MCU_PROTECTED_DEBUG_VALUE_SHIFT) & MCU_PROTECTED_DEBUG_VALUE_MASK))

/* MCU_PROTECTED_STATUS register */
#define MCU_PROTECTED_STATUS_STATUS_SHIFT 0
#define MCU_PROTECTED_STATUS_STATUS_MASK (0x3 << MCU_PROTECTED_STATUS_STATUS_SHIFT)
#define MCU_PROTECTED_STATUS_STATUS_GET(reg_val) \
	((reg_val & MCU_PROTECTED_STATUS_STATUS_MASK) >> MCU_PROTECTED_STATUS_STATUS_SHIFT)
#define MCU_PROTECTED_STATUS_STATUS_SET(reg_val, value) \
	((reg_val & ~MCU_PROTECTED_STATUS_STATUS_MASK) |    \
	 ((value << MCU_PROTECTED_STATUS_STATUS_SHIFT) & MCU_PROTECTED_STATUS_STATUS_MASK))
/* MCU_PROTECTED_STATUS_STATUS values */
#define MCU_PROTECTED_STATUS_STATUS_FAIL 0x0
#define MCU_PROTECTED_STATUS_STATUS_SUCCESS 0x1
#define MCU_PROTECTED_STATUS_STATUS_INCOMPLETE 0x2
/* End of MCU_PROTECTED_STATUS_STATUS values */
/* End of GPU_CONTROL_MCU register set definitions */

#endif /* _GPU_CSF_CSHW_REGISTERS_H_ */
