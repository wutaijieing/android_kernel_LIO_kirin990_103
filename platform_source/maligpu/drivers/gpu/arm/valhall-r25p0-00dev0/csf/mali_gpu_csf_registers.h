/*
 *
 * (C) COPYRIGHT 2019 ARM Limited. All rights reserved.
 *
 * This program is free software and is provided to you under the terms of the
 * GNU General Public License version 2 as published by the Free Software
 * Foundation, and any use by you of this program is subject to the terms
 * of such GNU licence.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you can access it online at
 * http://www.gnu.org/licenses/gpl-2.0.html.
 *
 * SPDX-License-Identifier: GPL-2.0
 *
 */

/*
 * This header was autogenerated, it should not be edited.
 */

#ifndef _GPU_CSF_REGISTERS_H_
#define _GPU_CSF_REGISTERS_H_

/*
 * Begin register sets
 */

/* DOORBELLS base address */
#define DOORBELLS_BASE 0x0080000
#define DOORBELLS_REG(r) (DOORBELLS_BASE + (r))

/* CS_KERNEL_INPUT_BLOCK base address */
#define CS_KERNEL_INPUT_BLOCK_BASE 0x0000
#define CS_KERNEL_INPUT_BLOCK_REG(r) (CS_KERNEL_INPUT_BLOCK_BASE + (r))

/* CS_KERNEL_OUTPUT_BLOCK base address */
#define CS_KERNEL_OUTPUT_BLOCK_BASE 0x0000
#define CS_KERNEL_OUTPUT_BLOCK_REG(r) (CS_KERNEL_OUTPUT_BLOCK_BASE + (r))

/* CS_USER_INPUT_BLOCK base address */
#define CS_USER_INPUT_BLOCK_BASE 0x0000
#define CS_USER_INPUT_BLOCK_REG(r) (CS_USER_INPUT_BLOCK_BASE + (r))

/* CS_USER_OUTPUT_BLOCK base address */
#define CS_USER_OUTPUT_BLOCK_BASE 0x0000
#define CS_USER_OUTPUT_BLOCK_REG(r) (CS_USER_OUTPUT_BLOCK_BASE + (r))

/* CSG_INPUT_BLOCK base address */
#define CSG_INPUT_BLOCK_BASE 0x0000
#define CSG_INPUT_BLOCK_REG(r) (CSG_INPUT_BLOCK_BASE + (r))

/* CSG_OUTPUT_BLOCK base address */
#define CSG_OUTPUT_BLOCK_BASE 0x0000
#define CSG_OUTPUT_BLOCK_REG(r) (CSG_OUTPUT_BLOCK_BASE + (r))

/* GLB_CONTROL_BLOCK base address */
#define GLB_CONTROL_BLOCK_BASE 0x04000000
#define GLB_CONTROL_BLOCK_REG(r) (GLB_CONTROL_BLOCK_BASE + (r))

/* GLB_INPUT_BLOCK base address */
#define GLB_INPUT_BLOCK_BASE 0x0000
#define GLB_INPUT_BLOCK_REG(r) (GLB_INPUT_BLOCK_BASE + (r))

/* GLB_OUTPUT_BLOCK base address */
#define GLB_OUTPUT_BLOCK_BASE 0x0000
#define GLB_OUTPUT_BLOCK_REG(r) (GLB_OUTPUT_BLOCK_BASE + (r))

/* End register sets */

/*
 * Begin register offsets
 */

/* DOORBELLS register offsets */
#define DOORBELL_0 0x0000 /* () Doorbell 0 register */
#define DOORBELL(n) (DOORBELL_0 + (n)*65536)
#define DOORBELL_REG(n, r) (DOORBELL(n) + DOORBELL_BLOCK_REG(r))
#define DOORBELL_COUNT 1024

/* DOORBELL_BLOCK register offsets */
#define DB_BLK_DOORBELL 0x0000 /* (WO) Doorbell request */

/* CS_KERNEL_INPUT_BLOCK register offsets */
#define CS_REQ 0x0000 /* () Command stream request flags */
#define CS_CONFIG 0x0004 /* () Command stream configuration */
#define CS_ACK_IRQ_MASK 0x000C /* () Command steam interrupt mask */
#define CS_BASE_LO 0x0010 /* () Base pointer for the ring buffer, low word */
#define CS_BASE_HI 0x0014 /* () Base pointer for the ring buffer, high word */
#define CS_SIZE 0x0018 /* () Size of the ring buffer */
#define CS_TILER_HEAP_START_LO 0x0020 /* () Pointer to heap start, low word */
#define CS_TILER_HEAP_START_HI 0x0024 /* () Pointer to heap start, high word */
#define CS_TILER_HEAP_END_LO 0x0028 /* () Tiler heap descriptor address, low word */
#define CS_TILER_HEAP_END_HI 0x002C /* () Tiler heap descriptor address, high word */
#define CS_USER_INPUT_LO 0x0030 /* () CS user mode input page address, low word */
#define CS_USER_INPUT_HI 0x0034 /* () CS user mode input page address, high word */
#define CS_USER_OUTPUT_LO 0x0038 /* () CS user mode input page address, low word */
#define CS_USER_OUTPUT_HI 0x003C /* () CS user mode input page address, high word */

/* CS_KERNEL_OUTPUT_BLOCK register offsets */
#define CS_ACK 0x0000 /* () Command stream acknowledge flags */
#define CS_OUTPUT_0 0x0010 /* () Output value register 0 */
#define CS_OUTPUT_1 0x0014 /* () Output value register 1 */
#define CS_OUTPUT_2 0x0018 /* () Output value register 2 */
#define CS_OUTPUT_3 0x001C /* () Output value register 3 */
#define CS_STATUS_CMD_PTR_LO 0x0040 /* () Program pointer current value, low word */
#define CS_STATUS_CMD_PTR_HI 0x0044 /* () Program pointer current value, high word */
#define CS_STATUS_WAIT 0x0048 /* () Wait condition status register */
#define CS_STATUS_REQ_RESOURCE 0x004C /* () Indicates the resources requested by the command stream */
#define CS_STATUS_WAIT_SYNC_POINTER_LO 0x0050 /* () Sync object pointer, low word */
#define CS_STATUS_WAIT_SYNC_POINTER_HI 0x0054 /* () Sync object pointer, high word */
#define CS_STATUS_WAIT_SYNC_VALUE 0x0058 /* () Sync object test value */
#define CS_FAULT 0x0080 /* () Recoverable fault information */
#define CS_FATAL 0x0084 /* () Unrecoverable fault information */
#define CS_FAULT_INFO_LO 0x0088 /* () Additional information about a recoverable fault, low word */
#define CS_FAULT_INFO_HI 0x008C /* () Additional information about a recoverable fault, high word */
#define CS_FATAL_INFO_LO 0x0090 /* () Additional information about a non-recoverable fault, low word */
#define CS_FATAL_INFO_HI 0x0094 /* () Additional information about a non-recoverable fault, high word */
#define CS_HEAP_VT_START 0x00C0 /* () Number of vertex/tiling operations started */
#define CS_HEAP_VT_END 0x00C4 /* () Number of vertex/tiling operations completed */
#define CS_HEAP_FRAG_START 0x00C8 /* () Number of fragment operations started */
#define CS_HEAP_FRAG_END 0x00CC /* () Number of fragment completed */
#define CS_HEAP_ADDRESS_LO 0x00D0 /* () Heap address, low word */
#define CS_HEAP_ADDRESS_HI 0x00D4 /* () Heap address, high word */

/* CS_USER_INPUT_BLOCK register offsets */
#define CS_INSERT_LO 0x0000 /* () Current insert offset for ring buffer, low word */
#define CS_INSERT_HI 0x0004 /* () Current insert offset for ring buffer, high word */
#define CS_EXTRACT_INIT_LO 0x0008 /* () Initial extract offset for ring buffer, low word */
#define CS_EXTRACT_INIT_HI 0x000C /* () Initial extract offset for ring buffer, high word */

/* CS_USER_OUTPUT_BLOCK register offsets */
#define CS_EXTRACT_LO 0x0000 /* () Current extract offset for ring buffer, low word */
#define CS_EXTRACT_HI 0x0004 /* () Current extract offset for ring buffer, high word */
#define CS_ACTIVE 0x0008 /* () Initial extract offset when the command stream is started */

/* CSG_INPUT_BLOCK register offsets */
#define CSG_REQ 0x0000 /* () CSG request */
#define CSG_ACK_IRQ_MASK 0x0004 /* () Global acknowledge interrupt mask */
#define CSG_DB_REQ 0x0008 /* () Global doorbell request */
#define CSG_IRQ_ACK 0x000C /* () Command stream IRQ acknowledge */
#define CSG_ALLOW_COMPUTE_LO 0x0020 /* () Allowed compute endpoints, low word */
#define CSG_ALLOW_COMPUTE_HI 0x0024 /* () Allowed compute endpoints, high word */
#define CSG_ALLOW_FRAGMENT_LO 0x0028 /* () Allowed fragment endpoints, low word */
#define CSG_ALLOW_FRAGMENT_HI 0x002C /* () Allowed fragment endpoints, high word */
#define CSG_ALLOW_OTHER 0x0030 /* () Allowed other endpoints */
#define CSG_EP_REQ 0x0034 /* () Maximum number of endpoints allowed */
#define CSG_SUSPEND_BUF_LO 0x0040 /* () Normal mode suspend buffer, low word */
#define CSG_SUSPEND_BUF_HI 0x0044 /* () Normal mode suspend buffer, high word */
#define CSG_PROTM_SUSPEND_BUF_LO 0x0048 /* () Protected mode suspend buffer, low word */
#define CSG_PROTM_SUSPEND_BUF_HI 0x004C /* () Protected mode suspend buffer, high word */
#define CSG_CONFIG 0x0050 /* () CSG configuration options */

/* CSG_OUTPUT_BLOCK register offsets */
#define CSG_ACK 0x0000 /* () Command stream group acknowledge flags */
#define CSG_DB_ACK 0x0008 /* () Command stream kernel doorbell acknowledge flags */
#define CSG_IRQ_REQ 0x000C /* () Command stream interrupt request flags */
#define CSG_STATUS_EP_CURRENT 0x0010 /* () Endpoint allocation status register */
#define CSG_STATUS_EP_REQ 0x0014 /* () Endpoint request status register */
#define CSG_RESOURCE_DEP 0x001C /* () Current resource dependencies */

/* GLB_CONTROL_BLOCK register offsets */
#define GLB_VERSION 0x0000 /* () Global interface version */
#define GLB_FEATURES 0x0004 /* () Global interface features */
#define GLB_INPUT_VA 0x0008 /* () Address of GLB_INPUT_BLOCK */
#define GLB_OUTPUT_VA 0x000C /* () Address of GLB_OUTPUT_BLOCK */
#define GLB_GROUP_NUM 0x0010 /* () Number of CSG interfaces */
#define GLB_GROUP_STRIDE 0x0014 /* () Stride between CSG interfaces */
#define GLB_PRFCNT_SIZE 0x0018 /* () Size of CSF performance counters */
#define GROUP_CONTROL_0 0x1000 /* () CSG control and capabilities */
#define GROUP_CONTROL(n) (GROUP_CONTROL_0 + (n)*256)
#define GROUP_CONTROL_REG(n, r) (GROUP_CONTROL(n) + GROUP_CONTROL_BLOCK_REG(r))
#define GROUP_CONTROL_COUNT 16

/* STREAM_CONTROL_BLOCK register offsets */
#define STREAM_FEATURES 0x0000 /* () Command Stream interface features */
#define STREAM_INPUT_VA 0x0004 /* () Address of CS_KERNEL_INPUT_BLOCK */
#define STREAM_OUTPUT_VA 0x0008 /* () Address of CS_KERNEL_OUTPUT_BLOCK */

/* GROUP_CONTROL_BLOCK register offsets */
#define GROUP_FEATURES 0x0000 /* () Command Stream Group interface features */
#define GROUP_INPUT_VA 0x0004 /* () Address of CSG_INPUT_BLOCK */
#define GROUP_OUTPUT_VA 0x0008 /* () Address of CSG_OUTPUT_BLOCK */
#define GROUP_SUSPEND_SIZE 0x000C /* () Size of CSG suspend buffer */
#define GROUP_PROTM_SUSPEND_SIZE 0x0010 /* () Size of CSG protected-mode suspend buffer */
#define GROUP_STREAM_NUM 0x0014 /* () Number of CS interfaces */
#define GROUP_STREAM_STRIDE 0x0018 /* () Stride between CSG interfaces  */
#define STREAM_CONTROL_0 0x0040 /* () CS control and capabilities */
#define STREAM_CONTROL(n) (STREAM_CONTROL_0 + (n)*12)
#define STREAM_CONTROL_REG(n, r) (STREAM_CONTROL(n) + STREAM_CONTROL_BLOCK_REG(r))
#define STREAM_CONTROL_COUNT 16

/* GLB_INPUT_BLOCK register offsets */
#define GLB_REQ 0x0000 /* () Global request */
#define GLB_ACK_IRQ_MASK 0x0004 /* () Global acknowledge interrupt mask */
#define GLB_DB_REQ 0x0008 /* () Global doorbell request */
#define GLB_PROGRESS_TIMER 0x0010 /* () Global progress timeout */
#define GLB_PWROFF_TIMER 0x0014 /* () Global shadercore power off timer */
#define GLB_ALLOC_EN_LO 0x0018 /* () Global shadercore allocation enable mask, low word */
#define GLB_ALLOC_EN_HI 0x001C /* () Global shadercore allocation enable mask, high word */
#define GLB_PROTM_COHERENCY 0x0020 /* () Configure COHERENCY_ENABLE register value to use in protected mode execution */
#define GLB_PRFCNT_JASID 0x0024 /* () Performance counter address space */
#define GLB_PRFCNT_BASE_LO 0x0028 /* () Performance counter buffer address, low word */
#define GLB_PRFCNT_BASE_HI 0x002C /* () Performance counter buffer address, high word */
#define GLB_PRFCNT_CONFIG 0x0040 /* () Performance counter configuration */
#define GLB_PRFCNT_CSG_SELECT 0x0044 /* () CSG performance counting enable */
#define GLB_PRFCNT_FW_EN 0x0048 /* () Performance counter enable for firmware */
#define GLB_PRFCNT_CSG_EN 0x004C /* () Performance counter enable for CSG */
#define GLB_PRFCNT_CSF_EN 0x0050 /* () Performance counter enable for CSF */
#define GLB_PRFCNT_SHADER_EN 0x0054 /* () Performance counter enable for shader cores */
#define GLB_PRFCNT_TILER_EN 0x0058 /* () Performance counter enable for tiler */
#define GLB_PRFCNT_MMU_L2_EN 0x005C /* () Performance counter enable for MMU/L2 cache */
#define GLB_DEBUG_FWUTF_DESTROY 0x0FE0 /* () Test fixture destroy function address */
#define GLB_DEBUG_FWUTF_TEST 0x0FE4 /* () Test index */
#define GLB_DEBUG_FWUTF_FIXTURE 0x0FE8 /* () Test fixture index */
#define GLB_DEBUG_FWUTF_CREATE 0x0FEC /* () Test fixture create function address */
#define GLB_DEBUG_REQ 0x0FFC /* () Global debug request */

/* GLB_OUTPUT_BLOCK register offsets */
#define GLB_ACK 0x0000 /* () Global acknowledge */
#define GLB_DB_ACK 0x0008 /* () Global doorbell acknowldge */
#define GLB_HALT_STATUS 0x0010 /* () Global halt status */
#define GLB_PRFCNT_STATUS 0x0014 /* () Performance counter status */
#define GLB_DEBUG_FWUTF_RESULT 0x0FE0 /* () Firmware debug test result */
#define GLB_DEBUG_ACK 0x0FFC /* () Global debug acknowledge */

/* End register offsets */

/* DOORBELL_BLOCK register set definitions */

/* DB_BLK_DOORBELL register */
#define DB_BLK_DOORBELL_MASK_SHIFT 0
#define DB_BLK_DOORBELL_MASK_MASK (0xFFFFFFFF << DB_BLK_DOORBELL_MASK_SHIFT)
#define DB_BLK_DOORBELL_MASK_GET(reg_val) ((reg_val & DB_BLK_DOORBELL_MASK_MASK) >> DB_BLK_DOORBELL_MASK_SHIFT)
#define DB_BLK_DOORBELL_MASK_SET(reg_val, value) \
	((reg_val & ~DB_BLK_DOORBELL_MASK_MASK) | ((value << DB_BLK_DOORBELL_MASK_SHIFT) & DB_BLK_DOORBELL_MASK_MASK))
/* End of DOORBELL_BLOCK register set definitions */

/* CS_KERNEL_INPUT_BLOCK register set definitions */

/* CS_REQ register */
#define CS_REQ_STATE_SHIFT 0
#define CS_REQ_STATE_MASK (0x7 << CS_REQ_STATE_SHIFT)
#define CS_REQ_STATE_GET(reg_val) ((reg_val & CS_REQ_STATE_MASK) >> CS_REQ_STATE_SHIFT)
#define CS_REQ_STATE_SET(reg_val, value) \
	((reg_val & ~CS_REQ_STATE_MASK) | ((value << CS_REQ_STATE_SHIFT) & CS_REQ_STATE_MASK))
/* CS_REQ_STATE values */
#define CS_REQ_STATE_STOP 0x0
#define CS_REQ_STATE_START 0x1
/* End of CS_REQ_STATE values */
#define CS_REQ_EXTRACT_EVENT_SHIFT 4
#define CS_REQ_EXTRACT_EVENT_MASK (0x1 << CS_REQ_EXTRACT_EVENT_SHIFT)
#define CS_REQ_EXTRACT_EVENT_GET(reg_val) ((reg_val & CS_REQ_EXTRACT_EVENT_MASK) >> CS_REQ_EXTRACT_EVENT_SHIFT)
#define CS_REQ_EXTRACT_EVENT_SET(reg_val, value) \
	((reg_val & ~CS_REQ_EXTRACT_EVENT_MASK) | ((value << CS_REQ_EXTRACT_EVENT_SHIFT) & CS_REQ_EXTRACT_EVENT_MASK))
#define CS_REQ_ERROR_MODE_SHIFT 5
#define CS_REQ_ERROR_MODE_MASK (0x1 << CS_REQ_ERROR_MODE_SHIFT)
#define CS_REQ_ERROR_MODE_GET(reg_val) ((reg_val & CS_REQ_ERROR_MODE_MASK) >> CS_REQ_ERROR_MODE_SHIFT)
#define CS_REQ_ERROR_MODE_SET(reg_val, value) \
	((reg_val & ~CS_REQ_ERROR_MODE_MASK) | ((value << CS_REQ_ERROR_MODE_SHIFT) & CS_REQ_ERROR_MODE_MASK))
#define CS_REQ_IDLE_SYNC_WAIT_SHIFT 8
#define CS_REQ_IDLE_SYNC_WAIT_MASK (0x1 << CS_REQ_IDLE_SYNC_WAIT_SHIFT)
#define CS_REQ_IDLE_SYNC_WAIT_GET(reg_val) ((reg_val & CS_REQ_IDLE_SYNC_WAIT_MASK) >> CS_REQ_IDLE_SYNC_WAIT_SHIFT)
#define CS_REQ_IDLE_SYNC_WAIT_SET(reg_val, value) \
	((reg_val & ~CS_REQ_IDLE_SYNC_WAIT_MASK) | ((value << CS_REQ_IDLE_SYNC_WAIT_SHIFT) & CS_REQ_IDLE_SYNC_WAIT_MASK))
#define CS_REQ_IDLE_PROTM_PEND_SHIFT 9
#define CS_REQ_IDLE_PROTM_PEND_MASK (0x1 << CS_REQ_IDLE_PROTM_PEND_SHIFT)
#define CS_REQ_IDLE_PROTM_PEND_GET(reg_val) ((reg_val & CS_REQ_IDLE_PROTM_PEND_MASK) >> CS_REQ_IDLE_PROTM_PEND_SHIFT)
#define CS_REQ_IDLE_PROTM_PEND_SET(reg_val, value) \
	((reg_val & ~CS_REQ_IDLE_PROTM_PEND_MASK) | ((value << CS_REQ_IDLE_PROTM_PEND_SHIFT) & CS_REQ_IDLE_PROTM_PEND_MASK))
#define CS_REQ_IDLE_EMPTY_SHIFT 10
#define CS_REQ_IDLE_EMPTY_MASK (0x1 << CS_REQ_IDLE_EMPTY_SHIFT)
#define CS_REQ_IDLE_EMPTY_GET(reg_val) ((reg_val & CS_REQ_IDLE_EMPTY_MASK) >> CS_REQ_IDLE_EMPTY_SHIFT)
#define CS_REQ_IDLE_EMPTY_SET(reg_val, value) \
	((reg_val & ~CS_REQ_IDLE_EMPTY_MASK) | ((value << CS_REQ_IDLE_EMPTY_SHIFT) & CS_REQ_IDLE_EMPTY_MASK))
#define CS_REQ_IDLE_RESOURCE_REQ_SHIFT 11
#define CS_REQ_IDLE_RESOURCE_REQ_MASK (0x1 << CS_REQ_IDLE_RESOURCE_REQ_SHIFT)
#define CS_REQ_IDLE_RESOURCE_REQ_GET(reg_val) \
	((reg_val & CS_REQ_IDLE_RESOURCE_REQ_MASK) >> CS_REQ_IDLE_RESOURCE_REQ_SHIFT)
#define CS_REQ_IDLE_RESOURCE_REQ_SET(reg_val, value) \
	((reg_val & ~CS_REQ_IDLE_RESOURCE_REQ_MASK) |    \
	 ((value << CS_REQ_IDLE_RESOURCE_REQ_SHIFT) & CS_REQ_IDLE_RESOURCE_REQ_MASK))
#define CS_REQ_TILER_OOM_SHIFT 26
#define CS_REQ_TILER_OOM_MASK (0x1 << CS_REQ_TILER_OOM_SHIFT)
#define CS_REQ_TILER_OOM_GET(reg_val) ((reg_val & CS_REQ_TILER_OOM_MASK) >> CS_REQ_TILER_OOM_SHIFT)
#define CS_REQ_TILER_OOM_SET(reg_val, value) \
	((reg_val & ~CS_REQ_TILER_OOM_MASK) | ((value << CS_REQ_TILER_OOM_SHIFT) & CS_REQ_TILER_OOM_MASK))
#define CS_REQ_PROTM_PEND_SHIFT 27
#define CS_REQ_PROTM_PEND_MASK (0x1 << CS_REQ_PROTM_PEND_SHIFT)
#define CS_REQ_PROTM_PEND_GET(reg_val) ((reg_val & CS_REQ_PROTM_PEND_MASK) >> CS_REQ_PROTM_PEND_SHIFT)
#define CS_REQ_PROTM_PEND_SET(reg_val, value) \
	((reg_val & ~CS_REQ_PROTM_PEND_MASK) | ((value << CS_REQ_PROTM_PEND_SHIFT) & CS_REQ_PROTM_PEND_MASK))
#define CS_REQ_FATAL_SHIFT 30
#define CS_REQ_FATAL_MASK (0x1 << CS_REQ_FATAL_SHIFT)
#define CS_REQ_FATAL_GET(reg_val) ((reg_val & CS_REQ_FATAL_MASK) >> CS_REQ_FATAL_SHIFT)
#define CS_REQ_FATAL_SET(reg_val, value) \
	((reg_val & ~CS_REQ_FATAL_MASK) | ((value << CS_REQ_FATAL_SHIFT) & CS_REQ_FATAL_MASK))
#define CS_REQ_FAULT_SHIFT 31
#define CS_REQ_FAULT_MASK (0x1 << CS_REQ_FAULT_SHIFT)
#define CS_REQ_FAULT_GET(reg_val) ((reg_val & CS_REQ_FAULT_MASK) >> CS_REQ_FAULT_SHIFT)
#define CS_REQ_FAULT_SET(reg_val, value) \
	((reg_val & ~CS_REQ_FAULT_MASK) | ((value << CS_REQ_FAULT_SHIFT) & CS_REQ_FAULT_MASK))

/* CS_CONFIG register */
#define CS_CONFIG_PRIORITY_SHIFT 0
#define CS_CONFIG_PRIORITY_MASK (0xF << CS_CONFIG_PRIORITY_SHIFT)
#define CS_CONFIG_PRIORITY_GET(reg_val) ((reg_val & CS_CONFIG_PRIORITY_MASK) >> CS_CONFIG_PRIORITY_SHIFT)
#define CS_CONFIG_PRIORITY_SET(reg_val, value) \
	((reg_val & ~CS_CONFIG_PRIORITY_MASK) | ((value << CS_CONFIG_PRIORITY_SHIFT) & CS_CONFIG_PRIORITY_MASK))
#define CS_CONFIG_USER_DOORBELL_SHIFT 8
#define CS_CONFIG_USER_DOORBELL_MASK (0xFF << CS_CONFIG_USER_DOORBELL_SHIFT)
#define CS_CONFIG_USER_DOORBELL_GET(reg_val) ((reg_val & CS_CONFIG_USER_DOORBELL_MASK) >> CS_CONFIG_USER_DOORBELL_SHIFT)
#define CS_CONFIG_USER_DOORBELL_SET(reg_val, value) \
	((reg_val & ~CS_CONFIG_USER_DOORBELL_MASK) |    \
	 ((value << CS_CONFIG_USER_DOORBELL_SHIFT) & CS_CONFIG_USER_DOORBELL_MASK))

/* CS_ACK_IRQ_MASK register */
#define CS_ACK_IRQ_MASK_STATE_SHIFT 0
#define CS_ACK_IRQ_MASK_STATE_MASK (0x7 << CS_ACK_IRQ_MASK_STATE_SHIFT)
#define CS_ACK_IRQ_MASK_STATE_GET(reg_val) ((reg_val & CS_ACK_IRQ_MASK_STATE_MASK) >> CS_ACK_IRQ_MASK_STATE_SHIFT)
#define CS_ACK_IRQ_MASK_STATE_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_STATE_MASK) | ((value << CS_ACK_IRQ_MASK_STATE_SHIFT) & CS_ACK_IRQ_MASK_STATE_MASK))
/* CS_ACK_IRQ_MASK_STATE values */
#define CS_ACK_IRQ_MASK_STATE_DISABLED 0x0
#define CS_ACK_IRQ_MASK_STATE_ENABLED 0x7
/* End of CS_ACK_IRQ_MASK_STATE values */
#define CS_ACK_IRQ_MASK_EXTRACT_EVENT_SHIFT 4
#define CS_ACK_IRQ_MASK_EXTRACT_EVENT_MASK (0x1 << CS_ACK_IRQ_MASK_EXTRACT_EVENT_SHIFT)
#define CS_ACK_IRQ_MASK_EXTRACT_EVENT_GET(reg_val) \
	((reg_val & CS_ACK_IRQ_MASK_EXTRACT_EVENT_MASK) >> CS_ACK_IRQ_MASK_EXTRACT_EVENT_SHIFT)
#define CS_ACK_IRQ_MASK_EXTRACT_EVENT_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_EXTRACT_EVENT_MASK) |    \
	 ((value << CS_ACK_IRQ_MASK_EXTRACT_EVENT_SHIFT) & CS_ACK_IRQ_MASK_EXTRACT_EVENT_MASK))
#define CS_ACK_IRQ_MASK_ERROR_MODE_SHIFT 5
#define CS_ACK_IRQ_MASK_ERROR_MODE_MASK (0x1 << CS_ACK_IRQ_MASK_ERROR_MODE_SHIFT)
#define CS_ACK_IRQ_MASK_ERROR_MODE_GET(reg_val) \
	((reg_val & CS_ACK_IRQ_MASK_ERROR_MODE_MASK) >> CS_ACK_IRQ_MASK_ERROR_MODE_SHIFT)
#define CS_ACK_IRQ_MASK_ERROR_MODE_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_ERROR_MODE_MASK) |    \
	 ((value << CS_ACK_IRQ_MASK_ERROR_MODE_SHIFT) & CS_ACK_IRQ_MASK_ERROR_MODE_MASK))
#define CS_ACK_IRQ_MASK_TILER_OOM_SHIFT 26
#define CS_ACK_IRQ_MASK_TILER_OOM_MASK (0x1 << CS_ACK_IRQ_MASK_TILER_OOM_SHIFT)
#define CS_ACK_IRQ_MASK_TILER_OOM_GET(reg_val) \
	((reg_val & CS_ACK_IRQ_MASK_TILER_OOM_MASK) >> CS_ACK_IRQ_MASK_TILER_OOM_SHIFT)
#define CS_ACK_IRQ_MASK_TILER_OOM_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_TILER_OOM_MASK) |    \
	 ((value << CS_ACK_IRQ_MASK_TILER_OOM_SHIFT) & CS_ACK_IRQ_MASK_TILER_OOM_MASK))
#define CS_ACK_IRQ_MASK_PROTM_PEND_SHIFT 27
#define CS_ACK_IRQ_MASK_PROTM_PEND_MASK (0x1 << CS_ACK_IRQ_MASK_PROTM_PEND_SHIFT)
#define CS_ACK_IRQ_MASK_PROTM_PEND_GET(reg_val) \
	((reg_val & CS_ACK_IRQ_MASK_PROTM_PEND_MASK) >> CS_ACK_IRQ_MASK_PROTM_PEND_SHIFT)
#define CS_ACK_IRQ_MASK_PROTM_PEND_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_PROTM_PEND_MASK) |    \
	 ((value << CS_ACK_IRQ_MASK_PROTM_PEND_SHIFT) & CS_ACK_IRQ_MASK_PROTM_PEND_MASK))
#define CS_ACK_IRQ_MASK_FATAL_SHIFT 30
#define CS_ACK_IRQ_MASK_FATAL_MASK (0x1 << CS_ACK_IRQ_MASK_FATAL_SHIFT)
#define CS_ACK_IRQ_MASK_FATAL_GET(reg_val) ((reg_val & CS_ACK_IRQ_MASK_FATAL_MASK) >> CS_ACK_IRQ_MASK_FATAL_SHIFT)
#define CS_ACK_IRQ_MASK_FATAL_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_FATAL_MASK) | ((value << CS_ACK_IRQ_MASK_FATAL_SHIFT) & CS_ACK_IRQ_MASK_FATAL_MASK))
#define CS_ACK_IRQ_MASK_FAULT_SHIFT 31
#define CS_ACK_IRQ_MASK_FAULT_MASK (0x1 << CS_ACK_IRQ_MASK_FAULT_SHIFT)
#define CS_ACK_IRQ_MASK_FAULT_GET(reg_val) ((reg_val & CS_ACK_IRQ_MASK_FAULT_MASK) >> CS_ACK_IRQ_MASK_FAULT_SHIFT)
#define CS_ACK_IRQ_MASK_FAULT_SET(reg_val, value) \
	((reg_val & ~CS_ACK_IRQ_MASK_FAULT_MASK) | ((value << CS_ACK_IRQ_MASK_FAULT_SHIFT) & CS_ACK_IRQ_MASK_FAULT_MASK))

/* CS_BASE register */
#define CS_BASE_POINTER_SHIFT 0
#define CS_BASE_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_BASE_POINTER_SHIFT)
#define CS_BASE_POINTER_GET(reg_val) ((reg_val & CS_BASE_POINTER_MASK) >> CS_BASE_POINTER_SHIFT)
#define CS_BASE_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_BASE_POINTER_MASK) | ((value << CS_BASE_POINTER_SHIFT) & CS_BASE_POINTER_MASK))

/* CS_SIZE register */
#define CS_SIZE_SIZE_SHIFT 0
#define CS_SIZE_SIZE_MASK (0xFFFFFFFF << CS_SIZE_SIZE_SHIFT)
#define CS_SIZE_SIZE_GET(reg_val) ((reg_val & CS_SIZE_SIZE_MASK) >> CS_SIZE_SIZE_SHIFT)
#define CS_SIZE_SIZE_SET(reg_val, value) \
	((reg_val & ~CS_SIZE_SIZE_MASK) | ((value << CS_SIZE_SIZE_SHIFT) & CS_SIZE_SIZE_MASK))

/* CS_TILER_HEAP_START register */
#define CS_TILER_HEAP_START_POINTER_SHIFT 0
#define CS_TILER_HEAP_START_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_TILER_HEAP_START_POINTER_SHIFT)
#define CS_TILER_HEAP_START_POINTER_GET(reg_val) \
	((reg_val & CS_TILER_HEAP_START_POINTER_MASK) >> CS_TILER_HEAP_START_POINTER_SHIFT)
#define CS_TILER_HEAP_START_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_TILER_HEAP_START_POINTER_MASK) |    \
	 ((value << CS_TILER_HEAP_START_POINTER_SHIFT) & CS_TILER_HEAP_START_POINTER_MASK))
/* HeapChunkPointer nested in CS_TILER_HEAP_START_POINTER */
/* End of HeapChunkPointer nested in CS_TILER_HEAP_START_POINTER */

/* CS_TILER_HEAP_END register */
#define CS_TILER_HEAP_END_POINTER_SHIFT 0
#define CS_TILER_HEAP_END_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_TILER_HEAP_END_POINTER_SHIFT)
#define CS_TILER_HEAP_END_POINTER_GET(reg_val) \
	((reg_val & CS_TILER_HEAP_END_POINTER_MASK) >> CS_TILER_HEAP_END_POINTER_SHIFT)
#define CS_TILER_HEAP_END_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_TILER_HEAP_END_POINTER_MASK) |    \
	 ((value << CS_TILER_HEAP_END_POINTER_SHIFT) & CS_TILER_HEAP_END_POINTER_MASK))
/* HeapChunkPointer nested in CS_TILER_HEAP_END_POINTER */
/* End of HeapChunkPointer nested in CS_TILER_HEAP_END_POINTER */

/* CS_USER_INPUT register */
#define CS_USER_INPUT_POINTER_SHIFT 0
#define CS_USER_INPUT_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_USER_INPUT_POINTER_SHIFT)
#define CS_USER_INPUT_POINTER_GET(reg_val) ((reg_val & CS_USER_INPUT_POINTER_MASK) >> CS_USER_INPUT_POINTER_SHIFT)
#define CS_USER_INPUT_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_USER_INPUT_POINTER_MASK) | ((value << CS_USER_INPUT_POINTER_SHIFT) & CS_USER_INPUT_POINTER_MASK))

/* CS_USER_OUTPUT register */
#define CS_USER_OUTPUT_POINTER_SHIFT 0
#define CS_USER_OUTPUT_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_USER_OUTPUT_POINTER_SHIFT)
#define CS_USER_OUTPUT_POINTER_GET(reg_val) ((reg_val & CS_USER_OUTPUT_POINTER_MASK) >> CS_USER_OUTPUT_POINTER_SHIFT)
#define CS_USER_OUTPUT_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_USER_OUTPUT_POINTER_MASK) | ((value << CS_USER_OUTPUT_POINTER_SHIFT) & CS_USER_OUTPUT_POINTER_MASK))
/* End of CS_KERNEL_INPUT_BLOCK register set definitions */

/* CS_KERNEL_OUTPUT_BLOCK register set definitions */

/* CS_ACK register */
#define CS_ACK_STATE_SHIFT 0
#define CS_ACK_STATE_MASK (0x7 << CS_ACK_STATE_SHIFT)
#define CS_ACK_STATE_GET(reg_val) ((reg_val & CS_ACK_STATE_MASK) >> CS_ACK_STATE_SHIFT)
#define CS_ACK_STATE_SET(reg_val, value) \
	((reg_val & ~CS_ACK_STATE_MASK) | ((value << CS_ACK_STATE_SHIFT) & CS_ACK_STATE_MASK))
/* CS_ACK_STATE values */
#define CS_ACK_STATE_STOP 0x0
#define CS_ACK_STATE_START 0x1
/* End of CS_ACK_STATE values */
#define CS_ACK_EXTRACT_EVENT_SHIFT 4
#define CS_ACK_EXTRACT_EVENT_MASK (0x1 << CS_ACK_EXTRACT_EVENT_SHIFT)
#define CS_ACK_EXTRACT_EVENT_GET(reg_val) ((reg_val & CS_ACK_EXTRACT_EVENT_MASK) >> CS_ACK_EXTRACT_EVENT_SHIFT)
#define CS_ACK_EXTRACT_EVENT_SET(reg_val, value) \
	((reg_val & ~CS_ACK_EXTRACT_EVENT_MASK) | ((value << CS_ACK_EXTRACT_EVENT_SHIFT) & CS_ACK_EXTRACT_EVENT_MASK))
#define CS_ACK_ERROR_MODE_SHIFT 5
#define CS_ACK_ERROR_MODE_MASK (0x1 << CS_ACK_ERROR_MODE_SHIFT)
#define CS_ACK_ERROR_MODE_GET(reg_val) ((reg_val & CS_ACK_ERROR_MODE_MASK) >> CS_ACK_ERROR_MODE_SHIFT)
#define CS_ACK_ERROR_MODE_SET(reg_val, value) \
	((reg_val & ~CS_ACK_ERROR_MODE_MASK) | ((value << CS_ACK_ERROR_MODE_SHIFT) & CS_ACK_ERROR_MODE_MASK))
#define CS_ACK_TILER_OOM_SHIFT 26
#define CS_ACK_TILER_OOM_MASK (0x1 << CS_ACK_TILER_OOM_SHIFT)
#define CS_ACK_TILER_OOM_GET(reg_val) ((reg_val & CS_ACK_TILER_OOM_MASK) >> CS_ACK_TILER_OOM_SHIFT)
#define CS_ACK_TILER_OOM_SET(reg_val, value) \
	((reg_val & ~CS_ACK_TILER_OOM_MASK) | ((value << CS_ACK_TILER_OOM_SHIFT) & CS_ACK_TILER_OOM_MASK))
#define CS_ACK_PROTM_PEND_SHIFT 27
#define CS_ACK_PROTM_PEND_MASK (0x1 << CS_ACK_PROTM_PEND_SHIFT)
#define CS_ACK_PROTM_PEND_GET(reg_val) ((reg_val & CS_ACK_PROTM_PEND_MASK) >> CS_ACK_PROTM_PEND_SHIFT)
#define CS_ACK_PROTM_PEND_SET(reg_val, value) \
	((reg_val & ~CS_ACK_PROTM_PEND_MASK) | ((value << CS_ACK_PROTM_PEND_SHIFT) & CS_ACK_PROTM_PEND_MASK))
#define CS_ACK_FATAL_SHIFT 30
#define CS_ACK_FATAL_MASK (0x1 << CS_ACK_FATAL_SHIFT)
#define CS_ACK_FATAL_GET(reg_val) ((reg_val & CS_ACK_FATAL_MASK) >> CS_ACK_FATAL_SHIFT)
#define CS_ACK_FATAL_SET(reg_val, value) \
	((reg_val & ~CS_ACK_FATAL_MASK) | ((value << CS_ACK_FATAL_SHIFT) & CS_ACK_FATAL_MASK))
#define CS_ACK_FAULT_SHIFT 31
#define CS_ACK_FAULT_MASK (0x1 << CS_ACK_FAULT_SHIFT)
#define CS_ACK_FAULT_GET(reg_val) ((reg_val & CS_ACK_FAULT_MASK) >> CS_ACK_FAULT_SHIFT)
#define CS_ACK_FAULT_SET(reg_val, value) \
	((reg_val & ~CS_ACK_FAULT_MASK) | ((value << CS_ACK_FAULT_SHIFT) & CS_ACK_FAULT_MASK))

/* CS_OUTPUT_0 register */
#define CS_OUTPUT_0_VALUE_SHIFT 0
#define CS_OUTPUT_0_VALUE_MASK (0xFFFFFFFF << CS_OUTPUT_0_VALUE_SHIFT)
#define CS_OUTPUT_0_VALUE_GET(reg_val) ((reg_val & CS_OUTPUT_0_VALUE_MASK) >> CS_OUTPUT_0_VALUE_SHIFT)
#define CS_OUTPUT_0_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_OUTPUT_0_VALUE_MASK) | ((value << CS_OUTPUT_0_VALUE_SHIFT) & CS_OUTPUT_0_VALUE_MASK))

/* CS_OUTPUT_1 register */
#define CS_OUTPUT_1_VALUE_SHIFT 0
#define CS_OUTPUT_1_VALUE_MASK (0xFFFFFFFF << CS_OUTPUT_1_VALUE_SHIFT)
#define CS_OUTPUT_1_VALUE_GET(reg_val) ((reg_val & CS_OUTPUT_1_VALUE_MASK) >> CS_OUTPUT_1_VALUE_SHIFT)
#define CS_OUTPUT_1_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_OUTPUT_1_VALUE_MASK) | ((value << CS_OUTPUT_1_VALUE_SHIFT) & CS_OUTPUT_1_VALUE_MASK))

/* CS_OUTPUT_2 register */
#define CS_OUTPUT_2_VALUE_SHIFT 0
#define CS_OUTPUT_2_VALUE_MASK (0xFFFFFFFF << CS_OUTPUT_2_VALUE_SHIFT)
#define CS_OUTPUT_2_VALUE_GET(reg_val) ((reg_val & CS_OUTPUT_2_VALUE_MASK) >> CS_OUTPUT_2_VALUE_SHIFT)
#define CS_OUTPUT_2_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_OUTPUT_2_VALUE_MASK) | ((value << CS_OUTPUT_2_VALUE_SHIFT) & CS_OUTPUT_2_VALUE_MASK))

/* CS_OUTPUT_3 register */
#define CS_OUTPUT_3_VALUE_SHIFT 0
#define CS_OUTPUT_3_VALUE_MASK (0xFFFFFFFF << CS_OUTPUT_3_VALUE_SHIFT)
#define CS_OUTPUT_3_VALUE_GET(reg_val) ((reg_val & CS_OUTPUT_3_VALUE_MASK) >> CS_OUTPUT_3_VALUE_SHIFT)
#define CS_OUTPUT_3_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_OUTPUT_3_VALUE_MASK) | ((value << CS_OUTPUT_3_VALUE_SHIFT) & CS_OUTPUT_3_VALUE_MASK))

/* CS_STATUS_CMD_PTR register */
#define CS_STATUS_CMD_PTR_POINTER_SHIFT 0
#define CS_STATUS_CMD_PTR_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_STATUS_CMD_PTR_POINTER_SHIFT)
#define CS_STATUS_CMD_PTR_POINTER_GET(reg_val) \
	((reg_val & CS_STATUS_CMD_PTR_POINTER_MASK) >> CS_STATUS_CMD_PTR_POINTER_SHIFT)
#define CS_STATUS_CMD_PTR_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_CMD_PTR_POINTER_MASK) |    \
	 ((value << CS_STATUS_CMD_PTR_POINTER_SHIFT) & CS_STATUS_CMD_PTR_POINTER_MASK))

/* CS_STATUS_WAIT register */
#define CS_STATUS_WAIT_SB_MASK_SHIFT 0
#define CS_STATUS_WAIT_SB_MASK_MASK (0xFF << CS_STATUS_WAIT_SB_MASK_SHIFT)
#define CS_STATUS_WAIT_SB_MASK_GET(reg_val) ((reg_val & CS_STATUS_WAIT_SB_MASK_MASK) >> CS_STATUS_WAIT_SB_MASK_SHIFT)
#define CS_STATUS_WAIT_SB_MASK_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_SB_MASK_MASK) | ((value << CS_STATUS_WAIT_SB_MASK_SHIFT) & CS_STATUS_WAIT_SB_MASK_MASK))
#define CS_STATUS_WAIT_SYNC_WAIT_CONDITION_SHIFT 24
#define CS_STATUS_WAIT_SYNC_WAIT_CONDITION_MASK (0xF << CS_STATUS_WAIT_SYNC_WAIT_CONDITION_SHIFT)
#define CS_STATUS_WAIT_SYNC_WAIT_CONDITION_GET(reg_val) \
	((reg_val & CS_STATUS_WAIT_SYNC_WAIT_CONDITION_MASK) >> CS_STATUS_WAIT_SYNC_WAIT_CONDITION_SHIFT)
#define CS_STATUS_WAIT_SYNC_WAIT_CONDITION_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_SYNC_WAIT_CONDITION_MASK) |    \
	 ((value << CS_STATUS_WAIT_SYNC_WAIT_CONDITION_SHIFT) & CS_STATUS_WAIT_SYNC_WAIT_CONDITION_MASK))
/* CS_STATUS_WAIT_SYNC_WAIT_CONDITION values */
#define CS_STATUS_WAIT_SYNC_WAIT_CONDITION_LE 0x0
#define CS_STATUS_WAIT_SYNC_WAIT_CONDITION_GT 0x1
/* End of CS_STATUS_WAIT_SYNC_WAIT_CONDITION values */
#define CS_STATUS_WAIT_PROGRESS_WAIT_SHIFT 28
#define CS_STATUS_WAIT_PROGRESS_WAIT_MASK (0x1 << CS_STATUS_WAIT_PROGRESS_WAIT_SHIFT)
#define CS_STATUS_WAIT_PROGRESS_WAIT_GET(reg_val) \
	((reg_val & CS_STATUS_WAIT_PROGRESS_WAIT_MASK) >> CS_STATUS_WAIT_PROGRESS_WAIT_SHIFT)
#define CS_STATUS_WAIT_PROGRESS_WAIT_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_PROGRESS_WAIT_MASK) |    \
	 ((value << CS_STATUS_WAIT_PROGRESS_WAIT_SHIFT) & CS_STATUS_WAIT_PROGRESS_WAIT_MASK))
#define CS_STATUS_WAIT_PROTM_PEND_SHIFT 29
#define CS_STATUS_WAIT_PROTM_PEND_MASK (0x1 << CS_STATUS_WAIT_PROTM_PEND_SHIFT)
#define CS_STATUS_WAIT_PROTM_PEND_GET(reg_val) \
	((reg_val & CS_STATUS_WAIT_PROTM_PEND_MASK) >> CS_STATUS_WAIT_PROTM_PEND_SHIFT)
#define CS_STATUS_WAIT_PROTM_PEND_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_PROTM_PEND_MASK) |    \
	 ((value << CS_STATUS_WAIT_PROTM_PEND_SHIFT) & CS_STATUS_WAIT_PROTM_PEND_MASK))
#define CS_STATUS_WAIT_SYNC_WAIT_SHIFT 31
#define CS_STATUS_WAIT_SYNC_WAIT_MASK (0x1 << CS_STATUS_WAIT_SYNC_WAIT_SHIFT)
#define CS_STATUS_WAIT_SYNC_WAIT_GET(reg_val) \
	((reg_val & CS_STATUS_WAIT_SYNC_WAIT_MASK) >> CS_STATUS_WAIT_SYNC_WAIT_SHIFT)
#define CS_STATUS_WAIT_SYNC_WAIT_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_SYNC_WAIT_MASK) |    \
	 ((value << CS_STATUS_WAIT_SYNC_WAIT_SHIFT) & CS_STATUS_WAIT_SYNC_WAIT_MASK))

/* CS_STATUS_REQ_RESOURCE register */
#define CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_SHIFT 0
#define CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_MASK (0x1 << CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_GET(reg_val) \
	((reg_val & CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_MASK) >> CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_MASK) |    \
	 ((value << CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_SHIFT) & CS_STATUS_REQ_RESOURCE_COMPUTE_RESOURCES_MASK))
#define CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_SHIFT 1
#define CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_MASK (0x1 << CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_GET(reg_val) \
	((reg_val & CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_MASK) >> CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_MASK) |    \
	 ((value << CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_SHIFT) & CS_STATUS_REQ_RESOURCE_FRAGMENT_RESOURCES_MASK))
#define CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_SHIFT 2
#define CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_MASK (0x1 << CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_GET(reg_val) \
	((reg_val & CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_MASK) >> CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_MASK) |    \
	 ((value << CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_SHIFT) & CS_STATUS_REQ_RESOURCE_TILER_RESOURCES_MASK))
#define CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_SHIFT 3
#define CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_MASK (0x1 << CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_GET(reg_val) \
	((reg_val & CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_MASK) >> CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_SHIFT)
#define CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_MASK) |    \
	 ((value << CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_SHIFT) & CS_STATUS_REQ_RESOURCE_IDVS_RESOURCES_MASK))

/* CS_STATUS_WAIT_SYNC_POINTER register */
#define CS_STATUS_WAIT_SYNC_POINTER_POINTER_SHIFT 0
#define CS_STATUS_WAIT_SYNC_POINTER_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_STATUS_WAIT_SYNC_POINTER_POINTER_SHIFT)
#define CS_STATUS_WAIT_SYNC_POINTER_POINTER_GET(reg_val) \
	((reg_val & CS_STATUS_WAIT_SYNC_POINTER_POINTER_MASK) >> CS_STATUS_WAIT_SYNC_POINTER_POINTER_SHIFT)
#define CS_STATUS_WAIT_SYNC_POINTER_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_SYNC_POINTER_POINTER_MASK) |    \
	 ((value << CS_STATUS_WAIT_SYNC_POINTER_POINTER_SHIFT) & CS_STATUS_WAIT_SYNC_POINTER_POINTER_MASK))

/* CS_STATUS_WAIT_SYNC_VALUE register */
#define CS_STATUS_WAIT_SYNC_VALUE_VALUE_SHIFT 0
#define CS_STATUS_WAIT_SYNC_VALUE_VALUE_MASK (0xFFFFFFFF << CS_STATUS_WAIT_SYNC_VALUE_VALUE_SHIFT)
#define CS_STATUS_WAIT_SYNC_VALUE_VALUE_GET(reg_val) \
	((reg_val & CS_STATUS_WAIT_SYNC_VALUE_VALUE_MASK) >> CS_STATUS_WAIT_SYNC_VALUE_VALUE_SHIFT)
#define CS_STATUS_WAIT_SYNC_VALUE_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_STATUS_WAIT_SYNC_VALUE_VALUE_MASK) |    \
	 ((value << CS_STATUS_WAIT_SYNC_VALUE_VALUE_SHIFT) & CS_STATUS_WAIT_SYNC_VALUE_VALUE_MASK))

/* CS_FAULT register */
#define CS_FAULT_EXCEPTION_TYPE_SHIFT 0
#define CS_FAULT_EXCEPTION_TYPE_MASK (0xFF << CS_FAULT_EXCEPTION_TYPE_SHIFT)
#define CS_FAULT_EXCEPTION_TYPE_GET(reg_val) ((reg_val & CS_FAULT_EXCEPTION_TYPE_MASK) >> CS_FAULT_EXCEPTION_TYPE_SHIFT)
#define CS_FAULT_EXCEPTION_TYPE_SET(reg_val, value) \
	((reg_val & ~CS_FAULT_EXCEPTION_TYPE_MASK) |    \
	 ((value << CS_FAULT_EXCEPTION_TYPE_SHIFT) & CS_FAULT_EXCEPTION_TYPE_MASK))
/* CS_FAULT_EXCEPTION_TYPE values */
#define CS_FAULT_EXCEPTION_TYPE_OK 0x00
#define CS_FAULT_EXCEPTION_TYPE_DONE 0x01
#define CS_FAULT_EXCEPTION_TYPE_TERMINATED 0x04
#define CS_FAULT_EXCEPTION_TYPE_KABOOM 0x05
#define CS_FAULT_EXCEPTION_TYPE_EUREKA 0x06
#define CS_FAULT_EXCEPTION_TYPE_ACTIVE 0x08
#define CS_FAULT_EXCEPTION_TYPE_CS_RESOURCE_TERMINATED 0x0F
#define CS_FAULT_EXCEPTION_TYPE_CS_CONFIG_FAULT 0x40
#define CS_FAULT_EXCEPTION_TYPE_CS_ENDPOINT_FAULT 0x44
#define CS_FAULT_EXCEPTION_TYPE_CS_BUS_FAULT 0x48
#define CS_FAULT_EXCEPTION_TYPE_CS_INVALID_INSTRUCTION 0x49
#define CS_FAULT_EXCEPTION_TYPE_CS_CALL_STACK_OVERFLOW 0x4A
#define CS_FAULT_EXCEPTION_TYPE_INSTR_INVALID_PC 0x50
#define CS_FAULT_EXCEPTION_TYPE_INSTR_INVALID_ENC 0x51
#define CS_FAULT_EXCEPTION_TYPE_INSTR_BARRIER_FAULT 0x55
#define CS_FAULT_EXCEPTION_TYPE_DATA_INVALID_FAULT 0x58
#define CS_FAULT_EXCEPTION_TYPE_TILE_RANGE_FAULT 0x59
#define CS_FAULT_EXCEPTION_TYPE_ADDR_RANGE_FAULT 0x5A
#define CS_FAULT_EXCEPTION_TYPE_IMPRECISE_FAULT 0x5B
#define CS_FAULT_EXCEPTION_TYPE_OUT_OF_MEMORY 0x60
#define CS_FAULT_EXCEPTION_TYPE_GPU_BUS_FAULT 0x80
#define CS_FAULT_EXCEPTION_TYPE_GPU_SHAREABILITY_FAULT 0x88
#define CS_FAULT_EXCEPTION_TYPE_SYSTEM_SHAREABILITY_FAULT 0x89
#define CS_FAULT_EXCEPTION_TYPE_GPU_CACHEABILITY_FAULT 0x8A
#define CS_FAULT_EXCEPTION_TYPE_TRANSLATION_FAULT_0 0xC0
#define CS_FAULT_EXCEPTION_TYPE_TRANSLATION_FAULT_1 0xC1
#define CS_FAULT_EXCEPTION_TYPE_TRANSLATION_FAULT_2 0xC2
#define CS_FAULT_EXCEPTION_TYPE_TRANSLATION_FAULT_3 0xC3
#define CS_FAULT_EXCEPTION_TYPE_TRANSLATION_FAULT_4 0xC4
#define CS_FAULT_EXCEPTION_TYPE_PERMISSION_FAULT_0 0xC8
#define CS_FAULT_EXCEPTION_TYPE_PERMISSION_FAULT_1 0xC9
#define CS_FAULT_EXCEPTION_TYPE_PERMISSION_FAULT_2 0xCA
#define CS_FAULT_EXCEPTION_TYPE_PERMISSION_FAULT_3 0xCB
#define CS_FAULT_EXCEPTION_TYPE_ACCESS_FLAG_1 0xD9
#define CS_FAULT_EXCEPTION_TYPE_ACCESS_FLAG_2 0xDA
#define CS_FAULT_EXCEPTION_TYPE_ACCESS_FLAG_3 0xDB
#define CS_FAULT_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_IN 0xE0
#define CS_FAULT_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT0 0xE4
#define CS_FAULT_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT1 0xE5
#define CS_FAULT_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT2 0xE6
#define CS_FAULT_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT3 0xE7
#define CS_FAULT_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_0 0xE8
#define CS_FAULT_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_1 0xE9
#define CS_FAULT_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_2 0xEA
#define CS_FAULT_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_3 0xEB
/* End of CS_FAULT_EXCEPTION_TYPE values */
#define CS_FAULT_EXCEPTION_DATA_SHIFT 8
#define CS_FAULT_EXCEPTION_DATA_MASK (0xFFFFFF << CS_FAULT_EXCEPTION_DATA_SHIFT)
#define CS_FAULT_EXCEPTION_DATA_GET(reg_val) ((reg_val & CS_FAULT_EXCEPTION_DATA_MASK) >> CS_FAULT_EXCEPTION_DATA_SHIFT)
#define CS_FAULT_EXCEPTION_DATA_SET(reg_val, value) \
	((reg_val & ~CS_FAULT_EXCEPTION_DATA_MASK) |    \
	 ((value << CS_FAULT_EXCEPTION_DATA_SHIFT) & CS_FAULT_EXCEPTION_DATA_MASK))

/* CS_FATAL register */
#define CS_FATAL_EXCEPTION_TYPE_SHIFT 0
#define CS_FATAL_EXCEPTION_TYPE_MASK (0xFF << CS_FATAL_EXCEPTION_TYPE_SHIFT)
#define CS_FATAL_EXCEPTION_TYPE_GET(reg_val) ((reg_val & CS_FATAL_EXCEPTION_TYPE_MASK) >> CS_FATAL_EXCEPTION_TYPE_SHIFT)
#define CS_FATAL_EXCEPTION_TYPE_SET(reg_val, value) \
	((reg_val & ~CS_FATAL_EXCEPTION_TYPE_MASK) |    \
	 ((value << CS_FATAL_EXCEPTION_TYPE_SHIFT) & CS_FATAL_EXCEPTION_TYPE_MASK))
/* CS_FATAL_EXCEPTION_TYPE values */
#define CS_FATAL_EXCEPTION_TYPE_OK 0x00
#define CS_FATAL_EXCEPTION_TYPE_DONE 0x01
#define CS_FATAL_EXCEPTION_TYPE_TERMINATED 0x04
#define CS_FATAL_EXCEPTION_TYPE_KABOOM 0x05
#define CS_FATAL_EXCEPTION_TYPE_EUREKA 0x06
#define CS_FATAL_EXCEPTION_TYPE_ACTIVE 0x08
#define CS_FATAL_EXCEPTION_TYPE_CS_RESOURCE_TERMINATED 0x0F
#define CS_FATAL_EXCEPTION_TYPE_CS_CONFIG_FAULT 0x40
#define CS_FATAL_EXCEPTION_TYPE_CS_ENDPOINT_FAULT 0x44
#define CS_FATAL_EXCEPTION_TYPE_CS_BUS_FAULT 0x48
#define CS_FATAL_EXCEPTION_TYPE_CS_INVALID_INSTRUCTION 0x49
#define CS_FATAL_EXCEPTION_TYPE_CS_CALL_STACK_OVERFLOW 0x4A
#define CS_FATAL_EXCEPTION_TYPE_INSTR_INVALID_PC 0x50
#define CS_FATAL_EXCEPTION_TYPE_INSTR_INVALID_ENC 0x51
#define CS_FATAL_EXCEPTION_TYPE_INSTR_BARRIER_FAULT 0x55
#define CS_FATAL_EXCEPTION_TYPE_DATA_INVALID_FAULT 0x58
#define CS_FATAL_EXCEPTION_TYPE_TILE_RANGE_FAULT 0x59
#define CS_FATAL_EXCEPTION_TYPE_ADDR_RANGE_FAULT 0x5A
#define CS_FATAL_EXCEPTION_TYPE_IMPRECISE_FAULT 0x5B
#define CS_FATAL_EXCEPTION_TYPE_OUT_OF_MEMORY 0x60
#define CS_FATAL_EXCEPTION_TYPE_GPU_BUS_FAULT 0x80
#define CS_FATAL_EXCEPTION_TYPE_GPU_SHAREABILITY_FAULT 0x88
#define CS_FATAL_EXCEPTION_TYPE_SYSTEM_SHAREABILITY_FAULT 0x89
#define CS_FATAL_EXCEPTION_TYPE_GPU_CACHEABILITY_FAULT 0x8A
#define CS_FATAL_EXCEPTION_TYPE_TRANSLATION_FAULT_0 0xC0
#define CS_FATAL_EXCEPTION_TYPE_TRANSLATION_FAULT_1 0xC1
#define CS_FATAL_EXCEPTION_TYPE_TRANSLATION_FAULT_2 0xC2
#define CS_FATAL_EXCEPTION_TYPE_TRANSLATION_FAULT_3 0xC3
#define CS_FATAL_EXCEPTION_TYPE_TRANSLATION_FAULT_4 0xC4
#define CS_FATAL_EXCEPTION_TYPE_PERMISSION_FAULT_0 0xC8
#define CS_FATAL_EXCEPTION_TYPE_PERMISSION_FAULT_1 0xC9
#define CS_FATAL_EXCEPTION_TYPE_PERMISSION_FAULT_2 0xCA
#define CS_FATAL_EXCEPTION_TYPE_PERMISSION_FAULT_3 0xCB
#define CS_FATAL_EXCEPTION_TYPE_ACCESS_FLAG_1 0xD9
#define CS_FATAL_EXCEPTION_TYPE_ACCESS_FLAG_2 0xDA
#define CS_FATAL_EXCEPTION_TYPE_ACCESS_FLAG_3 0xDB
#define CS_FATAL_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_IN 0xE0
#define CS_FATAL_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT0 0xE4
#define CS_FATAL_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT1 0xE5
#define CS_FATAL_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT2 0xE6
#define CS_FATAL_EXCEPTION_TYPE_ADDRESS_SIZE_FAULT_OUT3 0xE7
#define CS_FATAL_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_0 0xE8
#define CS_FATAL_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_1 0xE9
#define CS_FATAL_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_2 0xEA
#define CS_FATAL_EXCEPTION_TYPE_MEMORY_ATTRIBUTE_FAULT_3 0xEB
/* End of CS_FATAL_EXCEPTION_TYPE values */
#define CS_FATAL_EXCEPTION_DATA_SHIFT 8
#define CS_FATAL_EXCEPTION_DATA_MASK (0xFFFFFF << CS_FATAL_EXCEPTION_DATA_SHIFT)
#define CS_FATAL_EXCEPTION_DATA_GET(reg_val) ((reg_val & CS_FATAL_EXCEPTION_DATA_MASK) >> CS_FATAL_EXCEPTION_DATA_SHIFT)
#define CS_FATAL_EXCEPTION_DATA_SET(reg_val, value) \
	((reg_val & ~CS_FATAL_EXCEPTION_DATA_MASK) |    \
	 ((value << CS_FATAL_EXCEPTION_DATA_SHIFT) & CS_FATAL_EXCEPTION_DATA_MASK))

/* CS_FAULT_INFO register */
#define CS_FAULT_INFO_EXCEPTION_DATA_SHIFT 0
#define CS_FAULT_INFO_EXCEPTION_DATA_MASK (0xFFFFFFFFFFFFFFFF << CS_FAULT_INFO_EXCEPTION_DATA_SHIFT)
#define CS_FAULT_INFO_EXCEPTION_DATA_GET(reg_val) \
	((reg_val & CS_FAULT_INFO_EXCEPTION_DATA_MASK) >> CS_FAULT_INFO_EXCEPTION_DATA_SHIFT)
#define CS_FAULT_INFO_EXCEPTION_DATA_SET(reg_val, value) \
	((reg_val & ~CS_FAULT_INFO_EXCEPTION_DATA_MASK) |    \
	 ((value << CS_FAULT_INFO_EXCEPTION_DATA_SHIFT) & CS_FAULT_INFO_EXCEPTION_DATA_MASK))

/* CS_FATAL_INFO register */
#define CS_FATAL_INFO_EXCEPTION_DATA_SHIFT 0
#define CS_FATAL_INFO_EXCEPTION_DATA_MASK (0xFFFFFFFFFFFFFFFF << CS_FATAL_INFO_EXCEPTION_DATA_SHIFT)
#define CS_FATAL_INFO_EXCEPTION_DATA_GET(reg_val) \
	((reg_val & CS_FATAL_INFO_EXCEPTION_DATA_MASK) >> CS_FATAL_INFO_EXCEPTION_DATA_SHIFT)
#define CS_FATAL_INFO_EXCEPTION_DATA_SET(reg_val, value) \
	((reg_val & ~CS_FATAL_INFO_EXCEPTION_DATA_MASK) |    \
	 ((value << CS_FATAL_INFO_EXCEPTION_DATA_SHIFT) & CS_FATAL_INFO_EXCEPTION_DATA_MASK))

/* CS_HEAP_VT_START register */
#define CS_HEAP_VT_START_VALUE_SHIFT 0
#define CS_HEAP_VT_START_VALUE_MASK (0xFFFFFFFF << CS_HEAP_VT_START_VALUE_SHIFT)
#define CS_HEAP_VT_START_VALUE_GET(reg_val) ((reg_val & CS_HEAP_VT_START_VALUE_MASK) >> CS_HEAP_VT_START_VALUE_SHIFT)
#define CS_HEAP_VT_START_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_HEAP_VT_START_VALUE_MASK) | ((value << CS_HEAP_VT_START_VALUE_SHIFT) & CS_HEAP_VT_START_VALUE_MASK))

/* CS_HEAP_VT_END register */
#define CS_HEAP_VT_END_VALUE_SHIFT 0
#define CS_HEAP_VT_END_VALUE_MASK (0xFFFFFFFF << CS_HEAP_VT_END_VALUE_SHIFT)
#define CS_HEAP_VT_END_VALUE_GET(reg_val) ((reg_val & CS_HEAP_VT_END_VALUE_MASK) >> CS_HEAP_VT_END_VALUE_SHIFT)
#define CS_HEAP_VT_END_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_HEAP_VT_END_VALUE_MASK) | ((value << CS_HEAP_VT_END_VALUE_SHIFT) & CS_HEAP_VT_END_VALUE_MASK))

/* CS_HEAP_FRAG_START register */
#define CS_HEAP_FRAG_START_VALUE_SHIFT 0
#define CS_HEAP_FRAG_START_VALUE_MASK (0xFFFFFFFF << CS_HEAP_FRAG_START_VALUE_SHIFT)
#define CS_HEAP_FRAG_START_VALUE_GET(reg_val) \
	((reg_val & CS_HEAP_FRAG_START_VALUE_MASK) >> CS_HEAP_FRAG_START_VALUE_SHIFT)
#define CS_HEAP_FRAG_START_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_HEAP_FRAG_START_VALUE_MASK) |    \
	 ((value << CS_HEAP_FRAG_START_VALUE_SHIFT) & CS_HEAP_FRAG_START_VALUE_MASK))

/* CS_HEAP_FRAG_END register */
#define CS_HEAP_FRAG_END_VALUE_SHIFT 0
#define CS_HEAP_FRAG_END_VALUE_MASK (0xFFFFFFFF << CS_HEAP_FRAG_END_VALUE_SHIFT)
#define CS_HEAP_FRAG_END_VALUE_GET(reg_val) ((reg_val & CS_HEAP_FRAG_END_VALUE_MASK) >> CS_HEAP_FRAG_END_VALUE_SHIFT)
#define CS_HEAP_FRAG_END_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_HEAP_FRAG_END_VALUE_MASK) | ((value << CS_HEAP_FRAG_END_VALUE_SHIFT) & CS_HEAP_FRAG_END_VALUE_MASK))

/* CS_HEAP_ADDRESS register */
#define CS_HEAP_ADDRESS_POINTER_SHIFT 0
#define CS_HEAP_ADDRESS_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CS_HEAP_ADDRESS_POINTER_SHIFT)
#define CS_HEAP_ADDRESS_POINTER_GET(reg_val) ((reg_val & CS_HEAP_ADDRESS_POINTER_MASK) >> CS_HEAP_ADDRESS_POINTER_SHIFT)
#define CS_HEAP_ADDRESS_POINTER_SET(reg_val, value) \
	((reg_val & ~CS_HEAP_ADDRESS_POINTER_MASK) |    \
	 ((value << CS_HEAP_ADDRESS_POINTER_SHIFT) & CS_HEAP_ADDRESS_POINTER_MASK))
/* End of CS_KERNEL_OUTPUT_BLOCK register set definitions */

/* CS_USER_INPUT_BLOCK register set definitions */

/* CS_INSERT register */
#define CS_INSERT_VALUE_SHIFT 0
#define CS_INSERT_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CS_INSERT_VALUE_SHIFT)
#define CS_INSERT_VALUE_GET(reg_val) ((reg_val & CS_INSERT_VALUE_MASK) >> CS_INSERT_VALUE_SHIFT)
#define CS_INSERT_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_INSERT_VALUE_MASK) | ((value << CS_INSERT_VALUE_SHIFT) & CS_INSERT_VALUE_MASK))

/* CS_EXTRACT_INIT register */
#define CS_EXTRACT_INIT_VALUE_SHIFT 0
#define CS_EXTRACT_INIT_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CS_EXTRACT_INIT_VALUE_SHIFT)
#define CS_EXTRACT_INIT_VALUE_GET(reg_val) ((reg_val & CS_EXTRACT_INIT_VALUE_MASK) >> CS_EXTRACT_INIT_VALUE_SHIFT)
#define CS_EXTRACT_INIT_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_EXTRACT_INIT_VALUE_MASK) | ((value << CS_EXTRACT_INIT_VALUE_SHIFT) & CS_EXTRACT_INIT_VALUE_MASK))
/* End of CS_USER_INPUT_BLOCK register set definitions */

/* CS_USER_OUTPUT_BLOCK register set definitions */

/* CS_EXTRACT register */
#define CS_EXTRACT_VALUE_SHIFT 0
#define CS_EXTRACT_VALUE_MASK (0xFFFFFFFFFFFFFFFF << CS_EXTRACT_VALUE_SHIFT)
#define CS_EXTRACT_VALUE_GET(reg_val) ((reg_val & CS_EXTRACT_VALUE_MASK) >> CS_EXTRACT_VALUE_SHIFT)
#define CS_EXTRACT_VALUE_SET(reg_val, value) \
	((reg_val & ~CS_EXTRACT_VALUE_MASK) | ((value << CS_EXTRACT_VALUE_SHIFT) & CS_EXTRACT_VALUE_MASK))

/* CS_ACTIVE register */
#define CS_ACTIVE_HW_ACTIVE_SHIFT 0
#define CS_ACTIVE_HW_ACTIVE_MASK (0x1 << CS_ACTIVE_HW_ACTIVE_SHIFT)
#define CS_ACTIVE_HW_ACTIVE_GET(reg_val) ((reg_val & CS_ACTIVE_HW_ACTIVE_MASK) >> CS_ACTIVE_HW_ACTIVE_SHIFT)
#define CS_ACTIVE_HW_ACTIVE_SET(reg_val, value) \
	((reg_val & ~CS_ACTIVE_HW_ACTIVE_MASK) | ((value << CS_ACTIVE_HW_ACTIVE_SHIFT) & CS_ACTIVE_HW_ACTIVE_MASK))
/* End of CS_USER_OUTPUT_BLOCK register set definitions */

/* CSG_INPUT_BLOCK register set definitions */

/* CSG_REQ register */
#define CSG_REQ_STATE_SHIFT 0
#define CSG_REQ_STATE_MASK (0x7 << CSG_REQ_STATE_SHIFT)
#define CSG_REQ_STATE_GET(reg_val) ((reg_val & CSG_REQ_STATE_MASK) >> CSG_REQ_STATE_SHIFT)
#define CSG_REQ_STATE_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_STATE_MASK) | ((value << CSG_REQ_STATE_SHIFT) & CSG_REQ_STATE_MASK))
/* CSG_REQ_STATE values */
#define CSG_REQ_STATE_TERMINATE 0x0
#define CSG_REQ_STATE_START 0x1
#define CSG_REQ_STATE_SUSPEND 0x2
#define CSG_REQ_STATE_RESUME 0x3
/* End of CSG_REQ_STATE values */
#define CSG_REQ_EP_CFG_SHIFT 4
#define CSG_REQ_EP_CFG_MASK (0x1 << CSG_REQ_EP_CFG_SHIFT)
#define CSG_REQ_EP_CFG_GET(reg_val) ((reg_val & CSG_REQ_EP_CFG_MASK) >> CSG_REQ_EP_CFG_SHIFT)
#define CSG_REQ_EP_CFG_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_EP_CFG_MASK) | ((value << CSG_REQ_EP_CFG_SHIFT) & CSG_REQ_EP_CFG_MASK))
#define CSG_REQ_STATUS_UPDATE_SHIFT 5
#define CSG_REQ_STATUS_UPDATE_MASK (0x1 << CSG_REQ_STATUS_UPDATE_SHIFT)
#define CSG_REQ_STATUS_UPDATE_GET(reg_val) ((reg_val & CSG_REQ_STATUS_UPDATE_MASK) >> CSG_REQ_STATUS_UPDATE_SHIFT)
#define CSG_REQ_STATUS_UPDATE_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_STATUS_UPDATE_MASK) | ((value << CSG_REQ_STATUS_UPDATE_SHIFT) & CSG_REQ_STATUS_UPDATE_MASK))
#define CSG_REQ_SYNC_UPDATE_SHIFT 28
#define CSG_REQ_SYNC_UPDATE_MASK (0x1 << CSG_REQ_SYNC_UPDATE_SHIFT)
#define CSG_REQ_SYNC_UPDATE_GET(reg_val) ((reg_val & CSG_REQ_SYNC_UPDATE_MASK) >> CSG_REQ_SYNC_UPDATE_SHIFT)
#define CSG_REQ_SYNC_UPDATE_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_SYNC_UPDATE_MASK) | ((value << CSG_REQ_SYNC_UPDATE_SHIFT) & CSG_REQ_SYNC_UPDATE_MASK))
#define CSG_REQ_IDLE_SHIFT 29
#define CSG_REQ_IDLE_MASK (0x1 << CSG_REQ_IDLE_SHIFT)
#define CSG_REQ_IDLE_GET(reg_val) ((reg_val & CSG_REQ_IDLE_MASK) >> CSG_REQ_IDLE_SHIFT)
#define CSG_REQ_IDLE_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_IDLE_MASK) | ((value << CSG_REQ_IDLE_SHIFT) & CSG_REQ_IDLE_MASK))
#define CSG_REQ_DOORBELL_SHIFT 30
#define CSG_REQ_DOORBELL_MASK (0x1 << CSG_REQ_DOORBELL_SHIFT)
#define CSG_REQ_DOORBELL_GET(reg_val) ((reg_val & CSG_REQ_DOORBELL_MASK) >> CSG_REQ_DOORBELL_SHIFT)
#define CSG_REQ_DOORBELL_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_DOORBELL_MASK) | ((value << CSG_REQ_DOORBELL_SHIFT) & CSG_REQ_DOORBELL_MASK))
#define CSG_REQ_PROGRESS_TIMER_EVENT_SHIFT 31
#define CSG_REQ_PROGRESS_TIMER_EVENT_MASK (0x1 << CSG_REQ_PROGRESS_TIMER_EVENT_SHIFT)
#define CSG_REQ_PROGRESS_TIMER_EVENT_GET(reg_val) \
	((reg_val & CSG_REQ_PROGRESS_TIMER_EVENT_MASK) >> CSG_REQ_PROGRESS_TIMER_EVENT_SHIFT)
#define CSG_REQ_PROGRESS_TIMER_EVENT_SET(reg_val, value) \
	((reg_val & ~CSG_REQ_PROGRESS_TIMER_EVENT_MASK) |    \
	 ((value << CSG_REQ_PROGRESS_TIMER_EVENT_SHIFT) & CSG_REQ_PROGRESS_TIMER_EVENT_MASK))

/* CSG_ACK_IRQ_MASK register */
#define CSG_ACK_IRQ_MASK_STATE_SHIFT 0
#define CSG_ACK_IRQ_MASK_STATE_MASK (0x7 << CSG_ACK_IRQ_MASK_STATE_SHIFT)
#define CSG_ACK_IRQ_MASK_STATE_GET(reg_val) ((reg_val & CSG_ACK_IRQ_MASK_STATE_MASK) >> CSG_ACK_IRQ_MASK_STATE_SHIFT)
#define CSG_ACK_IRQ_MASK_STATE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_STATE_MASK) | ((value << CSG_ACK_IRQ_MASK_STATE_SHIFT) & CSG_ACK_IRQ_MASK_STATE_MASK))
/* CSG_ACK_IRQ_MASK_STATE values */
#define CSG_ACK_IRQ_MASK_STATE_DISABLED 0x0
#define CSG_ACK_IRQ_MASK_STATE_ENABLED 0x7
/* End of CSG_ACK_IRQ_MASK_STATE values */
#define CSG_ACK_IRQ_MASK_EP_CFG_SHIFT 4
#define CSG_ACK_IRQ_MASK_EP_CFG_MASK (0x1 << CSG_ACK_IRQ_MASK_EP_CFG_SHIFT)
#define CSG_ACK_IRQ_MASK_EP_CFG_GET(reg_val) ((reg_val & CSG_ACK_IRQ_MASK_EP_CFG_MASK) >> CSG_ACK_IRQ_MASK_EP_CFG_SHIFT)
#define CSG_ACK_IRQ_MASK_EP_CFG_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_EP_CFG_MASK) |    \
	 ((value << CSG_ACK_IRQ_MASK_EP_CFG_SHIFT) & CSG_ACK_IRQ_MASK_EP_CFG_MASK))
#define CSG_ACK_IRQ_MASK_STATUS_UPDATE_SHIFT 5
#define CSG_ACK_IRQ_MASK_STATUS_UPDATE_MASK (0x1 << CSG_ACK_IRQ_MASK_STATUS_UPDATE_SHIFT)
#define CSG_ACK_IRQ_MASK_STATUS_UPDATE_GET(reg_val) \
	((reg_val & CSG_ACK_IRQ_MASK_STATUS_UPDATE_MASK) >> CSG_ACK_IRQ_MASK_STATUS_UPDATE_SHIFT)
#define CSG_ACK_IRQ_MASK_STATUS_UPDATE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_STATUS_UPDATE_MASK) |    \
	 ((value << CSG_ACK_IRQ_MASK_STATUS_UPDATE_SHIFT) & CSG_ACK_IRQ_MASK_STATUS_UPDATE_MASK))
#define CSG_ACK_IRQ_MASK_SYNC_UPDATE_SHIFT 28
#define CSG_ACK_IRQ_MASK_SYNC_UPDATE_MASK (0x1 << CSG_ACK_IRQ_MASK_SYNC_UPDATE_SHIFT)
#define CSG_ACK_IRQ_MASK_SYNC_UPDATE_GET(reg_val) \
	((reg_val & CSG_ACK_IRQ_MASK_SYNC_UPDATE_MASK) >> CSG_ACK_IRQ_MASK_SYNC_UPDATE_SHIFT)
#define CSG_ACK_IRQ_MASK_SYNC_UPDATE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_SYNC_UPDATE_MASK) |    \
	 ((value << CSG_ACK_IRQ_MASK_SYNC_UPDATE_SHIFT) & CSG_ACK_IRQ_MASK_SYNC_UPDATE_MASK))
#define CSG_ACK_IRQ_MASK_IDLE_SHIFT 29
#define CSG_ACK_IRQ_MASK_IDLE_MASK (0x1 << CSG_ACK_IRQ_MASK_IDLE_SHIFT)
#define CSG_ACK_IRQ_MASK_IDLE_GET(reg_val) ((reg_val & CSG_ACK_IRQ_MASK_IDLE_MASK) >> CSG_ACK_IRQ_MASK_IDLE_SHIFT)
#define CSG_ACK_IRQ_MASK_IDLE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_IDLE_MASK) | ((value << CSG_ACK_IRQ_MASK_IDLE_SHIFT) & CSG_ACK_IRQ_MASK_IDLE_MASK))
#define CSG_ACK_IRQ_MASK_DOORBELL_SHIFT 30
#define CSG_ACK_IRQ_MASK_DOORBELL_MASK (0x1 << CSG_ACK_IRQ_MASK_DOORBELL_SHIFT)
#define CSG_ACK_IRQ_MASK_DOORBELL_GET(reg_val) \
	((reg_val & CSG_ACK_IRQ_MASK_DOORBELL_MASK) >> CSG_ACK_IRQ_MASK_DOORBELL_SHIFT)
#define CSG_ACK_IRQ_MASK_DOORBELL_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_DOORBELL_MASK) |    \
	 ((value << CSG_ACK_IRQ_MASK_DOORBELL_SHIFT) & CSG_ACK_IRQ_MASK_DOORBELL_MASK))
#define CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_SHIFT 31
#define CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_MASK (0x1 << CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_SHIFT)
#define CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_GET(reg_val) \
	((reg_val & CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_MASK) >> CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_SHIFT)
#define CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_MASK) |    \
	 ((value << CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_SHIFT) & CSG_ACK_IRQ_MASK_PROGRESS_TIMER_EVENT_MASK))

/* CSG_DB_REQ register */
#define CSG_DB_REQ_MASK_SHIFT 0
#define CSG_DB_REQ_MASK_MASK (0xFFFFFFFF << CSG_DB_REQ_MASK_SHIFT)
#define CSG_DB_REQ_MASK_GET(reg_val) ((reg_val & CSG_DB_REQ_MASK_MASK) >> CSG_DB_REQ_MASK_SHIFT)
#define CSG_DB_REQ_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_DB_REQ_MASK_MASK) | ((value << CSG_DB_REQ_MASK_SHIFT) & CSG_DB_REQ_MASK_MASK))

/* CSG_IRQ_ACK register */
#define CSG_IRQ_ACK_MASK_SHIFT 0
#define CSG_IRQ_ACK_MASK_MASK (0xFFFFFFFF << CSG_IRQ_ACK_MASK_SHIFT)
#define CSG_IRQ_ACK_MASK_GET(reg_val) ((reg_val & CSG_IRQ_ACK_MASK_MASK) >> CSG_IRQ_ACK_MASK_SHIFT)
#define CSG_IRQ_ACK_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_IRQ_ACK_MASK_MASK) | ((value << CSG_IRQ_ACK_MASK_SHIFT) & CSG_IRQ_ACK_MASK_MASK))

/* CSG_ALLOW_COMPUTE register */
#define CSG_ALLOW_COMPUTE_MASK_SHIFT 0
#define CSG_ALLOW_COMPUTE_MASK_MASK (0xFFFFFFFFFFFFFFFF << CSG_ALLOW_COMPUTE_MASK_SHIFT)
#define CSG_ALLOW_COMPUTE_MASK_GET(reg_val) ((reg_val & CSG_ALLOW_COMPUTE_MASK_MASK) >> CSG_ALLOW_COMPUTE_MASK_SHIFT)
#define CSG_ALLOW_COMPUTE_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_ALLOW_COMPUTE_MASK_MASK) | ((value << CSG_ALLOW_COMPUTE_MASK_SHIFT) & CSG_ALLOW_COMPUTE_MASK_MASK))

/* CSG_ALLOW_FRAGMENT register */
#define CSG_ALLOW_FRAGMENT_MASK_SHIFT 0
#define CSG_ALLOW_FRAGMENT_MASK_MASK (0xFFFFFFFFFFFFFFFF << CSG_ALLOW_FRAGMENT_MASK_SHIFT)
#define CSG_ALLOW_FRAGMENT_MASK_GET(reg_val) ((reg_val & CSG_ALLOW_FRAGMENT_MASK_MASK) >> CSG_ALLOW_FRAGMENT_MASK_SHIFT)
#define CSG_ALLOW_FRAGMENT_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_ALLOW_FRAGMENT_MASK_MASK) |    \
	 ((value << CSG_ALLOW_FRAGMENT_MASK_SHIFT) & CSG_ALLOW_FRAGMENT_MASK_MASK))

/* CSG_ALLOW_OTHER register */
#define CSG_ALLOW_OTHER_MASK_SHIFT 0
#define CSG_ALLOW_OTHER_MASK_MASK (0xFFFFFFFF << CSG_ALLOW_OTHER_MASK_SHIFT)
#define CSG_ALLOW_OTHER_MASK_GET(reg_val) ((reg_val & CSG_ALLOW_OTHER_MASK_MASK) >> CSG_ALLOW_OTHER_MASK_SHIFT)
#define CSG_ALLOW_OTHER_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_ALLOW_OTHER_MASK_MASK) | ((value << CSG_ALLOW_OTHER_MASK_SHIFT) & CSG_ALLOW_OTHER_MASK_MASK))

/* CSG_EP_REQ register */
#define CSG_EP_REQ_COMPUTE_EP_SHIFT 0
#define CSG_EP_REQ_COMPUTE_EP_MASK (0xFF << CSG_EP_REQ_COMPUTE_EP_SHIFT)
#define CSG_EP_REQ_COMPUTE_EP_GET(reg_val) ((reg_val & CSG_EP_REQ_COMPUTE_EP_MASK) >> CSG_EP_REQ_COMPUTE_EP_SHIFT)
#define CSG_EP_REQ_COMPUTE_EP_SET(reg_val, value) \
	((reg_val & ~CSG_EP_REQ_COMPUTE_EP_MASK) | ((value << CSG_EP_REQ_COMPUTE_EP_SHIFT) & CSG_EP_REQ_COMPUTE_EP_MASK))
#define CSG_EP_REQ_FRAGMENT_EP_SHIFT 8
#define CSG_EP_REQ_FRAGMENT_EP_MASK (0xFF << CSG_EP_REQ_FRAGMENT_EP_SHIFT)
#define CSG_EP_REQ_FRAGMENT_EP_GET(reg_val) ((reg_val & CSG_EP_REQ_FRAGMENT_EP_MASK) >> CSG_EP_REQ_FRAGMENT_EP_SHIFT)
#define CSG_EP_REQ_FRAGMENT_EP_SET(reg_val, value) \
	((reg_val & ~CSG_EP_REQ_FRAGMENT_EP_MASK) | ((value << CSG_EP_REQ_FRAGMENT_EP_SHIFT) & CSG_EP_REQ_FRAGMENT_EP_MASK))
#define CSG_EP_REQ_TILER_EP_SHIFT 16
#define CSG_EP_REQ_TILER_EP_MASK (0xF << CSG_EP_REQ_TILER_EP_SHIFT)
#define CSG_EP_REQ_TILER_EP_GET(reg_val) ((reg_val & CSG_EP_REQ_TILER_EP_MASK) >> CSG_EP_REQ_TILER_EP_SHIFT)
#define CSG_EP_REQ_TILER_EP_SET(reg_val, value) \
	((reg_val & ~CSG_EP_REQ_TILER_EP_MASK) | ((value << CSG_EP_REQ_TILER_EP_SHIFT) & CSG_EP_REQ_TILER_EP_MASK))
#define CSG_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT 20
#define CSG_EP_REQ_EXCLUSIVE_COMPUTE_MASK (0x1 << CSG_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT)
#define CSG_EP_REQ_EXCLUSIVE_COMPUTE_GET(reg_val) \
	((reg_val & CSG_EP_REQ_EXCLUSIVE_COMPUTE_MASK) >> CSG_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT)
#define CSG_EP_REQ_EXCLUSIVE_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSG_EP_REQ_EXCLUSIVE_COMPUTE_MASK) |    \
	 ((value << CSG_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT) & CSG_EP_REQ_EXCLUSIVE_COMPUTE_MASK))
#define CSG_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT 21
#define CSG_EP_REQ_EXCLUSIVE_FRAGMENT_MASK (0x1 << CSG_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT)
#define CSG_EP_REQ_EXCLUSIVE_FRAGMENT_GET(reg_val) \
	((reg_val & CSG_EP_REQ_EXCLUSIVE_FRAGMENT_MASK) >> CSG_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT)
#define CSG_EP_REQ_EXCLUSIVE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSG_EP_REQ_EXCLUSIVE_FRAGMENT_MASK) |    \
	 ((value << CSG_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT) & CSG_EP_REQ_EXCLUSIVE_FRAGMENT_MASK))
#define CSG_EP_REQ_PRIORITY_SHIFT 28
#define CSG_EP_REQ_PRIORITY_MASK (0xF << CSG_EP_REQ_PRIORITY_SHIFT)
#define CSG_EP_REQ_PRIORITY_GET(reg_val) ((reg_val & CSG_EP_REQ_PRIORITY_MASK) >> CSG_EP_REQ_PRIORITY_SHIFT)
#define CSG_EP_REQ_PRIORITY_SET(reg_val, value) \
	((reg_val & ~CSG_EP_REQ_PRIORITY_MASK) | ((value << CSG_EP_REQ_PRIORITY_SHIFT) & CSG_EP_REQ_PRIORITY_MASK))

/* CSG_SUSPEND_BUF register */
#define CSG_SUSPEND_BUF_POINTER_SHIFT 0
#define CSG_SUSPEND_BUF_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CSG_SUSPEND_BUF_POINTER_SHIFT)
#define CSG_SUSPEND_BUF_POINTER_GET(reg_val) ((reg_val & CSG_SUSPEND_BUF_POINTER_MASK) >> CSG_SUSPEND_BUF_POINTER_SHIFT)
#define CSG_SUSPEND_BUF_POINTER_SET(reg_val, value) \
	((reg_val & ~CSG_SUSPEND_BUF_POINTER_MASK) |    \
	 ((value << CSG_SUSPEND_BUF_POINTER_SHIFT) & CSG_SUSPEND_BUF_POINTER_MASK))

/* CSG_PROTM_SUSPEND_BUF register */
#define CSG_PROTM_SUSPEND_BUF_POINTER_SHIFT 0
#define CSG_PROTM_SUSPEND_BUF_POINTER_MASK (0xFFFFFFFFFFFFFFFF << CSG_PROTM_SUSPEND_BUF_POINTER_SHIFT)
#define CSG_PROTM_SUSPEND_BUF_POINTER_GET(reg_val) \
	((reg_val & CSG_PROTM_SUSPEND_BUF_POINTER_MASK) >> CSG_PROTM_SUSPEND_BUF_POINTER_SHIFT)
#define CSG_PROTM_SUSPEND_BUF_POINTER_SET(reg_val, value) \
	((reg_val & ~CSG_PROTM_SUSPEND_BUF_POINTER_MASK) |    \
	 ((value << CSG_PROTM_SUSPEND_BUF_POINTER_SHIFT) & CSG_PROTM_SUSPEND_BUF_POINTER_MASK))

/* CSG_CONFIG register */
#define CSG_CONFIG_JASID_SHIFT 0
#define CSG_CONFIG_JASID_MASK (0xF << CSG_CONFIG_JASID_SHIFT)
#define CSG_CONFIG_JASID_GET(reg_val) ((reg_val & CSG_CONFIG_JASID_MASK) >> CSG_CONFIG_JASID_SHIFT)
#define CSG_CONFIG_JASID_SET(reg_val, value) \
	((reg_val & ~CSG_CONFIG_JASID_MASK) | ((value << CSG_CONFIG_JASID_SHIFT) & CSG_CONFIG_JASID_MASK))
#define CSG_CONFIG_L2C_ALLOCATE_RING_SHIFT 8
#define CSG_CONFIG_L2C_ALLOCATE_RING_MASK (0x1 << CSG_CONFIG_L2C_ALLOCATE_RING_SHIFT)
#define CSG_CONFIG_L2C_ALLOCATE_RING_GET(reg_val) \
	((reg_val & CSG_CONFIG_L2C_ALLOCATE_RING_MASK) >> CSG_CONFIG_L2C_ALLOCATE_RING_SHIFT)
#define CSG_CONFIG_L2C_ALLOCATE_RING_SET(reg_val, value) \
	((reg_val & ~CSG_CONFIG_L2C_ALLOCATE_RING_MASK) |    \
	 ((value << CSG_CONFIG_L2C_ALLOCATE_RING_SHIFT) & CSG_CONFIG_L2C_ALLOCATE_RING_MASK))
#define CSG_CONFIG_L2C_ALLOCATE_OTHER_SHIFT 16
#define CSG_CONFIG_L2C_ALLOCATE_OTHER_MASK (0x1 << CSG_CONFIG_L2C_ALLOCATE_OTHER_SHIFT)
#define CSG_CONFIG_L2C_ALLOCATE_OTHER_GET(reg_val) \
	((reg_val & CSG_CONFIG_L2C_ALLOCATE_OTHER_MASK) >> CSG_CONFIG_L2C_ALLOCATE_OTHER_SHIFT)
#define CSG_CONFIG_L2C_ALLOCATE_OTHER_SET(reg_val, value) \
	((reg_val & ~CSG_CONFIG_L2C_ALLOCATE_OTHER_MASK) |    \
	 ((value << CSG_CONFIG_L2C_ALLOCATE_OTHER_SHIFT) & CSG_CONFIG_L2C_ALLOCATE_OTHER_MASK))
/* End of CSG_INPUT_BLOCK register set definitions */

/* CSG_OUTPUT_BLOCK register set definitions */

/* CSG_ACK register */
#define CSG_ACK_STATE_SHIFT 0
#define CSG_ACK_STATE_MASK (0x7 << CSG_ACK_STATE_SHIFT)
#define CSG_ACK_STATE_GET(reg_val) ((reg_val & CSG_ACK_STATE_MASK) >> CSG_ACK_STATE_SHIFT)
#define CSG_ACK_STATE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_STATE_MASK) | ((value << CSG_ACK_STATE_SHIFT) & CSG_ACK_STATE_MASK))
/* CSG_ACK_STATE values */
#define CSG_ACK_STATE_TERMINATE 0x0
#define CSG_ACK_STATE_START 0x1
#define CSG_ACK_STATE_SUSPEND 0x2
#define CSG_ACK_STATE_RESUME 0x3
/* End of CSG_ACK_STATE values */
#define CSG_ACK_EP_CFG_SHIFT 4
#define CSG_ACK_EP_CFG_MASK (0x1 << CSG_ACK_EP_CFG_SHIFT)
#define CSG_ACK_EP_CFG_GET(reg_val) ((reg_val & CSG_ACK_EP_CFG_MASK) >> CSG_ACK_EP_CFG_SHIFT)
#define CSG_ACK_EP_CFG_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_EP_CFG_MASK) | ((value << CSG_ACK_EP_CFG_SHIFT) & CSG_ACK_EP_CFG_MASK))
#define CSG_ACK_STATUS_UPDATE_SHIFT 5
#define CSG_ACK_STATUS_UPDATE_MASK (0x1 << CSG_ACK_STATUS_UPDATE_SHIFT)
#define CSG_ACK_STATUS_UPDATE_GET(reg_val) ((reg_val & CSG_ACK_STATUS_UPDATE_MASK) >> CSG_ACK_STATUS_UPDATE_SHIFT)
#define CSG_ACK_STATUS_UPDATE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_STATUS_UPDATE_MASK) | ((value << CSG_ACK_STATUS_UPDATE_SHIFT) & CSG_ACK_STATUS_UPDATE_MASK))
#define CSG_ACK_SYNC_UPDATE_SHIFT 28
#define CSG_ACK_SYNC_UPDATE_MASK (0x1 << CSG_ACK_SYNC_UPDATE_SHIFT)
#define CSG_ACK_SYNC_UPDATE_GET(reg_val) ((reg_val & CSG_ACK_SYNC_UPDATE_MASK) >> CSG_ACK_SYNC_UPDATE_SHIFT)
#define CSG_ACK_SYNC_UPDATE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_SYNC_UPDATE_MASK) | ((value << CSG_ACK_SYNC_UPDATE_SHIFT) & CSG_ACK_SYNC_UPDATE_MASK))
#define CSG_ACK_IDLE_SHIFT 29
#define CSG_ACK_IDLE_MASK (0x1 << CSG_ACK_IDLE_SHIFT)
#define CSG_ACK_IDLE_GET(reg_val) ((reg_val & CSG_ACK_IDLE_MASK) >> CSG_ACK_IDLE_SHIFT)
#define CSG_ACK_IDLE_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_IDLE_MASK) | ((value << CSG_ACK_IDLE_SHIFT) & CSG_ACK_IDLE_MASK))
#define CSG_ACK_DOORBELL_SHIFT 30
#define CSG_ACK_DOORBELL_MASK (0x1 << CSG_ACK_DOORBELL_SHIFT)
#define CSG_ACK_DOORBELL_GET(reg_val) ((reg_val & CSG_ACK_DOORBELL_MASK) >> CSG_ACK_DOORBELL_SHIFT)
#define CSG_ACK_DOORBELL_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_DOORBELL_MASK) | ((value << CSG_ACK_DOORBELL_SHIFT) & CSG_ACK_DOORBELL_MASK))
#define CSG_ACK_PROGRESS_TIMER_EVENT_SHIFT 31
#define CSG_ACK_PROGRESS_TIMER_EVENT_MASK (0x1 << CSG_ACK_PROGRESS_TIMER_EVENT_SHIFT)
#define CSG_ACK_PROGRESS_TIMER_EVENT_GET(reg_val) \
	((reg_val & CSG_ACK_PROGRESS_TIMER_EVENT_MASK) >> CSG_ACK_PROGRESS_TIMER_EVENT_SHIFT)
#define CSG_ACK_PROGRESS_TIMER_EVENT_SET(reg_val, value) \
	((reg_val & ~CSG_ACK_PROGRESS_TIMER_EVENT_MASK) |    \
	 ((value << CSG_ACK_PROGRESS_TIMER_EVENT_SHIFT) & CSG_ACK_PROGRESS_TIMER_EVENT_MASK))

/* CSG_DB_ACK register */
#define CSG_DB_ACK_MASK_SHIFT 0
#define CSG_DB_ACK_MASK_MASK (0xFFFFFFFF << CSG_DB_ACK_MASK_SHIFT)
#define CSG_DB_ACK_MASK_GET(reg_val) ((reg_val & CSG_DB_ACK_MASK_MASK) >> CSG_DB_ACK_MASK_SHIFT)
#define CSG_DB_ACK_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_DB_ACK_MASK_MASK) | ((value << CSG_DB_ACK_MASK_SHIFT) & CSG_DB_ACK_MASK_MASK))

/* CSG_IRQ_REQ register */
#define CSG_IRQ_REQ_MASK_SHIFT 0
#define CSG_IRQ_REQ_MASK_MASK (0xFFFFFFFF << CSG_IRQ_REQ_MASK_SHIFT)
#define CSG_IRQ_REQ_MASK_GET(reg_val) ((reg_val & CSG_IRQ_REQ_MASK_MASK) >> CSG_IRQ_REQ_MASK_SHIFT)
#define CSG_IRQ_REQ_MASK_SET(reg_val, value) \
	((reg_val & ~CSG_IRQ_REQ_MASK_MASK) | ((value << CSG_IRQ_REQ_MASK_SHIFT) & CSG_IRQ_REQ_MASK_MASK))

/* CSG_STATUS_EP_CURRENT register */
#define CSG_STATUS_EP_CURRENT_COMPUTE_EP_SHIFT 0
#define CSG_STATUS_EP_CURRENT_COMPUTE_EP_MASK (0xFF << CSG_STATUS_EP_CURRENT_COMPUTE_EP_SHIFT)
#define CSG_STATUS_EP_CURRENT_COMPUTE_EP_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_CURRENT_COMPUTE_EP_MASK) >> CSG_STATUS_EP_CURRENT_COMPUTE_EP_SHIFT)
#define CSG_STATUS_EP_CURRENT_COMPUTE_EP_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_CURRENT_COMPUTE_EP_MASK) |    \
	 ((value << CSG_STATUS_EP_CURRENT_COMPUTE_EP_SHIFT) & CSG_STATUS_EP_CURRENT_COMPUTE_EP_MASK))
#define CSG_STATUS_EP_CURRENT_FRAGMENT_EP_SHIFT 8
#define CSG_STATUS_EP_CURRENT_FRAGMENT_EP_MASK (0xFF << CSG_STATUS_EP_CURRENT_FRAGMENT_EP_SHIFT)
#define CSG_STATUS_EP_CURRENT_FRAGMENT_EP_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_CURRENT_FRAGMENT_EP_MASK) >> CSG_STATUS_EP_CURRENT_FRAGMENT_EP_SHIFT)
#define CSG_STATUS_EP_CURRENT_FRAGMENT_EP_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_CURRENT_FRAGMENT_EP_MASK) |    \
	 ((value << CSG_STATUS_EP_CURRENT_FRAGMENT_EP_SHIFT) & CSG_STATUS_EP_CURRENT_FRAGMENT_EP_MASK))
#define CSG_STATUS_EP_CURRENT_TILER_EP_SHIFT 16
#define CSG_STATUS_EP_CURRENT_TILER_EP_MASK (0xF << CSG_STATUS_EP_CURRENT_TILER_EP_SHIFT)
#define CSG_STATUS_EP_CURRENT_TILER_EP_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_CURRENT_TILER_EP_MASK) >> CSG_STATUS_EP_CURRENT_TILER_EP_SHIFT)
#define CSG_STATUS_EP_CURRENT_TILER_EP_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_CURRENT_TILER_EP_MASK) |    \
	 ((value << CSG_STATUS_EP_CURRENT_TILER_EP_SHIFT) & CSG_STATUS_EP_CURRENT_TILER_EP_MASK))

/* CSG_STATUS_EP_REQ register */
#define CSG_STATUS_EP_REQ_COMPUTE_EP_SHIFT 0
#define CSG_STATUS_EP_REQ_COMPUTE_EP_MASK (0xFF << CSG_STATUS_EP_REQ_COMPUTE_EP_SHIFT)
#define CSG_STATUS_EP_REQ_COMPUTE_EP_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_REQ_COMPUTE_EP_MASK) >> CSG_STATUS_EP_REQ_COMPUTE_EP_SHIFT)
#define CSG_STATUS_EP_REQ_COMPUTE_EP_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_REQ_COMPUTE_EP_MASK) |    \
	 ((value << CSG_STATUS_EP_REQ_COMPUTE_EP_SHIFT) & CSG_STATUS_EP_REQ_COMPUTE_EP_MASK))
#define CSG_STATUS_EP_REQ_FRAGMENT_EP_SHIFT 8
#define CSG_STATUS_EP_REQ_FRAGMENT_EP_MASK (0xFF << CSG_STATUS_EP_REQ_FRAGMENT_EP_SHIFT)
#define CSG_STATUS_EP_REQ_FRAGMENT_EP_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_REQ_FRAGMENT_EP_MASK) >> CSG_STATUS_EP_REQ_FRAGMENT_EP_SHIFT)
#define CSG_STATUS_EP_REQ_FRAGMENT_EP_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_REQ_FRAGMENT_EP_MASK) |    \
	 ((value << CSG_STATUS_EP_REQ_FRAGMENT_EP_SHIFT) & CSG_STATUS_EP_REQ_FRAGMENT_EP_MASK))
#define CSG_STATUS_EP_REQ_TILER_EP_SHIFT 16
#define CSG_STATUS_EP_REQ_TILER_EP_MASK (0xF << CSG_STATUS_EP_REQ_TILER_EP_SHIFT)
#define CSG_STATUS_EP_REQ_TILER_EP_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_REQ_TILER_EP_MASK) >> CSG_STATUS_EP_REQ_TILER_EP_SHIFT)
#define CSG_STATUS_EP_REQ_TILER_EP_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_REQ_TILER_EP_MASK) |    \
	 ((value << CSG_STATUS_EP_REQ_TILER_EP_SHIFT) & CSG_STATUS_EP_REQ_TILER_EP_MASK))
#define CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT 20
#define CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_MASK (0x1 << CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT)
#define CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_MASK) >> CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT)
#define CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_MASK) |    \
	 ((value << CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_SHIFT) & CSG_STATUS_EP_REQ_EXCLUSIVE_COMPUTE_MASK))
#define CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT 21
#define CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_MASK (0x1 << CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT)
#define CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_GET(reg_val) \
	((reg_val & CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_MASK) >> CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT)
#define CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_MASK) |    \
	 ((value << CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_SHIFT) & CSG_STATUS_EP_REQ_EXCLUSIVE_FRAGMENT_MASK))

/* CSG_RESOURCE_DEP register */
#define CSG_RESOURCE_DEP_NONE_SHIFT 0
#define CSG_RESOURCE_DEP_NONE_MASK (0x1 << CSG_RESOURCE_DEP_NONE_SHIFT)
#define CSG_RESOURCE_DEP_NONE_GET(reg_val) ((reg_val & CSG_RESOURCE_DEP_NONE_MASK) >> CSG_RESOURCE_DEP_NONE_SHIFT)
#define CSG_RESOURCE_DEP_NONE_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_NONE_MASK) | ((value << CSG_RESOURCE_DEP_NONE_SHIFT) & CSG_RESOURCE_DEP_NONE_MASK))
#define CSG_RESOURCE_DEP_USING_COMPUTE_SHIFT 1
#define CSG_RESOURCE_DEP_USING_COMPUTE_MASK (0x1 << CSG_RESOURCE_DEP_USING_COMPUTE_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_USING_COMPUTE_MASK) >> CSG_RESOURCE_DEP_USING_COMPUTE_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_COMPUTE_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_COMPUTE_SHIFT) & CSG_RESOURCE_DEP_USING_COMPUTE_MASK))
#define CSG_RESOURCE_DEP_USING_FRAGMENT_SHIFT 2
#define CSG_RESOURCE_DEP_USING_FRAGMENT_MASK (0x1 << CSG_RESOURCE_DEP_USING_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_USING_FRAGMENT_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_USING_FRAGMENT_MASK) >> CSG_RESOURCE_DEP_USING_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_USING_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_FRAGMENT_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_FRAGMENT_SHIFT) & CSG_RESOURCE_DEP_USING_FRAGMENT_MASK))
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_SHIFT 3
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_MASK (0x1 << CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_MASK) >> CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_SHIFT) & CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_MASK))
#define CSG_RESOURCE_DEP_USING_TILER_SHIFT 4
#define CSG_RESOURCE_DEP_USING_TILER_MASK (0x1 << CSG_RESOURCE_DEP_USING_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_TILER_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_USING_TILER_MASK) >> CSG_RESOURCE_DEP_USING_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_TILER_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_TILER_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_TILER_SHIFT) & CSG_RESOURCE_DEP_USING_TILER_MASK))
#define CSG_RESOURCE_DEP_USING_COMPUTE_TILER_SHIFT 5
#define CSG_RESOURCE_DEP_USING_COMPUTE_TILER_MASK (0x1 << CSG_RESOURCE_DEP_USING_COMPUTE_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_TILER_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_USING_COMPUTE_TILER_MASK) >> CSG_RESOURCE_DEP_USING_COMPUTE_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_TILER_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_COMPUTE_TILER_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_COMPUTE_TILER_SHIFT) & CSG_RESOURCE_DEP_USING_COMPUTE_TILER_MASK))
#define CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_SHIFT 6
#define CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_MASK (0x1 << CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_MASK) >> CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_SHIFT) & CSG_RESOURCE_DEP_USING_FRAGMENT_TILER_MASK))
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_SHIFT 7
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_MASK (0x1 << CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_GET(reg_val)     \
	((reg_val & CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_MASK) >> \
	 CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_SHIFT)
#define CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_SHIFT) &    \
	  CSG_RESOURCE_DEP_USING_COMPUTE_FRAGMENT_TILER_MASK))
#define CSG_RESOURCE_DEP_AVAIL_COMPUTE_SHIFT 16
#define CSG_RESOURCE_DEP_AVAIL_COMPUTE_MASK (0x1 << CSG_RESOURCE_DEP_AVAIL_COMPUTE_SHIFT)
#define CSG_RESOURCE_DEP_AVAIL_COMPUTE_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_AVAIL_COMPUTE_MASK) >> CSG_RESOURCE_DEP_AVAIL_COMPUTE_SHIFT)
#define CSG_RESOURCE_DEP_AVAIL_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_AVAIL_COMPUTE_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_AVAIL_COMPUTE_SHIFT) & CSG_RESOURCE_DEP_AVAIL_COMPUTE_MASK))
#define CSG_RESOURCE_DEP_AVAIL_FRAGMENT_SHIFT 17
#define CSG_RESOURCE_DEP_AVAIL_FRAGMENT_MASK (0x1 << CSG_RESOURCE_DEP_AVAIL_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_AVAIL_FRAGMENT_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_AVAIL_FRAGMENT_MASK) >> CSG_RESOURCE_DEP_AVAIL_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_AVAIL_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_AVAIL_FRAGMENT_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_AVAIL_FRAGMENT_SHIFT) & CSG_RESOURCE_DEP_AVAIL_FRAGMENT_MASK))
#define CSG_RESOURCE_DEP_AVAIL_TILER_SHIFT 18
#define CSG_RESOURCE_DEP_AVAIL_TILER_MASK (0x1 << CSG_RESOURCE_DEP_AVAIL_TILER_SHIFT)
#define CSG_RESOURCE_DEP_AVAIL_TILER_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_AVAIL_TILER_MASK) >> CSG_RESOURCE_DEP_AVAIL_TILER_SHIFT)
#define CSG_RESOURCE_DEP_AVAIL_TILER_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_AVAIL_TILER_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_AVAIL_TILER_SHIFT) & CSG_RESOURCE_DEP_AVAIL_TILER_MASK))
#define CSG_RESOURCE_DEP_ACTIVE_COMPUTE_SHIFT 20
#define CSG_RESOURCE_DEP_ACTIVE_COMPUTE_MASK (0x1 << CSG_RESOURCE_DEP_ACTIVE_COMPUTE_SHIFT)
#define CSG_RESOURCE_DEP_ACTIVE_COMPUTE_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_ACTIVE_COMPUTE_MASK) >> CSG_RESOURCE_DEP_ACTIVE_COMPUTE_SHIFT)
#define CSG_RESOURCE_DEP_ACTIVE_COMPUTE_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_ACTIVE_COMPUTE_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_ACTIVE_COMPUTE_SHIFT) & CSG_RESOURCE_DEP_ACTIVE_COMPUTE_MASK))
#define CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_SHIFT 21
#define CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_MASK (0x1 << CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_MASK) >> CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_SHIFT)
#define CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_SHIFT) & CSG_RESOURCE_DEP_ACTIVE_FRAGMENT_MASK))
#define CSG_RESOURCE_DEP_ACTIVE_TILER_SHIFT 22
#define CSG_RESOURCE_DEP_ACTIVE_TILER_MASK (0x1 << CSG_RESOURCE_DEP_ACTIVE_TILER_SHIFT)
#define CSG_RESOURCE_DEP_ACTIVE_TILER_GET(reg_val) \
	((reg_val & CSG_RESOURCE_DEP_ACTIVE_TILER_MASK) >> CSG_RESOURCE_DEP_ACTIVE_TILER_SHIFT)
#define CSG_RESOURCE_DEP_ACTIVE_TILER_SET(reg_val, value) \
	((reg_val & ~CSG_RESOURCE_DEP_ACTIVE_TILER_MASK) |    \
	 ((value << CSG_RESOURCE_DEP_ACTIVE_TILER_SHIFT) & CSG_RESOURCE_DEP_ACTIVE_TILER_MASK))
/* End of CSG_OUTPUT_BLOCK register set definitions */

/* GLB_CONTROL_BLOCK register set definitions */

/* GLB_VERSION register */
#define GLB_VERSION_MINOR_SHIFT 0
#define GLB_VERSION_MINOR_MASK (0xFFFF << GLB_VERSION_MINOR_SHIFT)
#define GLB_VERSION_MINOR_GET(reg_val) ((reg_val & GLB_VERSION_MINOR_MASK) >> GLB_VERSION_MINOR_SHIFT)
#define GLB_VERSION_MINOR_SET(reg_val, value) \
	((reg_val & ~GLB_VERSION_MINOR_MASK) | ((value << GLB_VERSION_MINOR_SHIFT) & GLB_VERSION_MINOR_MASK))
#define GLB_VERSION_MAJOR_SHIFT 16
#define GLB_VERSION_MAJOR_MASK (0xFFFF << GLB_VERSION_MAJOR_SHIFT)
#define GLB_VERSION_MAJOR_GET(reg_val) ((reg_val & GLB_VERSION_MAJOR_MASK) >> GLB_VERSION_MAJOR_SHIFT)
#define GLB_VERSION_MAJOR_SET(reg_val, value) \
	((reg_val & ~GLB_VERSION_MAJOR_MASK) | ((value << GLB_VERSION_MAJOR_SHIFT) & GLB_VERSION_MAJOR_MASK))

/* GLB_FEATURES register */
#define GLB_FEATURES_COMPUTE_SUSPEND_SHIFT 0
#define GLB_FEATURES_COMPUTE_SUSPEND_MASK (0x1 << GLB_FEATURES_COMPUTE_SUSPEND_SHIFT)
#define GLB_FEATURES_COMPUTE_SUSPEND_GET(reg_val) \
	((reg_val & GLB_FEATURES_COMPUTE_SUSPEND_MASK) >> GLB_FEATURES_COMPUTE_SUSPEND_SHIFT)
#define GLB_FEATURES_COMPUTE_SUSPEND_SET(reg_val, value) \
	((reg_val & ~GLB_FEATURES_COMPUTE_SUSPEND_MASK) |    \
	 ((value << GLB_FEATURES_COMPUTE_SUSPEND_SHIFT) & GLB_FEATURES_COMPUTE_SUSPEND_MASK))
#define GLB_FEATURES_FRAGMENT_SUSPEND_SHIFT 1
#define GLB_FEATURES_FRAGMENT_SUSPEND_MASK (0x1 << GLB_FEATURES_FRAGMENT_SUSPEND_SHIFT)
#define GLB_FEATURES_FRAGMENT_SUSPEND_GET(reg_val) \
	((reg_val & GLB_FEATURES_FRAGMENT_SUSPEND_MASK) >> GLB_FEATURES_FRAGMENT_SUSPEND_SHIFT)
#define GLB_FEATURES_FRAGMENT_SUSPEND_SET(reg_val, value) \
	((reg_val & ~GLB_FEATURES_FRAGMENT_SUSPEND_MASK) |    \
	 ((value << GLB_FEATURES_FRAGMENT_SUSPEND_SHIFT) & GLB_FEATURES_FRAGMENT_SUSPEND_MASK))
#define GLB_FEATURES_TILER_SUSPEND_SHIFT 2
#define GLB_FEATURES_TILER_SUSPEND_MASK (0x1 << GLB_FEATURES_TILER_SUSPEND_SHIFT)
#define GLB_FEATURES_TILER_SUSPEND_GET(reg_val) \
	((reg_val & GLB_FEATURES_TILER_SUSPEND_MASK) >> GLB_FEATURES_TILER_SUSPEND_SHIFT)
#define GLB_FEATURES_TILER_SUSPEND_SET(reg_val, value) \
	((reg_val & ~GLB_FEATURES_TILER_SUSPEND_MASK) |    \
	 ((value << GLB_FEATURES_TILER_SUSPEND_SHIFT) & GLB_FEATURES_TILER_SUSPEND_MASK))
#define GLB_FEATURES_PROGRESS_WAIT_MULTI_SHIFT 3
#define GLB_FEATURES_PROGRESS_WAIT_MULTI_MASK (0x1 << GLB_FEATURES_PROGRESS_WAIT_MULTI_SHIFT)
#define GLB_FEATURES_PROGRESS_WAIT_MULTI_GET(reg_val) \
	((reg_val & GLB_FEATURES_PROGRESS_WAIT_MULTI_MASK) >> GLB_FEATURES_PROGRESS_WAIT_MULTI_SHIFT)
#define GLB_FEATURES_PROGRESS_WAIT_MULTI_SET(reg_val, value) \
	((reg_val & ~GLB_FEATURES_PROGRESS_WAIT_MULTI_MASK) |    \
	 ((value << GLB_FEATURES_PROGRESS_WAIT_MULTI_SHIFT) & GLB_FEATURES_PROGRESS_WAIT_MULTI_MASK))

/* GLB_INPUT_VA register */
#define GLB_INPUT_VA_VALUE_SHIFT 0
#define GLB_INPUT_VA_VALUE_MASK (0xFFFFFFFF << GLB_INPUT_VA_VALUE_SHIFT)
#define GLB_INPUT_VA_VALUE_GET(reg_val) ((reg_val & GLB_INPUT_VA_VALUE_MASK) >> GLB_INPUT_VA_VALUE_SHIFT)
#define GLB_INPUT_VA_VALUE_SET(reg_val, value) \
	((reg_val & ~GLB_INPUT_VA_VALUE_MASK) | ((value << GLB_INPUT_VA_VALUE_SHIFT) & GLB_INPUT_VA_VALUE_MASK))

/* GLB_OUTPUT_VA register */
#define GLB_OUTPUT_VA_VALUE_SHIFT 0
#define GLB_OUTPUT_VA_VALUE_MASK (0xFFFFFFFF << GLB_OUTPUT_VA_VALUE_SHIFT)
#define GLB_OUTPUT_VA_VALUE_GET(reg_val) ((reg_val & GLB_OUTPUT_VA_VALUE_MASK) >> GLB_OUTPUT_VA_VALUE_SHIFT)
#define GLB_OUTPUT_VA_VALUE_SET(reg_val, value) \
	((reg_val & ~GLB_OUTPUT_VA_VALUE_MASK) | ((value << GLB_OUTPUT_VA_VALUE_SHIFT) & GLB_OUTPUT_VA_VALUE_MASK))

/* GLB_GROUP_NUM register */
#define GLB_GROUP_NUM_VALUE_SHIFT 0
#define GLB_GROUP_NUM_VALUE_MASK (0x1F << GLB_GROUP_NUM_VALUE_SHIFT)
#define GLB_GROUP_NUM_VALUE_GET(reg_val) ((reg_val & GLB_GROUP_NUM_VALUE_MASK) >> GLB_GROUP_NUM_VALUE_SHIFT)
#define GLB_GROUP_NUM_VALUE_SET(reg_val, value) \
	((reg_val & ~GLB_GROUP_NUM_VALUE_MASK) | ((value << GLB_GROUP_NUM_VALUE_SHIFT) & GLB_GROUP_NUM_VALUE_MASK))

/* GLB_GROUP_STRIDE register */
#define GLB_GROUP_STRIDE_VALUE_SHIFT 0
#define GLB_GROUP_STRIDE_VALUE_MASK (0xFFFFFFFF << GLB_GROUP_STRIDE_VALUE_SHIFT)
#define GLB_GROUP_STRIDE_VALUE_GET(reg_val) ((reg_val & GLB_GROUP_STRIDE_VALUE_MASK) >> GLB_GROUP_STRIDE_VALUE_SHIFT)
#define GLB_GROUP_STRIDE_VALUE_SET(reg_val, value) \
	((reg_val & ~GLB_GROUP_STRIDE_VALUE_MASK) | ((value << GLB_GROUP_STRIDE_VALUE_SHIFT) & GLB_GROUP_STRIDE_VALUE_MASK))

/* GLB_PRFCNT_SIZE register */
#define GLB_PRFCNT_SIZE_HARDWARE_SIZE_SHIFT 0
#define GLB_PRFCNT_SIZE_HARDWARE_SIZE_MASK (0xFFFF << GLB_PRFCNT_SIZE_HARDWARE_SIZE_SHIFT)
#define GLB_PRFCNT_SIZE_HARDWARE_SIZE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_SIZE_HARDWARE_SIZE_MASK) >> GLB_PRFCNT_SIZE_HARDWARE_SIZE_SHIFT)
#define GLB_PRFCNT_SIZE_HARDWARE_SIZE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_SIZE_HARDWARE_SIZE_MASK) |    \
	 ((value << GLB_PRFCNT_SIZE_HARDWARE_SIZE_SHIFT) & GLB_PRFCNT_SIZE_HARDWARE_SIZE_MASK))
#define GLB_PRFCNT_SIZE_FIRMWARE_SIZE_SHIFT 16
#define GLB_PRFCNT_SIZE_FIRMWARE_SIZE_MASK (0xFFFF << GLB_PRFCNT_SIZE_FIRMWARE_SIZE_SHIFT)
#define GLB_PRFCNT_SIZE_FIRMWARE_SIZE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_SIZE_FIRMWARE_SIZE_MASK) >> GLB_PRFCNT_SIZE_FIRMWARE_SIZE_SHIFT)
#define GLB_PRFCNT_SIZE_FIRMWARE_SIZE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_SIZE_FIRMWARE_SIZE_MASK) |    \
	 ((value << GLB_PRFCNT_SIZE_FIRMWARE_SIZE_SHIFT) & GLB_PRFCNT_SIZE_FIRMWARE_SIZE_MASK))
/* End of GLB_CONTROL_BLOCK register set definitions */

/* STREAM_CONTROL_BLOCK register set definitions */

/* STREAM_FEATURES register */
#define STREAM_FEATURES_WORK_REGISTERS_SHIFT 0
#define STREAM_FEATURES_WORK_REGISTERS_MASK (0xFF << STREAM_FEATURES_WORK_REGISTERS_SHIFT)
#define STREAM_FEATURES_WORK_REGISTERS_GET(reg_val) \
	((reg_val & STREAM_FEATURES_WORK_REGISTERS_MASK) >> STREAM_FEATURES_WORK_REGISTERS_SHIFT)
#define STREAM_FEATURES_WORK_REGISTERS_SET(reg_val, value) \
	((reg_val & ~STREAM_FEATURES_WORK_REGISTERS_MASK) |    \
	 ((value << STREAM_FEATURES_WORK_REGISTERS_SHIFT) & STREAM_FEATURES_WORK_REGISTERS_MASK))
#define STREAM_FEATURES_SCOREBOARDS_SHIFT 8
#define STREAM_FEATURES_SCOREBOARDS_MASK (0xFF << STREAM_FEATURES_SCOREBOARDS_SHIFT)
#define STREAM_FEATURES_SCOREBOARDS_GET(reg_val) \
	((reg_val & STREAM_FEATURES_SCOREBOARDS_MASK) >> STREAM_FEATURES_SCOREBOARDS_SHIFT)
#define STREAM_FEATURES_SCOREBOARDS_SET(reg_val, value) \
	((reg_val & ~STREAM_FEATURES_SCOREBOARDS_MASK) |    \
	 ((value << STREAM_FEATURES_SCOREBOARDS_SHIFT) & STREAM_FEATURES_SCOREBOARDS_MASK))
#define STREAM_FEATURES_COMPUTE_SHIFT 16
#define STREAM_FEATURES_COMPUTE_MASK (0x1 << STREAM_FEATURES_COMPUTE_SHIFT)
#define STREAM_FEATURES_COMPUTE_GET(reg_val) ((reg_val & STREAM_FEATURES_COMPUTE_MASK) >> STREAM_FEATURES_COMPUTE_SHIFT)
#define STREAM_FEATURES_COMPUTE_SET(reg_val, value) \
	((reg_val & ~STREAM_FEATURES_COMPUTE_MASK) |    \
	 ((value << STREAM_FEATURES_COMPUTE_SHIFT) & STREAM_FEATURES_COMPUTE_MASK))
#define STREAM_FEATURES_FRAGMENT_SHIFT 17
#define STREAM_FEATURES_FRAGMENT_MASK (0x1 << STREAM_FEATURES_FRAGMENT_SHIFT)
#define STREAM_FEATURES_FRAGMENT_GET(reg_val) \
	((reg_val & STREAM_FEATURES_FRAGMENT_MASK) >> STREAM_FEATURES_FRAGMENT_SHIFT)
#define STREAM_FEATURES_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~STREAM_FEATURES_FRAGMENT_MASK) |    \
	 ((value << STREAM_FEATURES_FRAGMENT_SHIFT) & STREAM_FEATURES_FRAGMENT_MASK))
#define STREAM_FEATURES_TILER_SHIFT 18
#define STREAM_FEATURES_TILER_MASK (0x1 << STREAM_FEATURES_TILER_SHIFT)
#define STREAM_FEATURES_TILER_GET(reg_val) ((reg_val & STREAM_FEATURES_TILER_MASK) >> STREAM_FEATURES_TILER_SHIFT)
#define STREAM_FEATURES_TILER_SET(reg_val, value) \
	((reg_val & ~STREAM_FEATURES_TILER_MASK) | ((value << STREAM_FEATURES_TILER_SHIFT) & STREAM_FEATURES_TILER_MASK))

/* STREAM_INPUT_VA register */
#define STREAM_INPUT_VA_VALUE_SHIFT 0
#define STREAM_INPUT_VA_VALUE_MASK (0xFFFFFFFF << STREAM_INPUT_VA_VALUE_SHIFT)
#define STREAM_INPUT_VA_VALUE_GET(reg_val) ((reg_val & STREAM_INPUT_VA_VALUE_MASK) >> STREAM_INPUT_VA_VALUE_SHIFT)
#define STREAM_INPUT_VA_VALUE_SET(reg_val, value) \
	((reg_val & ~STREAM_INPUT_VA_VALUE_MASK) | ((value << STREAM_INPUT_VA_VALUE_SHIFT) & STREAM_INPUT_VA_VALUE_MASK))

/* STREAM_OUTPUT_VA register */
#define STREAM_OUTPUT_VA_VALUE_SHIFT 0
#define STREAM_OUTPUT_VA_VALUE_MASK (0xFFFFFFFF << STREAM_OUTPUT_VA_VALUE_SHIFT)
#define STREAM_OUTPUT_VA_VALUE_GET(reg_val) ((reg_val & STREAM_OUTPUT_VA_VALUE_MASK) >> STREAM_OUTPUT_VA_VALUE_SHIFT)
#define STREAM_OUTPUT_VA_VALUE_SET(reg_val, value) \
	((reg_val & ~STREAM_OUTPUT_VA_VALUE_MASK) | ((value << STREAM_OUTPUT_VA_VALUE_SHIFT) & STREAM_OUTPUT_VA_VALUE_MASK))
/* End of STREAM_CONTROL_BLOCK register set definitions */

/* GROUP_CONTROL_BLOCK register set definitions */

/* GROUP_FEATURES register */
#define GROUP_FEATURES_SUSPEND_TYPE_SHIFT 0
#define GROUP_FEATURES_SUSPEND_TYPE_MASK (0xFF << GROUP_FEATURES_SUSPEND_TYPE_SHIFT)
#define GROUP_FEATURES_SUSPEND_TYPE_GET(reg_val) \
	((reg_val & GROUP_FEATURES_SUSPEND_TYPE_MASK) >> GROUP_FEATURES_SUSPEND_TYPE_SHIFT)
#define GROUP_FEATURES_SUSPEND_TYPE_SET(reg_val, value) \
	((reg_val & ~GROUP_FEATURES_SUSPEND_TYPE_MASK) |    \
	 ((value << GROUP_FEATURES_SUSPEND_TYPE_SHIFT) & GROUP_FEATURES_SUSPEND_TYPE_MASK))
#define GROUP_FEATURES_DETAILED_TRACKING_SHIFT 8
#define GROUP_FEATURES_DETAILED_TRACKING_MASK (0x1 << GROUP_FEATURES_DETAILED_TRACKING_SHIFT)
#define GROUP_FEATURES_DETAILED_TRACKING_GET(reg_val) \
	((reg_val & GROUP_FEATURES_DETAILED_TRACKING_MASK) >> GROUP_FEATURES_DETAILED_TRACKING_SHIFT)
#define GROUP_FEATURES_DETAILED_TRACKING_SET(reg_val, value) \
	((reg_val & ~GROUP_FEATURES_DETAILED_TRACKING_MASK) |    \
	 ((value << GROUP_FEATURES_DETAILED_TRACKING_SHIFT) & GROUP_FEATURES_DETAILED_TRACKING_MASK))

/* GROUP_INPUT_VA register */
#define GROUP_INPUT_VA_VALUE_SHIFT 0
#define GROUP_INPUT_VA_VALUE_MASK (0xFFFFFFFF << GROUP_INPUT_VA_VALUE_SHIFT)
#define GROUP_INPUT_VA_VALUE_GET(reg_val) ((reg_val & GROUP_INPUT_VA_VALUE_MASK) >> GROUP_INPUT_VA_VALUE_SHIFT)
#define GROUP_INPUT_VA_VALUE_SET(reg_val, value) \
	((reg_val & ~GROUP_INPUT_VA_VALUE_MASK) | ((value << GROUP_INPUT_VA_VALUE_SHIFT) & GROUP_INPUT_VA_VALUE_MASK))

/* GROUP_OUTPUT_VA register */
#define GROUP_OUTPUT_VA_VALUE_SHIFT 0
#define GROUP_OUTPUT_VA_VALUE_MASK (0xFFFFFFFF << GROUP_OUTPUT_VA_VALUE_SHIFT)
#define GROUP_OUTPUT_VA_VALUE_GET(reg_val) ((reg_val & GROUP_OUTPUT_VA_VALUE_MASK) >> GROUP_OUTPUT_VA_VALUE_SHIFT)
#define GROUP_OUTPUT_VA_VALUE_SET(reg_val, value) \
	((reg_val & ~GROUP_OUTPUT_VA_VALUE_MASK) | ((value << GROUP_OUTPUT_VA_VALUE_SHIFT) & GROUP_OUTPUT_VA_VALUE_MASK))

/* GROUP_SUSPEND_SIZE register */
#define GROUP_SUSPEND_SIZE_VALUE_SHIFT 0
#define GROUP_SUSPEND_SIZE_VALUE_MASK (0xFFFFFFFF << GROUP_SUSPEND_SIZE_VALUE_SHIFT)
#define GROUP_SUSPEND_SIZE_VALUE_GET(reg_val) \
	((reg_val & GROUP_SUSPEND_SIZE_VALUE_MASK) >> GROUP_SUSPEND_SIZE_VALUE_SHIFT)
#define GROUP_SUSPEND_SIZE_VALUE_SET(reg_val, value) \
	((reg_val & ~GROUP_SUSPEND_SIZE_VALUE_MASK) |    \
	 ((value << GROUP_SUSPEND_SIZE_VALUE_SHIFT) & GROUP_SUSPEND_SIZE_VALUE_MASK))

/* GROUP_PROTM_SUSPEND_SIZE register */
#define GROUP_PROTM_SUSPEND_SIZE_VALUE_SHIFT 0
#define GROUP_PROTM_SUSPEND_SIZE_VALUE_MASK (0xFFFFFFFF << GROUP_PROTM_SUSPEND_SIZE_VALUE_SHIFT)
#define GROUP_PROTM_SUSPEND_SIZE_VALUE_GET(reg_val) \
	((reg_val & GROUP_PROTM_SUSPEND_SIZE_VALUE_MASK) >> GROUP_PROTM_SUSPEND_SIZE_VALUE_SHIFT)
#define GROUP_PROTM_SUSPEND_SIZE_VALUE_SET(reg_val, value) \
	((reg_val & ~GROUP_PROTM_SUSPEND_SIZE_VALUE_MASK) |    \
	 ((value << GROUP_PROTM_SUSPEND_SIZE_VALUE_SHIFT) & GROUP_PROTM_SUSPEND_SIZE_VALUE_MASK))

/* GROUP_STREAM_NUM register */
#define GROUP_STREAM_NUM_VALUE_SHIFT 0
#define GROUP_STREAM_NUM_VALUE_MASK (0x3F << GROUP_STREAM_NUM_VALUE_SHIFT)
#define GROUP_STREAM_NUM_VALUE_GET(reg_val) ((reg_val & GROUP_STREAM_NUM_VALUE_MASK) >> GROUP_STREAM_NUM_VALUE_SHIFT)
#define GROUP_STREAM_NUM_VALUE_SET(reg_val, value) \
	((reg_val & ~GROUP_STREAM_NUM_VALUE_MASK) | ((value << GROUP_STREAM_NUM_VALUE_SHIFT) & GROUP_STREAM_NUM_VALUE_MASK))

/* GROUP_STREAM_STRIDE register */
#define GROUP_STREAM_STRIDE_VALUE_SHIFT 0
#define GROUP_STREAM_STRIDE_VALUE_MASK (0xFFFFFFFF << GROUP_STREAM_STRIDE_VALUE_SHIFT)
#define GROUP_STREAM_STRIDE_VALUE_GET(reg_val) \
	((reg_val & GROUP_STREAM_STRIDE_VALUE_MASK) >> GROUP_STREAM_STRIDE_VALUE_SHIFT)
#define GROUP_STREAM_STRIDE_VALUE_SET(reg_val, value) \
	((reg_val & ~GROUP_STREAM_STRIDE_VALUE_MASK) |    \
	 ((value << GROUP_STREAM_STRIDE_VALUE_SHIFT) & GROUP_STREAM_STRIDE_VALUE_MASK))
/* End of GROUP_CONTROL_BLOCK register set definitions */

/* GLB_INPUT_BLOCK register set definitions */

/* GLB_REQ register */
#define GLB_REQ_HALT_SHIFT 0
#define GLB_REQ_HALT_MASK (0x1 << GLB_REQ_HALT_SHIFT)
#define GLB_REQ_HALT_GET(reg_val) ((reg_val & GLB_REQ_HALT_MASK) >> GLB_REQ_HALT_SHIFT)
#define GLB_REQ_HALT_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_HALT_MASK) | ((value << GLB_REQ_HALT_SHIFT) & GLB_REQ_HALT_MASK))
#define GLB_REQ_CFG_PROGRESS_TIMER_SHIFT 1
#define GLB_REQ_CFG_PROGRESS_TIMER_MASK (0x1 << GLB_REQ_CFG_PROGRESS_TIMER_SHIFT)
#define GLB_REQ_CFG_PROGRESS_TIMER_GET(reg_val) \
	((reg_val & GLB_REQ_CFG_PROGRESS_TIMER_MASK) >> GLB_REQ_CFG_PROGRESS_TIMER_SHIFT)
#define GLB_REQ_CFG_PROGRESS_TIMER_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_CFG_PROGRESS_TIMER_MASK) |    \
	 ((value << GLB_REQ_CFG_PROGRESS_TIMER_SHIFT) & GLB_REQ_CFG_PROGRESS_TIMER_MASK))
#define GLB_REQ_CFG_ALLOC_EN_SHIFT 2
#define GLB_REQ_CFG_ALLOC_EN_MASK (0x1 << GLB_REQ_CFG_ALLOC_EN_SHIFT)
#define GLB_REQ_CFG_ALLOC_EN_GET(reg_val) ((reg_val & GLB_REQ_CFG_ALLOC_EN_MASK) >> GLB_REQ_CFG_ALLOC_EN_SHIFT)
#define GLB_REQ_CFG_ALLOC_EN_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_CFG_ALLOC_EN_MASK) | ((value << GLB_REQ_CFG_ALLOC_EN_SHIFT) & GLB_REQ_CFG_ALLOC_EN_MASK))
#define GLB_REQ_CFG_PWROFF_TIMER_SHIFT 3
#define GLB_REQ_CFG_PWROFF_TIMER_MASK (0x1 << GLB_REQ_CFG_PWROFF_TIMER_SHIFT)
#define GLB_REQ_CFG_PWROFF_TIMER_GET(reg_val) \
	((reg_val & GLB_REQ_CFG_PWROFF_TIMER_MASK) >> GLB_REQ_CFG_PWROFF_TIMER_SHIFT)
#define GLB_REQ_CFG_PWROFF_TIMER_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_CFG_PWROFF_TIMER_MASK) |    \
	 ((value << GLB_REQ_CFG_PWROFF_TIMER_SHIFT) & GLB_REQ_CFG_PWROFF_TIMER_MASK))
#define GLB_REQ_PROTM_ENTER_SHIFT 4
#define GLB_REQ_PROTM_ENTER_MASK (0x1 << GLB_REQ_PROTM_ENTER_SHIFT)
#define GLB_REQ_PROTM_ENTER_GET(reg_val) ((reg_val & GLB_REQ_PROTM_ENTER_MASK) >> GLB_REQ_PROTM_ENTER_SHIFT)
#define GLB_REQ_PROTM_ENTER_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_PROTM_ENTER_MASK) | ((value << GLB_REQ_PROTM_ENTER_SHIFT) & GLB_REQ_PROTM_ENTER_MASK))
#define GLB_REQ_PRFCNT_ENABLE_SHIFT 5
#define GLB_REQ_PRFCNT_ENABLE_MASK (0x1 << GLB_REQ_PRFCNT_ENABLE_SHIFT)
#define GLB_REQ_PRFCNT_ENABLE_GET(reg_val) ((reg_val & GLB_REQ_PRFCNT_ENABLE_MASK) >> GLB_REQ_PRFCNT_ENABLE_SHIFT)
#define GLB_REQ_PRFCNT_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_PRFCNT_ENABLE_MASK) | ((value << GLB_REQ_PRFCNT_ENABLE_SHIFT) & GLB_REQ_PRFCNT_ENABLE_MASK))
#define GLB_REQ_PRFCNT_SAMPLE_SHIFT 6
#define GLB_REQ_PRFCNT_SAMPLE_MASK (0x1 << GLB_REQ_PRFCNT_SAMPLE_SHIFT)
#define GLB_REQ_PRFCNT_SAMPLE_GET(reg_val) ((reg_val & GLB_REQ_PRFCNT_SAMPLE_MASK) >> GLB_REQ_PRFCNT_SAMPLE_SHIFT)
#define GLB_REQ_PRFCNT_SAMPLE_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_PRFCNT_SAMPLE_MASK) | ((value << GLB_REQ_PRFCNT_SAMPLE_SHIFT) & GLB_REQ_PRFCNT_SAMPLE_MASK))
#define GLB_REQ_COUNTER_ENABLE_SHIFT 7
#define GLB_REQ_COUNTER_ENABLE_MASK (0x1 << GLB_REQ_COUNTER_ENABLE_SHIFT)
#define GLB_REQ_COUNTER_ENABLE_GET(reg_val) ((reg_val & GLB_REQ_COUNTER_ENABLE_MASK) >> GLB_REQ_COUNTER_ENABLE_SHIFT)
#define GLB_REQ_COUNTER_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_COUNTER_ENABLE_MASK) | ((value << GLB_REQ_COUNTER_ENABLE_SHIFT) & GLB_REQ_COUNTER_ENABLE_MASK))
#define GLB_REQ_PING_SHIFT 8
#define GLB_REQ_PING_MASK (0x1 << GLB_REQ_PING_SHIFT)
#define GLB_REQ_PING_GET(reg_val) ((reg_val & GLB_REQ_PING_MASK) >> GLB_REQ_PING_SHIFT)
#define GLB_REQ_PING_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_PING_MASK) | ((value << GLB_REQ_PING_SHIFT) & GLB_REQ_PING_MASK))
#define GLB_REQ_INACTIVE_COMPUTE_SHIFT 20
#define GLB_REQ_INACTIVE_COMPUTE_MASK (0x1 << GLB_REQ_INACTIVE_COMPUTE_SHIFT)
#define GLB_REQ_INACTIVE_COMPUTE_GET(reg_val) \
	((reg_val & GLB_REQ_INACTIVE_COMPUTE_MASK) >> GLB_REQ_INACTIVE_COMPUTE_SHIFT)
#define GLB_REQ_INACTIVE_COMPUTE_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_INACTIVE_COMPUTE_MASK) |    \
	 ((value << GLB_REQ_INACTIVE_COMPUTE_SHIFT) & GLB_REQ_INACTIVE_COMPUTE_MASK))
#define GLB_REQ_INACTIVE_FRAGMENT_SHIFT 21
#define GLB_REQ_INACTIVE_FRAGMENT_MASK (0x1 << GLB_REQ_INACTIVE_FRAGMENT_SHIFT)
#define GLB_REQ_INACTIVE_FRAGMENT_GET(reg_val) \
	((reg_val & GLB_REQ_INACTIVE_FRAGMENT_MASK) >> GLB_REQ_INACTIVE_FRAGMENT_SHIFT)
#define GLB_REQ_INACTIVE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_INACTIVE_FRAGMENT_MASK) |    \
	 ((value << GLB_REQ_INACTIVE_FRAGMENT_SHIFT) & GLB_REQ_INACTIVE_FRAGMENT_MASK))
#define GLB_REQ_INACTIVE_TILER_SHIFT 22
#define GLB_REQ_INACTIVE_TILER_MASK (0x1 << GLB_REQ_INACTIVE_TILER_SHIFT)
#define GLB_REQ_INACTIVE_TILER_GET(reg_val) ((reg_val & GLB_REQ_INACTIVE_TILER_MASK) >> GLB_REQ_INACTIVE_TILER_SHIFT)
#define GLB_REQ_INACTIVE_TILER_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_INACTIVE_TILER_MASK) | ((value << GLB_REQ_INACTIVE_TILER_SHIFT) & GLB_REQ_INACTIVE_TILER_MASK))
#define GLB_REQ_PROTM_EXIT_SHIFT 23
#define GLB_REQ_PROTM_EXIT_MASK (0x1 << GLB_REQ_PROTM_EXIT_SHIFT)
#define GLB_REQ_PROTM_EXIT_GET(reg_val) ((reg_val & GLB_REQ_PROTM_EXIT_MASK) >> GLB_REQ_PROTM_EXIT_SHIFT)
#define GLB_REQ_PROTM_EXIT_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_PROTM_EXIT_MASK) | ((value << GLB_REQ_PROTM_EXIT_SHIFT) & GLB_REQ_PROTM_EXIT_MASK))
#define GLB_REQ_DEBUG_CSF_REQ_SHIFT 30
#define GLB_REQ_DEBUG_CSF_REQ_MASK (0x1 << GLB_REQ_DEBUG_CSF_REQ_SHIFT)
#define GLB_REQ_DEBUG_CSF_REQ_GET(reg_val) ((reg_val & GLB_REQ_DEBUG_CSF_REQ_MASK) >> GLB_REQ_DEBUG_CSF_REQ_SHIFT)
#define GLB_REQ_DEBUG_CSF_REQ_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_DEBUG_CSF_REQ_MASK) | ((value << GLB_REQ_DEBUG_CSF_REQ_SHIFT) & GLB_REQ_DEBUG_CSF_REQ_MASK))
#define GLB_REQ_DEBUG_HOST_REQ_SHIFT 31
#define GLB_REQ_DEBUG_HOST_REQ_MASK (0x1 << GLB_REQ_DEBUG_HOST_REQ_SHIFT)
#define GLB_REQ_DEBUG_HOST_REQ_GET(reg_val) ((reg_val & GLB_REQ_DEBUG_HOST_REQ_MASK) >> GLB_REQ_DEBUG_HOST_REQ_SHIFT)
#define GLB_REQ_DEBUG_HOST_REQ_SET(reg_val, value) \
	((reg_val & ~GLB_REQ_DEBUG_HOST_REQ_MASK) | ((value << GLB_REQ_DEBUG_HOST_REQ_SHIFT) & GLB_REQ_DEBUG_HOST_REQ_MASK))

/* GLB_ACK_IRQ_MASK register */
#define GLB_ACK_IRQ_MASK_HALT_SHIFT 0
#define GLB_ACK_IRQ_MASK_HALT_MASK (0x1 << GLB_ACK_IRQ_MASK_HALT_SHIFT)
#define GLB_ACK_IRQ_MASK_HALT_GET(reg_val) ((reg_val & GLB_ACK_IRQ_MASK_HALT_MASK) >> GLB_ACK_IRQ_MASK_HALT_SHIFT)
#define GLB_ACK_IRQ_MASK_HALT_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_HALT_MASK) | ((value << GLB_ACK_IRQ_MASK_HALT_SHIFT) & GLB_ACK_IRQ_MASK_HALT_MASK))
#define GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_SHIFT 1
#define GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_MASK (0x1 << GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_SHIFT)
#define GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_MASK) >> GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_SHIFT)
#define GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_SHIFT) & GLB_ACK_IRQ_MASK_CFG_PROGRESS_TIMER_MASK))
#define GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_SHIFT 2
#define GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_MASK (0x1 << GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_SHIFT)
#define GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_MASK) >> GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_SHIFT)
#define GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_SHIFT) & GLB_ACK_IRQ_MASK_CFG_ALLOC_EN_MASK))
#define GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_SHIFT 3
#define GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_MASK (0x1 << GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_SHIFT)
#define GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_MASK) >> GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_SHIFT)
#define GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_SHIFT) & GLB_ACK_IRQ_MASK_CFG_PWROFF_TIMER_MASK))
#define GLB_ACK_IRQ_MASK_PROTM_ENTER_SHIFT 4
#define GLB_ACK_IRQ_MASK_PROTM_ENTER_MASK (0x1 << GLB_ACK_IRQ_MASK_PROTM_ENTER_SHIFT)
#define GLB_ACK_IRQ_MASK_PROTM_ENTER_GET(reg_val) ((reg_val & GLB_ACK_IRQ_MASK_PROTM_ENTER_MASK) >> GLB_ACK_IRQ_MASK_PROTM_ENTER_SHIFT)
#define GLB_ACK_IRQ_MASK_PROTM_ENTER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_PROTM_ENTER_MASK) | ((value << GLB_ACK_IRQ_MASK_PROTM_ENTER_SHIFT) & GLB_ACK_IRQ_MASK_PROTM_ENTER_MASK))
#define GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_SHIFT 5
#define GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_MASK (0x1 << GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_SHIFT)
#define GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_MASK) >> GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_SHIFT)
#define GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_SHIFT) & GLB_ACK_IRQ_MASK_PRFCNT_ENABLE_MASK))
#define GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_SHIFT 6
#define GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_MASK (0x1 << GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_SHIFT)
#define GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_MASK) >> GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_SHIFT)
#define GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_SHIFT) & GLB_ACK_IRQ_MASK_PRFCNT_SAMPLE_MASK))
#define GLB_ACK_IRQ_MASK_COUNTER_ENABLE_SHIFT 7
#define GLB_ACK_IRQ_MASK_COUNTER_ENABLE_MASK (0x1 << GLB_ACK_IRQ_MASK_COUNTER_ENABLE_SHIFT)
#define GLB_ACK_IRQ_MASK_COUNTER_ENABLE_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_COUNTER_ENABLE_MASK) >> GLB_ACK_IRQ_MASK_COUNTER_ENABLE_SHIFT)
#define GLB_ACK_IRQ_MASK_PING_SHIFT 8
#define GLB_ACK_IRQ_MASK_PING_MASK (0x1 << GLB_ACK_IRQ_MASK_PING_SHIFT)
#define GLB_ACK_IRQ_MASK_PING_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_PING_MASK) >> GLB_ACK_IRQ_MASK_PING_SHIFT)
#define GLB_ACK_IRQ_MASK_COUNTER_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_COUNTER_ENABLE_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_COUNTER_ENABLE_SHIFT) & GLB_ACK_IRQ_MASK_COUNTER_ENABLE_MASK))
#define GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_SHIFT 20
#define GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_MASK (0x1 << GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_SHIFT)
#define GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_MASK) >> GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_SHIFT)
#define GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_SHIFT) & GLB_ACK_IRQ_MASK_INACTIVE_COMPUTE_MASK))
#define GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_SHIFT 21
#define GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_MASK (0x1 << GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_SHIFT)
#define GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_MASK) >> GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_SHIFT)
#define GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_SHIFT) & GLB_ACK_IRQ_MASK_INACTIVE_FRAGMENT_MASK))
#define GLB_ACK_IRQ_MASK_INACTIVE_TILER_SHIFT 22
#define GLB_ACK_IRQ_MASK_INACTIVE_TILER_MASK (0x1 << GLB_ACK_IRQ_MASK_INACTIVE_TILER_SHIFT)
#define GLB_ACK_IRQ_MASK_INACTIVE_TILER_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_INACTIVE_TILER_MASK) >> GLB_ACK_IRQ_MASK_INACTIVE_TILER_SHIFT)
#define GLB_ACK_IRQ_MASK_INACTIVE_TILER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_INACTIVE_TILER_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_INACTIVE_TILER_SHIFT) & GLB_ACK_IRQ_MASK_INACTIVE_TILER_MASK))
#define GLB_ACK_IRQ_MASK_PROTM_EXIT_SHIFT 23
#define GLB_ACK_IRQ_MASK_PROTM_EXIT_MASK (0x1 << GLB_ACK_IRQ_MASK_PROTM_EXIT_SHIFT)
#define GLB_ACK_IRQ_MASK_PROTM_EXIT_GET(reg_val) ((reg_val & GLB_ACK_IRQ_MASK_PROTM_EXIT_MASK) >> GLB_ACK_IRQ_MASK_PROTM_EXIT_SHIFT)
#define GLB_ACK_IRQ_MASK_PROTM_EXIT_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_PROTM_EXIT_MASK) | ((value << GLB_ACK_IRQ_MASK_PROTM_EXIT_SHIFT) & GLB_ACK_IRQ_MASK_PROTM_EXIT_MASK))
#define GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_SHIFT 30
#define GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_MASK (0x1 << GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_SHIFT)
#define GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_MASK) >> GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_SHIFT)
#define GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_SHIFT) & GLB_ACK_IRQ_MASK_DEBUG_CSF_REQ_MASK))
#define GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_SHIFT 31
#define GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_MASK (0x1 << GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_SHIFT)
#define GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_GET(reg_val) \
	((reg_val & GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_MASK) >> GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_SHIFT)
#define GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_MASK) |    \
	 ((value << GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_SHIFT) & GLB_ACK_IRQ_MASK_DEBUG_HOST_REQ_MASK))

/* GLB_DB_REQ register */
#define GLB_DB_REQ_MASK_SHIFT 0
#define GLB_DB_REQ_MASK_MASK (0xFFFFFFFF << GLB_DB_REQ_MASK_SHIFT)
#define GLB_DB_REQ_MASK_GET(reg_val) ((reg_val & GLB_DB_REQ_MASK_MASK) >> GLB_DB_REQ_MASK_SHIFT)
#define GLB_DB_REQ_MASK_SET(reg_val, value) \
	((reg_val & ~GLB_DB_REQ_MASK_MASK) | ((value << GLB_DB_REQ_MASK_SHIFT) & GLB_DB_REQ_MASK_MASK))

/* GLB_PROGRESS_TIMER register */
#define GLB_PROGRESS_TIMER_TIMEOUT_SHIFT 0
#define GLB_PROGRESS_TIMER_TIMEOUT_MASK (0xFFFFFFFF << GLB_PROGRESS_TIMER_TIMEOUT_SHIFT)
#define GLB_PROGRESS_TIMER_TIMEOUT_GET(reg_val) \
	((reg_val & GLB_PROGRESS_TIMER_TIMEOUT_MASK) >> GLB_PROGRESS_TIMER_TIMEOUT_SHIFT)
#define GLB_PROGRESS_TIMER_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~GLB_PROGRESS_TIMER_TIMEOUT_MASK) |    \
	 ((value << GLB_PROGRESS_TIMER_TIMEOUT_SHIFT) & GLB_PROGRESS_TIMER_TIMEOUT_MASK))

/* GLB_PWROFF_TIMER register */
#define GLB_PWROFF_TIMER_TIMEOUT_SHIFT 0
#define GLB_PWROFF_TIMER_TIMEOUT_MASK (0x7FFFFFFF << GLB_PWROFF_TIMER_TIMEOUT_SHIFT)
#define GLB_PWROFF_TIMER_TIMEOUT_GET(reg_val) \
	((reg_val & GLB_PWROFF_TIMER_TIMEOUT_MASK) >> GLB_PWROFF_TIMER_TIMEOUT_SHIFT)
#define GLB_PWROFF_TIMER_TIMEOUT_SET(reg_val, value) \
	((reg_val & ~GLB_PWROFF_TIMER_TIMEOUT_MASK) |    \
	 ((value << GLB_PWROFF_TIMER_TIMEOUT_SHIFT) & GLB_PWROFF_TIMER_TIMEOUT_MASK))
#define GLB_PWROFF_TIMER_TIMER_SOURCE_SHIFT 31
#define GLB_PWROFF_TIMER_TIMER_SOURCE_MASK (0x1 << GLB_PWROFF_TIMER_TIMER_SOURCE_SHIFT)
#define GLB_PWROFF_TIMER_TIMER_SOURCE_GET(reg_val) \
	((reg_val & GLB_PWROFF_TIMER_TIMER_SOURCE_MASK) >> GLB_PWROFF_TIMER_TIMER_SOURCE_SHIFT)
#define GLB_PWROFF_TIMER_TIMER_SOURCE_SET(reg_val, value) \
	((reg_val & ~GLB_PWROFF_TIMER_TIMER_SOURCE_MASK) |    \
	 ((value << GLB_PWROFF_TIMER_TIMER_SOURCE_SHIFT) & GLB_PWROFF_TIMER_TIMER_SOURCE_MASK))
/* GLB_PWROFF_TIMER_TIMER_SOURCE values */
#define GLB_PWROFF_TIMER_TIMER_SOURCE_SYSTEM_TIMESTAMP 0x0
#define GLB_PWROFF_TIMER_TIMER_SOURCE_GPU_COUNTER 0x1
/* End of GLB_PWROFF_TIMER_TIMER_SOURCE values */

/* GLB_ALLOC_EN register */
#define GLB_ALLOC_EN_MASK_SHIFT 0
#define GLB_ALLOC_EN_MASK_MASK (0xFFFFFFFFFFFFFFFF << GLB_ALLOC_EN_MASK_SHIFT)
#define GLB_ALLOC_EN_MASK_GET(reg_val) ((reg_val & GLB_ALLOC_EN_MASK_MASK) >> GLB_ALLOC_EN_MASK_SHIFT)
#define GLB_ALLOC_EN_MASK_SET(reg_val, value) \
	((reg_val & ~GLB_ALLOC_EN_MASK_MASK) | ((value << GLB_ALLOC_EN_MASK_SHIFT) & GLB_ALLOC_EN_MASK_MASK))

/* GLB_PROTM_COHERENCY register */
#define GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_SHIFT 0
#define GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_MASK \
	(0xFFFFFFFF << GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_SHIFT)
#define GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_GET(reg_val)     \
	((reg_val & GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_MASK) >> \
	 GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_SHIFT)
#define GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_SET(reg_val, value) \
	((reg_val & ~GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_MASK) |    \
	 ((value << GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_SHIFT) &    \
	  GLB_PROTM_COHERENCY_L2_CACHE_PROTOCOL_SELECT_MASK))

/* GLB_PRFCNT_JASID register */
#define GLB_PRFCNT_JASID_JASID_SHIFT 0
#define GLB_PRFCNT_JASID_JASID_MASK (0xF << GLB_PRFCNT_JASID_JASID_SHIFT)
#define GLB_PRFCNT_JASID_JASID_GET(reg_val) ((reg_val & GLB_PRFCNT_JASID_JASID_MASK) >> GLB_PRFCNT_JASID_JASID_SHIFT)
#define GLB_PRFCNT_JASID_JASID_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_JASID_JASID_MASK) | ((value << GLB_PRFCNT_JASID_JASID_SHIFT) & GLB_PRFCNT_JASID_JASID_MASK))

/* GLB_PRFCNT_BASE register */
#define GLB_PRFCNT_BASE_POINTER_SHIFT 0
#define GLB_PRFCNT_BASE_POINTER_MASK (0xFFFFFFFFFFFFFFFF << GLB_PRFCNT_BASE_POINTER_SHIFT)
#define GLB_PRFCNT_BASE_POINTER_GET(reg_val) ((reg_val & GLB_PRFCNT_BASE_POINTER_MASK) >> GLB_PRFCNT_BASE_POINTER_SHIFT)
#define GLB_PRFCNT_BASE_POINTER_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_BASE_POINTER_MASK) |    \
	 ((value << GLB_PRFCNT_BASE_POINTER_SHIFT) & GLB_PRFCNT_BASE_POINTER_MASK))

/* GLB_PRFCNT_CONFIG register */
#define GLB_PRFCNT_CONFIG_SET_SELECT_SHIFT 8
#define GLB_PRFCNT_CONFIG_SET_SELECT_MASK (0x3 << GLB_PRFCNT_CONFIG_SET_SELECT_SHIFT)
#define GLB_PRFCNT_CONFIG_SET_SELECT_GET(reg_val) \
	((reg_val & GLB_PRFCNT_CONFIG_SET_SELECT_MASK) >> GLB_PRFCNT_CONFIG_SET_SELECT_SHIFT)
#define GLB_PRFCNT_CONFIG_SET_SELECT_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_CONFIG_SET_SELECT_MASK) |    \
	 ((value << GLB_PRFCNT_CONFIG_SET_SELECT_SHIFT) & GLB_PRFCNT_CONFIG_SET_SELECT_MASK))

/* GLB_PRFCNT_CSG_SELECT register */
#define GLB_PRFCNT_CSG_SELECT_ENABLE_SHIFT 0
#define GLB_PRFCNT_CSG_SELECT_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_CSG_SELECT_ENABLE_SHIFT)
#define GLB_PRFCNT_CSG_SELECT_ENABLE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_CSG_SELECT_ENABLE_MASK) >> GLB_PRFCNT_CSG_SELECT_ENABLE_SHIFT)
#define GLB_PRFCNT_CSG_SELECT_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_CSG_SELECT_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_CSG_SELECT_ENABLE_SHIFT) & GLB_PRFCNT_CSG_SELECT_ENABLE_MASK))

/* GLB_PRFCNT_FW_EN register */
#define GLB_PRFCNT_FW_EN_ENABLE_SHIFT 0
#define GLB_PRFCNT_FW_EN_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_FW_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_FW_EN_ENABLE_GET(reg_val) ((reg_val & GLB_PRFCNT_FW_EN_ENABLE_MASK) >> GLB_PRFCNT_FW_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_FW_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_FW_EN_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_FW_EN_ENABLE_SHIFT) & GLB_PRFCNT_FW_EN_ENABLE_MASK))

/* GLB_PRFCNT_CSG_EN register */
#define GLB_PRFCNT_CSG_EN_ENABLE_SHIFT 0
#define GLB_PRFCNT_CSG_EN_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_CSG_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_CSG_EN_ENABLE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_CSG_EN_ENABLE_MASK) >> GLB_PRFCNT_CSG_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_CSG_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_CSG_EN_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_CSG_EN_ENABLE_SHIFT) & GLB_PRFCNT_CSG_EN_ENABLE_MASK))

/* GLB_PRFCNT_CSF_EN register */
#define GLB_PRFCNT_CSF_EN_ENABLE_SHIFT 0
#define GLB_PRFCNT_CSF_EN_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_CSF_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_CSF_EN_ENABLE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_CSF_EN_ENABLE_MASK) >> GLB_PRFCNT_CSF_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_CSF_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_CSF_EN_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_CSF_EN_ENABLE_SHIFT) & GLB_PRFCNT_CSF_EN_ENABLE_MASK))

/* GLB_PRFCNT_SHADER_EN register */
#define GLB_PRFCNT_SHADER_EN_ENABLE_SHIFT 0
#define GLB_PRFCNT_SHADER_EN_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_SHADER_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_SHADER_EN_ENABLE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_SHADER_EN_ENABLE_MASK) >> GLB_PRFCNT_SHADER_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_SHADER_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_SHADER_EN_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_SHADER_EN_ENABLE_SHIFT) & GLB_PRFCNT_SHADER_EN_ENABLE_MASK))

/* GLB_PRFCNT_TILER_EN register */
#define GLB_PRFCNT_TILER_EN_ENABLE_SHIFT 0
#define GLB_PRFCNT_TILER_EN_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_TILER_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_TILER_EN_ENABLE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_TILER_EN_ENABLE_MASK) >> GLB_PRFCNT_TILER_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_TILER_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_TILER_EN_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_TILER_EN_ENABLE_SHIFT) & GLB_PRFCNT_TILER_EN_ENABLE_MASK))

/* GLB_PRFCNT_MMU_L2_EN register */
#define GLB_PRFCNT_MMU_L2_EN_ENABLE_SHIFT 0
#define GLB_PRFCNT_MMU_L2_EN_ENABLE_MASK (0xFFFFFFFF << GLB_PRFCNT_MMU_L2_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_MMU_L2_EN_ENABLE_GET(reg_val) \
	((reg_val & GLB_PRFCNT_MMU_L2_EN_ENABLE_MASK) >> GLB_PRFCNT_MMU_L2_EN_ENABLE_SHIFT)
#define GLB_PRFCNT_MMU_L2_EN_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_MMU_L2_EN_ENABLE_MASK) |    \
	 ((value << GLB_PRFCNT_MMU_L2_EN_ENABLE_SHIFT) & GLB_PRFCNT_MMU_L2_EN_ENABLE_MASK))

/* GLB_DEBUG_FWUTF_DESTROY register */
#define GLB_DEBUG_FWUTF_DESTROY_DESTROY_SHIFT 0
#define GLB_DEBUG_FWUTF_DESTROY_DESTROY_MASK (0xFFFFFFFF << GLB_DEBUG_FWUTF_DESTROY_DESTROY_SHIFT)
#define GLB_DEBUG_FWUTF_DESTROY_DESTROY_GET(reg_val) \
	((reg_val & GLB_DEBUG_FWUTF_DESTROY_DESTROY_MASK) >> GLB_DEBUG_FWUTF_DESTROY_DESTROY_SHIFT)
#define GLB_DEBUG_FWUTF_DESTROY_DESTROY_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_FWUTF_DESTROY_DESTROY_MASK) |    \
	 ((value << GLB_DEBUG_FWUTF_DESTROY_DESTROY_SHIFT) & GLB_DEBUG_FWUTF_DESTROY_DESTROY_MASK))

/* GLB_DEBUG_FWUTF_TEST register */
#define GLB_DEBUG_FWUTF_TEST_INDEX_SHIFT 0
#define GLB_DEBUG_FWUTF_TEST_INDEX_MASK (0xFFFFFFFF << GLB_DEBUG_FWUTF_TEST_INDEX_SHIFT)
#define GLB_DEBUG_FWUTF_TEST_INDEX_GET(reg_val) \
	((reg_val & GLB_DEBUG_FWUTF_TEST_INDEX_MASK) >> GLB_DEBUG_FWUTF_TEST_INDEX_SHIFT)
#define GLB_DEBUG_FWUTF_TEST_INDEX_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_FWUTF_TEST_INDEX_MASK) |    \
	 ((value << GLB_DEBUG_FWUTF_TEST_INDEX_SHIFT) & GLB_DEBUG_FWUTF_TEST_INDEX_MASK))

/* GLB_DEBUG_FWUTF_FIXTURE register */
#define GLB_DEBUG_FWUTF_FIXTURE_INDEX_SHIFT 0
#define GLB_DEBUG_FWUTF_FIXTURE_INDEX_MASK (0xFFFFFFFF << GLB_DEBUG_FWUTF_FIXTURE_INDEX_SHIFT)
#define GLB_DEBUG_FWUTF_FIXTURE_INDEX_GET(reg_val) \
	((reg_val & GLB_DEBUG_FWUTF_FIXTURE_INDEX_MASK) >> GLB_DEBUG_FWUTF_FIXTURE_INDEX_SHIFT)
#define GLB_DEBUG_FWUTF_FIXTURE_INDEX_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_FWUTF_FIXTURE_INDEX_MASK) |    \
	 ((value << GLB_DEBUG_FWUTF_FIXTURE_INDEX_SHIFT) & GLB_DEBUG_FWUTF_FIXTURE_INDEX_MASK))

/* GLB_DEBUG_FWUTF_CREATE register */
#define GLB_DEBUG_FWUTF_CREATE_CREATE_SHIFT 0
#define GLB_DEBUG_FWUTF_CREATE_CREATE_MASK (0xFFFFFFFF << GLB_DEBUG_FWUTF_CREATE_CREATE_SHIFT)
#define GLB_DEBUG_FWUTF_CREATE_CREATE_GET(reg_val) \
	((reg_val & GLB_DEBUG_FWUTF_CREATE_CREATE_MASK) >> GLB_DEBUG_FWUTF_CREATE_CREATE_SHIFT)
#define GLB_DEBUG_FWUTF_CREATE_CREATE_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_FWUTF_CREATE_CREATE_MASK) |    \
	 ((value << GLB_DEBUG_FWUTF_CREATE_CREATE_SHIFT) & GLB_DEBUG_FWUTF_CREATE_CREATE_MASK))

/* GLB_DEBUG_REQ register */
#define GLB_DEBUG_REQ_FWUTF_RUN_SHIFT 0
#define GLB_DEBUG_REQ_FWUTF_RUN_MASK (0x1 << GLB_DEBUG_REQ_FWUTF_RUN_SHIFT)
#define GLB_DEBUG_REQ_FWUTF_RUN_GET(reg_val) ((reg_val & GLB_DEBUG_REQ_FWUTF_RUN_MASK) >> GLB_DEBUG_REQ_FWUTF_RUN_SHIFT)
#define GLB_DEBUG_REQ_FWUTF_RUN_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_REQ_FWUTF_RUN_MASK) |    \
	 ((value << GLB_DEBUG_REQ_FWUTF_RUN_SHIFT) & GLB_DEBUG_REQ_FWUTF_RUN_MASK))
/* End of GLB_INPUT_BLOCK register set definitions */

/* GLB_OUTPUT_BLOCK register set definitions */

/* GLB_ACK register */
#define GLB_ACK_CFG_PROGRESS_TIMER_SHIFT 1
#define GLB_ACK_CFG_PROGRESS_TIMER_MASK (0x1 << GLB_ACK_CFG_PROGRESS_TIMER_SHIFT)
#define GLB_ACK_CFG_PROGRESS_TIMER_GET(reg_val) \
	((reg_val & GLB_ACK_CFG_PROGRESS_TIMER_MASK) >> GLB_ACK_CFG_PROGRESS_TIMER_SHIFT)
#define GLB_ACK_CFG_PROGRESS_TIMER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_CFG_PROGRESS_TIMER_MASK) |    \
	 ((value << GLB_ACK_CFG_PROGRESS_TIMER_SHIFT) & GLB_ACK_CFG_PROGRESS_TIMER_MASK))
#define GLB_ACK_CFG_ALLOC_EN_SHIFT 2
#define GLB_ACK_CFG_ALLOC_EN_MASK (0x1 << GLB_ACK_CFG_ALLOC_EN_SHIFT)
#define GLB_ACK_CFG_ALLOC_EN_GET(reg_val) ((reg_val & GLB_ACK_CFG_ALLOC_EN_MASK) >> GLB_ACK_CFG_ALLOC_EN_SHIFT)
#define GLB_ACK_CFG_ALLOC_EN_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_CFG_ALLOC_EN_MASK) | ((value << GLB_ACK_CFG_ALLOC_EN_SHIFT) & GLB_ACK_CFG_ALLOC_EN_MASK))
#define GLB_ACK_CFG_PWROFF_TIMER_SHIFT 3
#define GLB_ACK_CFG_PWROFF_TIMER_MASK (0x1 << GLB_ACK_CFG_PWROFF_TIMER_SHIFT)
#define GLB_ACK_CFG_PWROFF_TIMER_GET(reg_val) \
	((reg_val & GLB_ACK_CFG_PWROFF_TIMER_MASK) >> GLB_ACK_CFG_PWROFF_TIMER_SHIFT)
#define GLB_ACK_CFG_PWROFF_TIMER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_CFG_PWROFF_TIMER_MASK) |    \
	 ((value << GLB_ACK_CFG_PWROFF_TIMER_SHIFT) & GLB_ACK_CFG_PWROFF_TIMER_MASK))
#define GLB_ACK_PROTM_SHIFT 4
#define GLB_ACK_PROTM_MASK (0x1 << GLB_ACK_PROTM_SHIFT)
#define GLB_ACK_PROTM_GET(reg_val) ((reg_val & GLB_ACK_PROTM_MASK) >> GLB_ACK_PROTM_SHIFT)
#define GLB_ACK_PROTM_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_PROTM_MASK) | ((value << GLB_ACK_PROTM_SHIFT) & GLB_ACK_PROTM_MASK))
#define GLB_ACK_PRFCNT_ENABLE_SHIFT 5
#define GLB_ACK_PRFCNT_ENABLE_MASK (0x1 << GLB_ACK_PRFCNT_ENABLE_SHIFT)
#define GLB_ACK_PRFCNT_ENABLE_GET(reg_val) ((reg_val & GLB_ACK_PRFCNT_ENABLE_MASK) >> GLB_ACK_PRFCNT_ENABLE_SHIFT)
#define GLB_ACK_PRFCNT_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_PRFCNT_ENABLE_MASK) | ((value << GLB_ACK_PRFCNT_ENABLE_SHIFT) & GLB_ACK_PRFCNT_ENABLE_MASK))
#define GLB_ACK_PRFCNT_SAMPLE_SHIFT 6
#define GLB_ACK_PRFCNT_SAMPLE_MASK (0x1 << GLB_ACK_PRFCNT_SAMPLE_SHIFT)
#define GLB_ACK_PRFCNT_SAMPLE_GET(reg_val) ((reg_val & GLB_ACK_PRFCNT_SAMPLE_MASK) >> GLB_ACK_PRFCNT_SAMPLE_SHIFT)
#define GLB_ACK_PRFCNT_SAMPLE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_PRFCNT_SAMPLE_MASK) | ((value << GLB_ACK_PRFCNT_SAMPLE_SHIFT) & GLB_ACK_PRFCNT_SAMPLE_MASK))
#define GLB_ACK_COUNTER_ENABLE_SHIFT 7
#define GLB_ACK_COUNTER_ENABLE_MASK (0x1 << GLB_ACK_COUNTER_ENABLE_SHIFT)
#define GLB_ACK_COUNTER_ENABLE_GET(reg_val) ((reg_val & GLB_ACK_COUNTER_ENABLE_MASK) >> GLB_ACK_COUNTER_ENABLE_SHIFT)
#define GLB_ACK_COUNTER_ENABLE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_COUNTER_ENABLE_MASK) | ((value << GLB_ACK_COUNTER_ENABLE_SHIFT) & GLB_ACK_COUNTER_ENABLE_MASK))
#define GLB_ACK_PING_SHIFT 8
#define GLB_ACK_PING_MASK (0x1 << GLB_ACK_PING_SHIFT)
#define GLB_ACK_PING_GET(reg_val) ((reg_val & GLB_ACK_PING_MASK) >> GLB_ACK_PING_SHIFT)
#define GLB_ACK_PING_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_PING_MASK) | ((value << GLB_ACK_PING_SHIFT) & GLB_ACK_PING_MASK))
#define GLB_ACK_INACTIVE_COMPUTE_SHIFT 20
#define GLB_ACK_INACTIVE_COMPUTE_MASK (0x1 << GLB_ACK_INACTIVE_COMPUTE_SHIFT)
#define GLB_ACK_INACTIVE_COMPUTE_GET(reg_val) \
	((reg_val & GLB_ACK_INACTIVE_COMPUTE_MASK) >> GLB_ACK_INACTIVE_COMPUTE_SHIFT)
#define GLB_ACK_INACTIVE_COMPUTE_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_INACTIVE_COMPUTE_MASK) |    \
	 ((value << GLB_ACK_INACTIVE_COMPUTE_SHIFT) & GLB_ACK_INACTIVE_COMPUTE_MASK))
#define GLB_ACK_INACTIVE_FRAGMENT_SHIFT 21
#define GLB_ACK_INACTIVE_FRAGMENT_MASK (0x1 << GLB_ACK_INACTIVE_FRAGMENT_SHIFT)
#define GLB_ACK_INACTIVE_FRAGMENT_GET(reg_val) \
	((reg_val & GLB_ACK_INACTIVE_FRAGMENT_MASK) >> GLB_ACK_INACTIVE_FRAGMENT_SHIFT)
#define GLB_ACK_INACTIVE_FRAGMENT_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_INACTIVE_FRAGMENT_MASK) |    \
	 ((value << GLB_ACK_INACTIVE_FRAGMENT_SHIFT) & GLB_ACK_INACTIVE_FRAGMENT_MASK))
#define GLB_ACK_INACTIVE_TILER_SHIFT 22
#define GLB_ACK_INACTIVE_TILER_MASK (0x1 << GLB_ACK_INACTIVE_TILER_SHIFT)
#define GLB_ACK_INACTIVE_TILER_GET(reg_val) ((reg_val & GLB_ACK_INACTIVE_TILER_MASK) >> GLB_ACK_INACTIVE_TILER_SHIFT)
#define GLB_ACK_INACTIVE_TILER_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_INACTIVE_TILER_MASK) | ((value << GLB_ACK_INACTIVE_TILER_SHIFT) & GLB_ACK_INACTIVE_TILER_MASK))
#define GLB_ACK_PROTM_EXIT_SHIFT 23
#define GLB_ACK_PROTM_EXIT_MASK (0x1 << GLB_ACK_PROTM_EXIT_SHIFT)
#define GLB_ACK_PROTM_EXIT_GET(reg_val) ((reg_val & GLB_ACK_PROTM_EXIT_MASK) >> GLB_ACK_PROTM_EXIT_SHIFT)
#define GLB_ACK_PROTM_EXIT_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_PROTM_EXIT_MASK) | ((value << GLB_ACK_PROTM_EXIT_SHIFT) & GLB_ACK_PROTM_EXIT_MASK))
#define GLB_ACK_DEBUG_CSF_REQ_SHIFT 30
#define GLB_ACK_DEBUG_CSF_REQ_MASK (0x1 << GLB_ACK_DEBUG_CSF_REQ_SHIFT)
#define GLB_ACK_DEBUG_CSF_REQ_GET(reg_val) ((reg_val & GLB_ACK_DEBUG_CSF_REQ_MASK) >> GLB_ACK_DEBUG_CSF_REQ_SHIFT)
#define GLB_ACK_DEBUG_CSF_REQ_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_DEBUG_CSF_REQ_MASK) | ((value << GLB_ACK_DEBUG_CSF_REQ_SHIFT) & GLB_ACK_DEBUG_CSF_REQ_MASK))
#define GLB_ACK_DEBUG_HOST_REQ_SHIFT 31
#define GLB_ACK_DEBUG_HOST_REQ_MASK (0x1 << GLB_ACK_DEBUG_HOST_REQ_SHIFT)
#define GLB_ACK_DEBUG_HOST_REQ_GET(reg_val) ((reg_val & GLB_ACK_DEBUG_HOST_REQ_MASK) >> GLB_ACK_DEBUG_HOST_REQ_SHIFT)
#define GLB_ACK_DEBUG_HOST_REQ_SET(reg_val, value) \
	((reg_val & ~GLB_ACK_DEBUG_HOST_REQ_MASK) | ((value << GLB_ACK_DEBUG_HOST_REQ_SHIFT) & GLB_ACK_DEBUG_HOST_REQ_MASK))

/* GLB_DB_ACK register */
#define GLB_DB_ACK_MASK_SHIFT 0
#define GLB_DB_ACK_MASK_MASK (0xFFFFFFFF << GLB_DB_ACK_MASK_SHIFT)
#define GLB_DB_ACK_MASK_GET(reg_val) ((reg_val & GLB_DB_ACK_MASK_MASK) >> GLB_DB_ACK_MASK_SHIFT)
#define GLB_DB_ACK_MASK_SET(reg_val, value) \
	((reg_val & ~GLB_DB_ACK_MASK_MASK) | ((value << GLB_DB_ACK_MASK_SHIFT) & GLB_DB_ACK_MASK_MASK))

/* GLB_HALT_STATUS register */
#define GLB_HALT_STATUS_VALUE_SHIFT 0
#define GLB_HALT_STATUS_VALUE_MASK (0xFFFFFFFF << GLB_HALT_STATUS_VALUE_SHIFT)
#define GLB_HALT_STATUS_VALUE_GET(reg_val) ((reg_val & GLB_HALT_STATUS_VALUE_MASK) >> GLB_HALT_STATUS_VALUE_SHIFT)
#define GLB_HALT_STATUS_VALUE_SET(reg_val, value) \
	((reg_val & ~GLB_HALT_STATUS_VALUE_MASK) | ((value << GLB_HALT_STATUS_VALUE_SHIFT) & GLB_HALT_STATUS_VALUE_MASK))
/* GLB_HALT_STATUS_VALUE values */
#define GLB_HALT_STATUS_VALUE_OK 0x00
#define GLB_HALT_STATUS_VALUE_PANIC 0x4E
#define GLB_HALT_STATUS_VALUE_WD 0x4F
/* End of GLB_HALT_STATUS_VALUE values */

/* GLB_PRFCNT_STATUS register */
#define GLB_PRFCNT_STATUS_FAILED_SHIFT 0
#define GLB_PRFCNT_STATUS_FAILED_MASK (0x1 << GLB_PRFCNT_STATUS_FAILED_SHIFT)
#define GLB_PRFCNT_STATUS_FAILED_GET(reg_val) \
	((reg_val & GLB_PRFCNT_STATUS_FAILED_MASK) >> GLB_PRFCNT_STATUS_FAILED_SHIFT)
#define GLB_PRFCNT_STATUS_FAILED_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_STATUS_FAILED_MASK) |    \
	 ((value << GLB_PRFCNT_STATUS_FAILED_SHIFT) & GLB_PRFCNT_STATUS_FAILED_MASK))
#define GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_SHIFT 1
#define GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_MASK (0x1 << GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_SHIFT)
#define GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_GET(reg_val) \
	((reg_val & GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_MASK) >> GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_SHIFT)
#define GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_MASK) |    \
	 ((value << GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_SHIFT) & GLB_PRFCNT_STATUS_POWER_ON_TRANSITION_MASK))
#define GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_SHIFT 2
#define GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_MASK (0x1 << GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_SHIFT)
#define GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_GET(reg_val) \
	((reg_val & GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_MASK) >> GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_SHIFT)
#define GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_MASK) |    \
	 ((value << GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_SHIFT) & GLB_PRFCNT_STATUS_POWER_OFF_TRANSITION_MASK))
#define GLB_PRFCNT_STATUS_PROTECTED_SESSION_SHIFT 3
#define GLB_PRFCNT_STATUS_PROTECTED_SESSION_MASK (0x1 << GLB_PRFCNT_STATUS_PROTECTED_SESSION_SHIFT)
#define GLB_PRFCNT_STATUS_PROTECTED_SESSION_GET(reg_val) \
	((reg_val & GLB_PRFCNT_STATUS_PROTECTED_SESSION_MASK) >> GLB_PRFCNT_STATUS_PROTECTED_SESSION_SHIFT)
#define GLB_PRFCNT_STATUS_PROTECTED_SESSION_SET(reg_val, value) \
	((reg_val & ~GLB_PRFCNT_STATUS_PROTECTED_SESSION_MASK) |    \
	 ((value << GLB_PRFCNT_STATUS_PROTECTED_SESSION_SHIFT) & GLB_PRFCNT_STATUS_PROTECTED_SESSION_MASK))

/* GLB_DEBUG_FWUTF_RESULT register */
#define GLB_DEBUG_FWUTF_RESULT_VALUE_SHIFT 0
#define GLB_DEBUG_FWUTF_RESULT_VALUE_MASK (0xFFFFFFFF << GLB_DEBUG_FWUTF_RESULT_VALUE_SHIFT)
#define GLB_DEBUG_FWUTF_RESULT_VALUE_GET(reg_val) \
	((reg_val & GLB_DEBUG_FWUTF_RESULT_VALUE_MASK) >> GLB_DEBUG_FWUTF_RESULT_VALUE_SHIFT)
#define GLB_DEBUG_FWUTF_RESULT_VALUE_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_FWUTF_RESULT_VALUE_MASK) |    \
	 ((value << GLB_DEBUG_FWUTF_RESULT_VALUE_SHIFT) & GLB_DEBUG_FWUTF_RESULT_VALUE_MASK))

/* GLB_DEBUG_ACK register */
#define GLB_DEBUG_ACK_FWUTF_RUN_SHIFT 0
#define GLB_DEBUG_ACK_FWUTF_RUN_MASK (0x1 << GLB_DEBUG_ACK_FWUTF_RUN_SHIFT)
#define GLB_DEBUG_ACK_FWUTF_RUN_GET(reg_val) ((reg_val & GLB_DEBUG_ACK_FWUTF_RUN_MASK) >> GLB_DEBUG_ACK_FWUTF_RUN_SHIFT)
#define GLB_DEBUG_ACK_FWUTF_RUN_SET(reg_val, value) \
	((reg_val & ~GLB_DEBUG_ACK_FWUTF_RUN_MASK) |    \
	 ((value << GLB_DEBUG_ACK_FWUTF_RUN_SHIFT) & GLB_DEBUG_ACK_FWUTF_RUN_MASK))
/* End of GLB_OUTPUT_BLOCK register set definitions */

#endif /* _GPU_CSF_REGISTERS_H_ */
